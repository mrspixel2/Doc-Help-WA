{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _util = require('./util');\n\nvar _validator = require('./validator/');\n\nvar _validator2 = _interopRequireDefault(_validator);\n\nvar _messages2 = require('./messages');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\n\n\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = _messages2.messages;\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages: function messages(_messages) {\n    if (_messages) {\n      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);\n    }\n\n    return this._messages;\n  },\n  define: function define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n\n    if ((typeof rules === 'undefined' ? 'undefined' : _typeof(rules)) !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n\n    this.rules = {};\n    var z = void 0;\n    var item = void 0;\n\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate: function validate(source_) {\n    var _this = this;\n\n    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var oc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n    var source = source_;\n    var options = o;\n    var callback = oc;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback();\n      }\n\n      return Promise.resolve();\n    }\n\n    function complete(results) {\n      var i = void 0;\n      var errors = [];\n      var fields = {};\n\n      function add(e) {\n        if (Array.isArray(e)) {\n          var _errors;\n\n          errors = (_errors = errors).concat.apply(_errors, e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        fields = (0, _util.convertFieldsError)(errors);\n      }\n\n      callback(errors, fields);\n    }\n\n    if (options.messages) {\n      var messages = this.messages();\n\n      if (messages === _messages2.messages) {\n        messages = (0, _messages2.newMessages)();\n      }\n\n      (0, _util.deepMerge)(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n\n    var arr = void 0;\n    var value = void 0;\n    var series = {};\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      arr = _this.rules[z];\n      value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = _extends({}, source);\n          }\n\n          value = source[z] = rule.transform(value);\n        }\n\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        } else {\n          rule = _extends({}, rule);\n        }\n\n        rule.validator = _this.getValidationMethod(rule);\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this.getType(rule);\n\n        if (!rule.validator) {\n          return;\n        }\n\n        series[z] = series[z] || [];\n        series[z].push({\n          rule: rule,\n          value: value,\n          source: source,\n          field: z\n        });\n      });\n    });\n    var errorFields = {};\n    return (0, _util.asyncMap)(series, options, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && (_typeof(rule.fields) === 'object' || _typeof(rule.defaultField) === 'object');\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n\n      function addFullfield(key, schema) {\n        return _extends({}, schema, {\n          fullField: rule.fullField + '.' + key\n        });\n      }\n\n      function cb() {\n        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var errors = e;\n\n        if (!Array.isArray(errors)) {\n          errors = [errors];\n        }\n\n        if (!options.suppressWarning && errors.length) {\n          Schema.warning('async-validator:', errors);\n        }\n\n        if (errors.length && rule.message) {\n          errors = [].concat(rule.message);\n        }\n\n        errors = errors.map((0, _util.complementError)(rule));\n\n        if (options.first && errors.length) {\n          errorFields[rule.field] = 1;\n          return doIt(errors);\n        }\n\n        if (!deep) {\n          doIt(errors);\n        } else {\n          // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n          if (rule.required && !data.value) {\n            if (rule.message) {\n              errors = [].concat(rule.message).map((0, _util.complementError)(rule));\n            } else if (options.error) {\n              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];\n            } else {\n              errors = [];\n            }\n\n            return doIt(errors);\n          }\n\n          var fieldsSchema = {};\n\n          if (rule.defaultField) {\n            for (var k in data.value) {\n              if (data.value.hasOwnProperty(k)) {\n                fieldsSchema[k] = rule.defaultField;\n              }\n            }\n          }\n\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\n\n          for (var f in fieldsSchema) {\n            if (fieldsSchema.hasOwnProperty(f)) {\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n            }\n          }\n\n          var schema = new Schema(fieldsSchema);\n          schema.messages(options.messages);\n\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            var finalErrors = [];\n\n            if (errors && errors.length) {\n              finalErrors.push.apply(finalErrors, errors);\n            }\n\n            if (errs && errs.length) {\n              finalErrors.push.apply(finalErrors, errs);\n            }\n\n            doIt(finalErrors.length ? finalErrors : null);\n          });\n        }\n      }\n\n      var res = void 0;\n\n      if (rule.asyncValidator) {\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n      } else if (rule.validator) {\n        res = rule.validator(rule, data.value, cb, data.source, options);\n\n        if (res === true) {\n          cb();\n        } else if (res === false) {\n          cb(rule.message || rule.field + ' fails');\n        } else if (res instanceof Array) {\n          cb(res);\n        } else if (res instanceof Error) {\n          cb(res.message);\n        }\n      }\n\n      if (res && res.then) {\n        res.then(function () {\n          return cb();\n        }, function (e) {\n          return cb(e);\n        });\n      }\n    }, function (results) {\n      complete(results);\n    });\n  },\n  getType: function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\n      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));\n    }\n\n    return rule.type || 'string';\n  },\n  getValidationMethod: function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n\n    var keys = Object.keys(rule);\n    var messageIndex = keys.indexOf('message');\n\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n\n    if (keys.length === 1 && keys[0] === 'required') {\n      return _validator2['default'].required;\n    }\n\n    return _validator2['default'][this.getType(rule)] || false;\n  }\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n\n  _validator2['default'][type] = validator;\n};\n\nSchema.warning = _util.warning;\nSchema.messages = _messages2.messages;\nexports['default'] = Schema;","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","_util","require","_validator","_validator2","_interopRequireDefault","_messages2","__esModule","Schema","descriptor","rules","_messages","messages","define","deepMerge","newMessages","Error","Array","isArray","z","item","validate","source_","_this","o","undefined","oc","options","callback","keys","Promise","resolve","complete","results","errors","fields","add","e","_errors","concat","apply","push","convertFieldsError","arr","series","forEach","r","rule","transform","validator","getValidationMethod","field","fullField","type","getType","errorFields","asyncMap","data","doIt","deep","defaultField","required","addFullfield","schema","cb","suppressWarning","warning","message","map","complementError","first","error","format","fieldsSchema","k","f","fieldSchema","bind","errs","finalErrors","res","asyncValidator","then","pattern","RegExp","messageIndex","indexOf","splice","register"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/node_modules/async-validator/es/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('./util');\n\nvar _validator = require('./validator/');\n\nvar _validator2 = _interopRequireDefault(_validator);\n\nvar _messages2 = require('./messages');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = _messages2.messages;\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages: function messages(_messages) {\n    if (_messages) {\n      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);\n    }\n    return this._messages;\n  },\n  define: function define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if ((typeof rules === 'undefined' ? 'undefined' : _typeof(rules)) !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n    var z = void 0;\n    var item = void 0;\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate: function validate(source_) {\n    var _this = this;\n\n    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var oc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n\n    var source = source_;\n    var options = o;\n    var callback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback();\n      }\n      return Promise.resolve();\n    }\n\n    function complete(results) {\n      var i = void 0;\n      var errors = [];\n      var fields = {};\n\n      function add(e) {\n        if (Array.isArray(e)) {\n          var _errors;\n\n          errors = (_errors = errors).concat.apply(_errors, e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        fields = (0, _util.convertFieldsError)(errors);\n      }\n      callback(errors, fields);\n    }\n\n    if (options.messages) {\n      var messages = this.messages();\n      if (messages === _messages2.messages) {\n        messages = (0, _messages2.newMessages)();\n      }\n      (0, _util.deepMerge)(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n    var arr = void 0;\n    var value = void 0;\n    var series = {};\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      arr = _this.rules[z];\n      value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = _extends({}, source);\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        } else {\n          rule = _extends({}, rule);\n        }\n        rule.validator = _this.getValidationMethod(rule);\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this.getType(rule);\n        if (!rule.validator) {\n          return;\n        }\n        series[z] = series[z] || [];\n        series[z].push({\n          rule: rule,\n          value: value,\n          source: source,\n          field: z\n        });\n      });\n    });\n    var errorFields = {};\n    return (0, _util.asyncMap)(series, options, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && (_typeof(rule.fields) === 'object' || _typeof(rule.defaultField) === 'object');\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n\n      function addFullfield(key, schema) {\n        return _extends({}, schema, {\n          fullField: rule.fullField + '.' + key\n        });\n      }\n\n      function cb() {\n        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        var errors = e;\n        if (!Array.isArray(errors)) {\n          errors = [errors];\n        }\n        if (!options.suppressWarning && errors.length) {\n          Schema.warning('async-validator:', errors);\n        }\n        if (errors.length && rule.message) {\n          errors = [].concat(rule.message);\n        }\n\n        errors = errors.map((0, _util.complementError)(rule));\n\n        if (options.first && errors.length) {\n          errorFields[rule.field] = 1;\n          return doIt(errors);\n        }\n        if (!deep) {\n          doIt(errors);\n        } else {\n          // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n          if (rule.required && !data.value) {\n            if (rule.message) {\n              errors = [].concat(rule.message).map((0, _util.complementError)(rule));\n            } else if (options.error) {\n              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];\n            } else {\n              errors = [];\n            }\n            return doIt(errors);\n          }\n\n          var fieldsSchema = {};\n          if (rule.defaultField) {\n            for (var k in data.value) {\n              if (data.value.hasOwnProperty(k)) {\n                fieldsSchema[k] = rule.defaultField;\n              }\n            }\n          }\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\n          for (var f in fieldsSchema) {\n            if (fieldsSchema.hasOwnProperty(f)) {\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n            }\n          }\n          var schema = new Schema(fieldsSchema);\n          schema.messages(options.messages);\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            var finalErrors = [];\n            if (errors && errors.length) {\n              finalErrors.push.apply(finalErrors, errors);\n            }\n            if (errs && errs.length) {\n              finalErrors.push.apply(finalErrors, errs);\n            }\n            doIt(finalErrors.length ? finalErrors : null);\n          });\n        }\n      }\n\n      var res = void 0;\n      if (rule.asyncValidator) {\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n      } else if (rule.validator) {\n        res = rule.validator(rule, data.value, cb, data.source, options);\n        if (res === true) {\n          cb();\n        } else if (res === false) {\n          cb(rule.message || rule.field + ' fails');\n        } else if (res instanceof Array) {\n          cb(res);\n        } else if (res instanceof Error) {\n          cb(res.message);\n        }\n      }\n      if (res && res.then) {\n        res.then(function () {\n          return cb();\n        }, function (e) {\n          return cb(e);\n        });\n      }\n    }, function (results) {\n      complete(results);\n    });\n  },\n  getType: function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\n      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  },\n  getValidationMethod: function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    var keys = Object.keys(rule);\n    var messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return _validator2['default'].required;\n    }\n    return _validator2['default'][this.getType(rule)] || false;\n  }\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n  _validator2['default'][type] = validator;\n};\n\nSchema.warning = _util.warning;\n\nSchema.messages = _messages2.messages;\n\nexports['default'] = Schema;"],"mappings":"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"},"metadata":{},"sourceType":"script"}