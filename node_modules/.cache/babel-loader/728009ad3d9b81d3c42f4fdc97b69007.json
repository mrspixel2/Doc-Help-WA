{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftPasteProcessor\n * @format\n * \n */\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar _extends = _assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar ContentBlock = require('./ContentBlock');\n\nvar ContentBlockNode = require('./ContentBlockNode');\n\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\n\nvar Immutable = require('immutable');\n\nvar convertFromHTMLtoContentBlocks = require('./convertFromHTMLToContentBlocks');\n\nvar generateRandomKey = require('./generateRandomKey');\n\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\n\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLtoContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n  processText: function processText(textBlocks, character, type) {\n    return textBlocks.reduce(function (acc, textLine, index) {\n      textLine = sanitizeDraftText(textLine);\n      var key = generateRandomKey();\n      var blockNodeConfig = {\n        key: key,\n        type: type,\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      }; // next block updates previous block\n\n      if (experimentalTreeDataSupport && index !== 0) {\n        var prevSiblingIndex = index - 1; // update previous block\n\n        var previousBlock = acc[prevSiblingIndex] = acc[prevSiblingIndex].merge({\n          nextSibling: key\n        });\n        blockNodeConfig = _extends({}, blockNodeConfig, {\n          prevSibling: previousBlock.getKey()\n        });\n      }\n\n      acc.push(new ContentBlockRecord(blockNodeConfig));\n      return acc;\n    }, []);\n  }\n};\nmodule.exports = DraftPasteProcessor;","map":{"version":3,"names":["_assign","require","_extends","target","i","arguments","length","source","key","Object","prototype","hasOwnProperty","call","CharacterMetadata","ContentBlock","ContentBlockNode","DraftFeatureFlags","Immutable","convertFromHTMLtoContentBlocks","generateRandomKey","getSafeBodyFromHTML","sanitizeDraftText","List","Repeat","experimentalTreeDataSupport","draft_tree_data_support","ContentBlockRecord","DraftPasteProcessor","processHTML","html","blockRenderMap","processText","textBlocks","character","type","reduce","acc","textLine","index","blockNodeConfig","text","characterList","prevSiblingIndex","previousBlock","merge","nextSibling","prevSibling","getKey","push","module","exports"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/node_modules/draft-js/lib/DraftPasteProcessor.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftPasteProcessor\n * @format\n * \n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar ContentBlockNode = require('./ContentBlockNode');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\n\nvar convertFromHTMLtoContentBlocks = require('./convertFromHTMLToContentBlocks');\nvar generateRandomKey = require('./generateRandomKey');\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\n\n\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\n\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLtoContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n  processText: function processText(textBlocks, character, type) {\n    return textBlocks.reduce(function (acc, textLine, index) {\n      textLine = sanitizeDraftText(textLine);\n      var key = generateRandomKey();\n\n      var blockNodeConfig = {\n        key: key,\n        type: type,\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      };\n\n      // next block updates previous block\n      if (experimentalTreeDataSupport && index !== 0) {\n        var prevSiblingIndex = index - 1;\n        // update previous block\n        var previousBlock = acc[prevSiblingIndex] = acc[prevSiblingIndex].merge({\n          nextSibling: key\n        });\n        blockNodeConfig = _extends({}, blockNodeConfig, {\n          prevSibling: previousBlock.getKey()\n        });\n      }\n\n      acc.push(new ContentBlockRecord(blockNodeConfig));\n\n      return acc;\n    }, []);\n  }\n};\n\nmodule.exports = DraftPasteProcessor;"],"mappings":"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"},"metadata":{},"sourceType":"script"}