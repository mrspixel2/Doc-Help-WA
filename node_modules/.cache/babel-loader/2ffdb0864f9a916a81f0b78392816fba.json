{"ast":null,"code":"import { useEffect, useState } from \"react\";\n\nconst fetchData = async () => {\n  const [counts, setCounts] = useState([]);\n  const res = await fetch(\"http://localhost:5000/query/approval_count_per_desease\");\n  const data = await res.json().then(data => {\n    setCounts(data.map(d => {\n      return {\n        name: d._id,\n        approved: d.approved,\n        rejected: d.unapproved,\n        total: d.approved + d.unapproved\n      };\n    }));\n  });\n  console.log(data);\n};\n\nuseEffect(() => {\n  fetchData();\n}, []);\nexport default {\n  color: ['#ed5564', '#336cfb'],\n  tooltip: {\n    trigger: 'none',\n    axisPointer: {\n      type: 'cross'\n    }\n  },\n  legend: {\n    data: ['patients 2018', 'patients 2019']\n  },\n  grid: {\n    left: 30,\n    right: 0,\n    top: 50,\n    bottom: 50\n  },\n  xAxis: [{\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true\n    },\n    axisLine: {\n      onZero: false,\n      lineStyle: {\n        color: '#336cfb'\n      }\n    },\n    axisPointer: {\n      label: {\n        formatter: function (params) {\n          return 'patients ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n        }\n      }\n    },\n    data: ['2019-1', '2019-2', '2019-3', '2019-4', '2019-5', '2019-6', '2019-7', '2019-8', '2019-9', '2019-10', '2019-11', '2019-12']\n  }, {\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true\n    },\n    axisLine: {\n      onZero: false,\n      lineStyle: {\n        color: '#ed5564'\n      }\n    },\n    axisPointer: {\n      label: {\n        formatter: function (params) {\n          return 'patients ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '');\n        }\n      }\n    },\n    data: ['2018-1', '2018-2', '2018-3', '2018-4', '2018-5', '2018-6', '2018-7', '2018-8', '2018-9', '2018-10', '2018-11', '2018-12']\n  }],\n  yAxis: [{\n    type: 'value'\n  }],\n  series: [{\n    name: 'patients 2018',\n    type: 'line',\n    xAxisIndex: 1,\n    smooth: true,\n    data: [159, 149, 174, 182, 219, 201, 175, 182, 119, 118, 112, 96]\n  }, {\n    name: 'patients 2019',\n    type: 'line',\n    smooth: true,\n    data: [95, 124, 132, 143, 138, 178, 194, 211, 234, 257, 241, 226]\n  }]\n};","map":{"version":3,"names":["useEffect","useState","fetchData","counts","setCounts","res","fetch","data","json","then","map","d","name","_id","approved","rejected","unapproved","total","console","log","color","tooltip","trigger","axisPointer","type","legend","grid","left","right","top","bottom","xAxis","axisTick","alignWithLabel","axisLine","onZero","lineStyle","label","formatter","params","value","seriesData","length","yAxis","series","xAxisIndex","smooth"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/dashboards/dashboard/charts/predictions-month-linechart.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n\r\nconst fetchData = async () => {\r\n    const [counts, setCounts] = useState([]);\r\n    const res = await fetch(\"http://localhost:5000/query/approval_count_per_desease\");\r\n    const data = await res.json()\r\n    .then(data => {\r\n    setCounts(data.map((d) => {\r\n        return {\r\n            name: d._id,\r\n            approved: d.approved,\r\n            rejected: d.unapproved,\r\n            total: d.approved + d.unapproved\r\n        }\r\n    }))\r\n    });\r\n    console.log(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  fetchData();\r\n  }, []);\r\n\r\nexport default {\r\n    color: ['#ed5564', '#336cfb'],\r\n    tooltip: {\r\n        trigger: 'none',\r\n        axisPointer: {\r\n            type: 'cross'\r\n        }\r\n    },\r\n    legend: {\r\n        data: ['patients 2018', 'patients 2019']\r\n    },\r\n    grid: {\r\n        left: 30,\r\n        right: 0,\r\n        top: 50,\r\n        bottom: 50\r\n    },\r\n    xAxis: [\r\n        {\r\n            type: 'category',\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            },\r\n            axisLine: {\r\n                onZero: false,\r\n                lineStyle: {\r\n                    color: '#336cfb'\r\n                }\r\n            },\r\n            axisPointer: {\r\n                label: {\r\n                    formatter: function (params) {\r\n                        return (\r\n                            'patients ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '')\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n            data: [\r\n                '2019-1',\r\n                '2019-2',\r\n                '2019-3',\r\n                '2019-4',\r\n                '2019-5',\r\n                '2019-6',\r\n                '2019-7',\r\n                '2019-8',\r\n                '2019-9',\r\n                '2019-10',\r\n                '2019-11',\r\n                '2019-12'\r\n            ]\r\n        },\r\n        {\r\n            type: 'category',\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            },\r\n            axisLine: {\r\n                onZero: false,\r\n                lineStyle: {\r\n                    color: '#ed5564'\r\n                }\r\n            },\r\n            axisPointer: {\r\n                label: {\r\n                    formatter: function (params) {\r\n                        return (\r\n                            'patients ' + params.value + (params.seriesData.length ? '：' + params.seriesData[0].data : '')\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n            data: [\r\n                '2018-1',\r\n                '2018-2',\r\n                '2018-3',\r\n                '2018-4',\r\n                '2018-5',\r\n                '2018-6',\r\n                '2018-7',\r\n                '2018-8',\r\n                '2018-9',\r\n                '2018-10',\r\n                '2018-11',\r\n                '2018-12'\r\n            ]\r\n        }\r\n    ],\r\n    yAxis: [\r\n        {\r\n            type: 'value'\r\n        }\r\n    ],\r\n    series: [\r\n        {\r\n            name: 'patients 2018',\r\n            type: 'line',\r\n            xAxisIndex: 1,\r\n            smooth: true,\r\n            data: [159, 149, 174, 182, 219, 201, 175, 182, 119, 118, 112, 96]\r\n        },\r\n        {\r\n            name: 'patients 2019',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: [95, 124, 132, 143, 138, 178, 194, 211, 234, 257, 241, 226]\r\n        }\r\n    ]\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}