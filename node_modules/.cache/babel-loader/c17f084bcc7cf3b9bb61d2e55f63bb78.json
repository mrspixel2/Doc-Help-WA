{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from \"rc-util/es/warning\";\nexport function getMotion(_ref, _ref2, menuMode) {\n  var prefixCls = _ref.prefixCls,\n      motion = _ref.motion,\n      _ref$defaultMotions = _ref.defaultMotions,\n      defaultMotions = _ref$defaultMotions === void 0 ? {} : _ref$defaultMotions,\n      openAnimation = _ref.openAnimation,\n      openTransitionName = _ref.openTransitionName;\n  var switchingModeFromInline = _ref2.switchingModeFromInline;\n\n  if (motion) {\n    return motion;\n  }\n\n  if (_typeof(openAnimation) === 'object' && openAnimation) {\n    warning(false, 'Object type of `openAnimation` is removed. Please use `motion` instead.');\n  } else if (typeof openAnimation === 'string') {\n    return {\n      motionName: \"\".concat(prefixCls, \"-open-\").concat(openAnimation)\n    };\n  }\n\n  if (openTransitionName) {\n    return {\n      motionName: openTransitionName\n    };\n  } // Default logic\n\n\n  var defaultMotion = defaultMotions[menuMode];\n\n  if (defaultMotion) {\n    return defaultMotion;\n  } // When mode switch from inline\n  // submenu should hide without animation\n\n\n  return switchingModeFromInline ? null : defaultMotions.other;\n}","map":{"version":3,"names":["_typeof","warning","getMotion","_ref","_ref2","menuMode","prefixCls","motion","_ref$defaultMotions","defaultMotions","openAnimation","openTransitionName","switchingModeFromInline","motionName","concat","defaultMotion","other"],"sources":["E:/Work/PFE/Project folder/DocHelp/node_modules/rc-menu/es/utils/legacyUtil.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from \"rc-util/es/warning\";\nexport function getMotion(_ref, _ref2, menuMode) {\n  var prefixCls = _ref.prefixCls,\n      motion = _ref.motion,\n      _ref$defaultMotions = _ref.defaultMotions,\n      defaultMotions = _ref$defaultMotions === void 0 ? {} : _ref$defaultMotions,\n      openAnimation = _ref.openAnimation,\n      openTransitionName = _ref.openTransitionName;\n  var switchingModeFromInline = _ref2.switchingModeFromInline;\n\n  if (motion) {\n    return motion;\n  }\n\n  if (_typeof(openAnimation) === 'object' && openAnimation) {\n    warning(false, 'Object type of `openAnimation` is removed. Please use `motion` instead.');\n  } else if (typeof openAnimation === 'string') {\n    return {\n      motionName: \"\".concat(prefixCls, \"-open-\").concat(openAnimation)\n    };\n  }\n\n  if (openTransitionName) {\n    return {\n      motionName: openTransitionName\n    };\n  } // Default logic\n\n\n  var defaultMotion = defaultMotions[menuMode];\n\n  if (defaultMotion) {\n    return defaultMotion;\n  } // When mode switch from inline\n  // submenu should hide without animation\n\n\n  return switchingModeFromInline ? null : defaultMotions.other;\n}"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;EAC/C,IAAIC,SAAS,GAAGH,IAAI,CAACG,SAArB;EAAA,IACIC,MAAM,GAAGJ,IAAI,CAACI,MADlB;EAAA,IAEIC,mBAAmB,GAAGL,IAAI,CAACM,cAF/B;EAAA,IAGIA,cAAc,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,EAAjC,GAAsCA,mBAH3D;EAAA,IAIIE,aAAa,GAAGP,IAAI,CAACO,aAJzB;EAAA,IAKIC,kBAAkB,GAAGR,IAAI,CAACQ,kBAL9B;EAMA,IAAIC,uBAAuB,GAAGR,KAAK,CAACQ,uBAApC;;EAEA,IAAIL,MAAJ,EAAY;IACV,OAAOA,MAAP;EACD;;EAED,IAAIP,OAAO,CAACU,aAAD,CAAP,KAA2B,QAA3B,IAAuCA,aAA3C,EAA0D;IACxDT,OAAO,CAAC,KAAD,EAAQ,yEAAR,CAAP;EACD,CAFD,MAEO,IAAI,OAAOS,aAAP,KAAyB,QAA7B,EAAuC;IAC5C,OAAO;MACLG,UAAU,EAAE,GAAGC,MAAH,CAAUR,SAAV,EAAqB,QAArB,EAA+BQ,MAA/B,CAAsCJ,aAAtC;IADP,CAAP;EAGD;;EAED,IAAIC,kBAAJ,EAAwB;IACtB,OAAO;MACLE,UAAU,EAAEF;IADP,CAAP;EAGD,CAzB8C,CAyB7C;;;EAGF,IAAII,aAAa,GAAGN,cAAc,CAACJ,QAAD,CAAlC;;EAEA,IAAIU,aAAJ,EAAmB;IACjB,OAAOA,aAAP;EACD,CAhC8C,CAgC7C;EACF;;;EAGA,OAAOH,uBAAuB,GAAG,IAAH,GAAUH,cAAc,CAACO,KAAvD;AACD"},"metadata":{},"sourceType":"module"}