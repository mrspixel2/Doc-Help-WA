{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule removeTextWithStrategy\n * @format\n * \n */\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\n/**\n * For a collapsed selection state, remove text based on the specified strategy.\n * If the selection state is not collapsed, remove the entire selected range.\n */\n\n\nfunction removeTextWithStrategy(editorState, strategy, direction) {\n  var selection = editorState.getSelection();\n  var content = editorState.getCurrentContent();\n  var target = selection;\n\n  if (selection.isCollapsed()) {\n    if (direction === 'forward') {\n      if (editorState.isSelectionAtEndOfContent()) {\n        return content;\n      }\n    } else if (editorState.isSelectionAtStartOfContent()) {\n      return content;\n    }\n\n    target = strategy(editorState);\n\n    if (target === selection) {\n      return content;\n    }\n  }\n\n  return DraftModifier.removeRange(content, target, direction);\n}\n\nmodule.exports = removeTextWithStrategy;","map":{"version":3,"names":["DraftModifier","require","removeTextWithStrategy","editorState","strategy","direction","selection","getSelection","content","getCurrentContent","target","isCollapsed","isSelectionAtEndOfContent","isSelectionAtStartOfContent","removeRange","module","exports"],"sources":["E:/Work/PFE/Project folder/DocHelp/node_modules/draft-js/lib/removeTextWithStrategy.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule removeTextWithStrategy\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\n\n/**\n * For a collapsed selection state, remove text based on the specified strategy.\n * If the selection state is not collapsed, remove the entire selected range.\n */\nfunction removeTextWithStrategy(editorState, strategy, direction) {\n  var selection = editorState.getSelection();\n  var content = editorState.getCurrentContent();\n  var target = selection;\n  if (selection.isCollapsed()) {\n    if (direction === 'forward') {\n      if (editorState.isSelectionAtEndOfContent()) {\n        return content;\n      }\n    } else if (editorState.isSelectionAtStartOfContent()) {\n      return content;\n    }\n\n    target = strategy(editorState);\n    if (target === selection) {\n      return content;\n    }\n  }\n  return DraftModifier.removeRange(content, target, direction);\n}\n\nmodule.exports = removeTextWithStrategy;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;AAEA;AACA;AACA;AACA;;;AACA,SAASC,sBAAT,CAAgCC,WAAhC,EAA6CC,QAA7C,EAAuDC,SAAvD,EAAkE;EAChE,IAAIC,SAAS,GAAGH,WAAW,CAACI,YAAZ,EAAhB;EACA,IAAIC,OAAO,GAAGL,WAAW,CAACM,iBAAZ,EAAd;EACA,IAAIC,MAAM,GAAGJ,SAAb;;EACA,IAAIA,SAAS,CAACK,WAAV,EAAJ,EAA6B;IAC3B,IAAIN,SAAS,KAAK,SAAlB,EAA6B;MAC3B,IAAIF,WAAW,CAACS,yBAAZ,EAAJ,EAA6C;QAC3C,OAAOJ,OAAP;MACD;IACF,CAJD,MAIO,IAAIL,WAAW,CAACU,2BAAZ,EAAJ,EAA+C;MACpD,OAAOL,OAAP;IACD;;IAEDE,MAAM,GAAGN,QAAQ,CAACD,WAAD,CAAjB;;IACA,IAAIO,MAAM,KAAKJ,SAAf,EAA0B;MACxB,OAAOE,OAAP;IACD;EACF;;EACD,OAAOR,aAAa,CAACc,WAAd,CAA0BN,OAA1B,EAAmCE,MAAnC,EAA2CL,SAA3C,CAAP;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiBd,sBAAjB"},"metadata":{},"sourceType":"script"}