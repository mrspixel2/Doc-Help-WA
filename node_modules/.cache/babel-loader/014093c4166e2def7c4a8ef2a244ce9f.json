{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\dashboards\\\\dashboard\\\\charts\\\\KidneySymptomsCountTable.tsx\";\nimport React, { useEffect, useState } from 'react';\n\nconst KidneySymptomsCountTable = () => {\n  const [data, setData] = useState([]);\n\n  const valueSwitch = param => {\n    switch (param) {\n      case 0:\n        return 'Cyst';\n\n      case 1:\n        return 'Normal';\n\n      case 2:\n        return 'Stone';\n\n      case 3:\n        return 'Tumor';\n    }\n  };\n\n  const columns = [{\n    title: 'Kidney Disease',\n    dataIndex: 'disease',\n    key: 'disease',\n    render: text => /*#__PURE__*/React.createElement(\"div\", {\n      key: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 31\n      }\n    }, \"valueSwitch(text)\")\n  }, {\n    title: 'Symptoms',\n    dataIndex: 'symptoms',\n    key: 'symptoms',\n    render: symptoms => {\n      return symptoms.map((symptom, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 57\n        }\n      }, symptom.symptom));\n    },\n    responsive: ['md']\n  }, {\n    title: 'Count',\n    dataIndex: 'counts',\n    key: 'count',\n    render: counts => counts.map((count, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 62\n      }\n    }, \" \", count.count, \" \")),\n    responsive: ['sm']\n  }];\n\n  const fetchData = async () => {\n    const res = await fetch(\"http://localhost:5000/query/symptoms_count_per_kidney_result\");\n    const data = await res.json().then(data => {\n      setData(data.map(d => {\n        return {\n          disease: d._id,\n          symptoms: d.symptoms,\n          counts: d.symptoms\n        };\n      }));\n    });\n    console.log(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(_Table, {\n    columns: columns,\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default KidneySymptomsCountTable;","map":{"version":3,"names":["React","useEffect","useState","KidneySymptomsCountTable","data","setData","valueSwitch","param","columns","title","dataIndex","key","render","text","symptoms","map","symptom","index","responsive","counts","count","fetchData","res","fetch","json","then","d","disease","_id","console","log"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/dashboards/dashboard/charts/KidneySymptomsCountTable.tsx"],"sourcesContent":["import { Table } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport type { ColumnsType } from 'antd/es/table';\r\n\r\n\r\nconst KidneySymptomsCountTable = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const valueSwitch = (param) => {\r\n        switch (param) {\r\n          case 0: return 'Cyst';\r\n          case 1: return 'Normal';\r\n          case 2: return 'Stone';\r\n          case 3: return 'Tumor';\r\n        }\r\n}\r\n\r\n    const columns: ColumnsType = [\r\n        {\r\n            title: 'Kidney Disease',\r\n            dataIndex: 'disease',\r\n            key: 'disease',\r\n            render: (text) => <div key={text}>valueSwitch(text)</div>,\r\n        },\r\n        {\r\n            title: 'Symptoms',\r\n            dataIndex: 'symptoms',\r\n            key: 'symptoms',\r\n            render: (symptoms) => {\r\n                return symptoms.map((symptom, index) => <div key={index} className='row'>{symptom.symptom}</div>);\r\n            },\r\n            responsive: ['md']\r\n        },\r\n        {\r\n            title: 'Count',\r\n            dataIndex: 'counts',\r\n            key: 'count',\r\n            render: (counts) => counts.map((count, index) => <div key={index} className='row'> {count.count} </div>),\r\n            responsive: ['sm']\r\n        },\r\n        ];\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch(\"http://localhost:5000/query/symptoms_count_per_kidney_result\");\r\n        const data = await res.json()\r\n            .then(data => {\r\n                setData(data.map((d) => {\r\n                    return {\r\n                        disease: d._id,\r\n                        symptoms: d.symptoms,\r\n                        counts: d.symptoms\r\n                    }\r\n                }))\r\n            });\r\n        console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <Table columns={columns} dataSource={data}></Table>\r\n    )\r\n}\r\nexport default KidneySymptomsCountTable"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAIA,MAAMC,wBAAwB,GAAG,MAAM;EACnC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMI,WAAW,GAAIC,KAAD,IAAW;IAC3B,QAAQA,KAAR;MACE,KAAK,CAAL;QAAQ,OAAO,MAAP;;MACR,KAAK,CAAL;QAAQ,OAAO,QAAP;;MACR,KAAK,CAAL;QAAQ,OAAO,OAAP;;MACR,KAAK,CAAL;QAAQ,OAAO,OAAP;IAJV;EAMP,CAPG;;EASA,MAAMC,OAAoB,GAAG,CACzB;IACIC,KAAK,EAAE,gBADX;IAEIC,SAAS,EAAE,SAFf;IAGIC,GAAG,EAAE,SAHT;IAIIC,MAAM,EAAGC,IAAD,iBAAU;MAAK,GAAG,EAAEA,IAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA;EAJtB,CADyB,EAOzB;IACIJ,KAAK,EAAE,UADX;IAEIC,SAAS,EAAE,UAFf;IAGIC,GAAG,EAAE,UAHT;IAIIC,MAAM,EAAGE,QAAD,IAAc;MAClB,OAAOA,QAAQ,CAACC,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBAAoB;QAAK,GAAG,EAAEA,KAAV;QAAiB,SAAS,EAAC,KAA3B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAkCD,OAAO,CAACA,OAA1C,CAAjC,CAAP;IACH,CANL;IAOIE,UAAU,EAAE,CAAC,IAAD;EAPhB,CAPyB,EAgBzB;IACIT,KAAK,EAAE,OADX;IAEIC,SAAS,EAAE,QAFf;IAGIC,GAAG,EAAE,OAHT;IAIIC,MAAM,EAAGO,MAAD,IAAYA,MAAM,CAACJ,GAAP,CAAW,CAACK,KAAD,EAAQH,KAAR,kBAAkB;MAAK,GAAG,EAAEA,KAAV;MAAiB,SAAS,EAAC,KAA3B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,QAAmCG,KAAK,CAACA,KAAzC,MAA7B,CAJxB;IAKIF,UAAU,EAAE,CAAC,IAAD;EALhB,CAhByB,CAA7B;;EAyBA,MAAMG,SAAS,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8DAAD,CAAvB;IACA,MAAMnB,IAAI,GAAG,MAAMkB,GAAG,CAACE,IAAJ,GACdC,IADc,CACTrB,IAAI,IAAI;MACVC,OAAO,CAACD,IAAI,CAACW,GAAL,CAAUW,CAAD,IAAO;QACpB,OAAO;UACHC,OAAO,EAAED,CAAC,CAACE,GADR;UAEHd,QAAQ,EAAEY,CAAC,CAACZ,QAFT;UAGHK,MAAM,EAAEO,CAAC,CAACZ;QAHP,CAAP;MAKH,CANO,CAAD,CAAP;IAOH,CATc,CAAnB;IAUAe,OAAO,CAACC,GAAR,CAAY1B,IAAZ;EACH,CAbD;;EAeAH,SAAS,CAAC,MAAM;IAEZoB,SAAS;EACZ,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACI;IAAO,OAAO,EAAEb,OAAhB;IAAyB,UAAU,EAAEJ,IAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ;AAGH,CA5DD;;AA6DA,eAAeD,wBAAf"},"metadata":{},"sourceType":"module"}