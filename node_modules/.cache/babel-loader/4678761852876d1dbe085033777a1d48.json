{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp-WA\\\\src\\\\pages\\\\dashboards\\\\appointments\\\\AppointmentsPage.tsx\";\nimport React, { useState } from 'react';\nimport EditAppointment from './EditAppointment';\nimport AddAppointment from './AddAppointment';\nimport AppointmentsTable from '../../../layout/components/appointmentsTable/AppointmentsTable';\nimport PageAction from '../../../layout/components/page-action/PageAction';\nimport { useFetchPageData, usePageData } from '../../../hooks/usePage';\nconst pageData = {\n  title: 'Appointments',\n  fulFilled: false,\n  breadcrumbs: [{\n    title: 'Medicine',\n    route: 'default-dashboard'\n  }, {\n    title: 'Appointments'\n  }]\n};\n\nconst AppointmentsPage = () => {\n  usePageData(pageData);\n  const [appointments, setAppointments] = useFetchPageData('./data/appointments.json', []);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n  const [addingModalVisibility, setAddingModalVisibility] = useState(false);\n\n  const handleDelete = appointment => {\n    const newAppointments = appointments.filter(el => el !== appointment);\n    setAppointments(newAppointments);\n  };\n\n  const handleEdit = appointment => {\n    const editedAppointments = appointments.map(el => el !== selectedAppointment ? el : appointment);\n    setAppointments(editedAppointments);\n    setSelectedAppointment(null);\n  };\n\n  const openAddingModal = () => setAddingModalVisibility(true);\n\n  const addAppointment = appointment => {\n    setAppointments([appointment, ...appointments]);\n    setAddingModalVisibility(false);\n  };\n\n  const closeAddingModal = () => setAddingModalVisibility(false);\n\n  const openEditModal = appointment => setSelectedAppointment(appointment);\n\n  const closeModal = () => {\n    setSelectedAppointment(null);\n  };\n\n  const appointmentsActions = appointment => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-list nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    onClick: openEditModal.bind({}, appointment),\n    shape: \"circle\",\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-edit-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    onClick: handleDelete.bind({}, appointment),\n    shape: \"circle\",\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-ui-delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppointmentsTable, {\n    data: appointments,\n    actions: appointmentsActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PageAction, {\n    onClick: openAddingModal,\n    icon: \"icofont-stethoscope-alt\",\n    type: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddAppointment, {\n    onClose: closeAddingModal,\n    visible: addingModalVisibility,\n    onSubmit: addAppointment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditAppointment, {\n    appointment: selectedAppointment,\n    visible: !!selectedAppointment,\n    onClose: closeModal,\n    onEdited: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AppointmentsPage;","map":{"version":3,"names":["React","useState","EditAppointment","AddAppointment","AppointmentsTable","PageAction","useFetchPageData","usePageData","pageData","title","fulFilled","breadcrumbs","route","AppointmentsPage","appointments","setAppointments","selectedAppointment","setSelectedAppointment","addingModalVisibility","setAddingModalVisibility","handleDelete","appointment","newAppointments","filter","el","handleEdit","editedAppointments","map","openAddingModal","addAppointment","closeAddingModal","openEditModal","closeModal","appointmentsActions","bind"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/src/pages/dashboards/appointments/AppointmentsPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { Button } from 'antd';\n\nimport EditAppointment from './EditAppointment';\nimport AddAppointment from './AddAppointment';\nimport AppointmentsTable from '../../../layout/components/appointmentsTable/AppointmentsTable';\n\nimport PageAction from '../../../layout/components/page-action/PageAction';\nimport { useFetchPageData, usePageData } from '../../../hooks/usePage';\n\nimport { IAppointment } from '../../../interfaces/patient';\nimport { IPageData } from '../../../interfaces/page';\n\nconst pageData: IPageData = {\n  title: 'Appointments',\n  fulFilled: false,\n  breadcrumbs: [\n    {\n      title: 'Medicine',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'Appointments'\n    }\n  ]\n};\n\nconst AppointmentsPage = () => {\n  usePageData(pageData);\n  const [appointments, setAppointments] = useFetchPageData<IAppointment[]>(\n    './data/appointments.json',\n    []\n  );\n\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n  const [addingModalVisibility, setAddingModalVisibility] = useState(false);\n\n  const handleDelete = (appointment: IAppointment) => {\n    const newAppointments = appointments.filter((el) => el !== appointment);\n    setAppointments(newAppointments);\n  };\n\n  const handleEdit = (appointment: IAppointment) => {\n    const editedAppointments = appointments.map((el) =>\n      el !== selectedAppointment ? el : appointment\n    );\n    setAppointments(editedAppointments);\n    setSelectedAppointment(null);\n  };\n\n  const openAddingModal = () => setAddingModalVisibility(true);\n\n  const addAppointment = (appointment: IAppointment) => {\n    setAppointments([appointment, ...appointments]);\n    setAddingModalVisibility(false);\n  };\n\n  const closeAddingModal = () => setAddingModalVisibility(false);\n\n  const openEditModal = (appointment: IAppointment) => setSelectedAppointment(appointment);\n\n  const closeModal = () => {\n    setSelectedAppointment(null);\n  };\n\n  const appointmentsActions = (appointment: IAppointment) => (\n    <div className='buttons-list nowrap'>\n      <Button onClick={openEditModal.bind({}, appointment)} shape='circle' type='primary'>\n        <span className='icofont icofont-edit-alt' />\n      </Button>\n      <Button onClick={handleDelete.bind({}, appointment)} shape='circle' danger>\n        <span className='icofont icofont-ui-delete' />\n      </Button>\n    </div>\n  );\n\n  return (\n    <>\n      <AppointmentsTable data={appointments} actions={appointmentsActions} />\n\n      <PageAction onClick={openAddingModal} icon='icofont-stethoscope-alt' type={'primary'} />\n\n      <AddAppointment\n        onClose={closeAddingModal}\n        visible={addingModalVisibility}\n        onSubmit={addAppointment}\n      />\n\n      <EditAppointment\n        appointment={selectedAppointment}\n        visible={!!selectedAppointment}\n        onClose={closeModal}\n        onEdited={handleEdit}\n      />\n    </>\n  );\n};\n\nexport default AppointmentsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}