{"ast":null,"code":"function getWord(text, position) {\n  var str = String(text);\n  /* eslint no-bitwise:0 */\n\n  var pos = Number(position) >>> 0; // Search for the word's beginning and end.\n\n  var left = str.slice(0, pos + 1).search(/\\S+$/);\n  var right = str.slice(pos).search(/\\s/);\n\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length\n    };\n  } // Return the word, using the located bounds to extract it from the string.\n\n\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos\n  };\n}\n\nexport default function getSearchWord(editorState, selection) {\n  var anchorKey = selection.getAnchorKey();\n  var anchorOffset = selection.getAnchorOffset() - 1;\n  var currentContent = editorState.getCurrentContent();\n  var currentBlock = currentContent.getBlockForKey(anchorKey);\n\n  if (currentBlock) {\n    var blockText = currentBlock.getText();\n    return getWord(blockText, anchorOffset);\n  }\n\n  return '';\n}","map":{"version":3,"names":["getWord","text","position","str","String","pos","Number","left","slice","search","right","word","begin","end","length","getSearchWord","editorState","selection","anchorKey","getAnchorKey","anchorOffset","getAnchorOffset","currentContent","getCurrentContent","currentBlock","getBlockForKey","blockText","getText"],"sources":["E:/Work/PFE/Project folder/DocHelp/node_modules/rc-editor-mention/es/utils/getSearchWord.js"],"sourcesContent":["function getWord(text, position) {\n  var str = String(text);\n  /* eslint no-bitwise:0 */\n  var pos = Number(position) >>> 0;\n\n  // Search for the word's beginning and end.\n  var left = str.slice(0, pos + 1).search(/\\S+$/);\n  var right = str.slice(pos).search(/\\s/);\n\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length\n    };\n  }\n\n  // Return the word, using the located bounds to extract it from the string.\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos\n  };\n}\n\nexport default function getSearchWord(editorState, selection) {\n  var anchorKey = selection.getAnchorKey();\n  var anchorOffset = selection.getAnchorOffset() - 1;\n  var currentContent = editorState.getCurrentContent();\n  var currentBlock = currentContent.getBlockForKey(anchorKey);\n  if (currentBlock) {\n    var blockText = currentBlock.getText();\n    return getWord(blockText, anchorOffset);\n  }\n  return '';\n}"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;EAC/B,IAAIC,GAAG,GAAGC,MAAM,CAACH,IAAD,CAAhB;EACA;;EACA,IAAII,GAAG,GAAGC,MAAM,CAACJ,QAAD,CAAN,KAAqB,CAA/B,CAH+B,CAK/B;;EACA,IAAIK,IAAI,GAAGJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAaH,GAAG,GAAG,CAAnB,EAAsBI,MAAtB,CAA6B,MAA7B,CAAX;EACA,IAAIC,KAAK,GAAGP,GAAG,CAACK,KAAJ,CAAUH,GAAV,EAAeI,MAAf,CAAsB,IAAtB,CAAZ;;EAEA,IAAIC,KAAK,GAAG,CAAZ,EAAe;IACb,OAAO;MACLC,IAAI,EAAER,GAAG,CAACK,KAAJ,CAAUD,IAAV,CADD;MAELK,KAAK,EAAEL,IAFF;MAGLM,GAAG,EAAEV,GAAG,CAACW;IAHJ,CAAP;EAKD,CAf8B,CAiB/B;;;EACA,OAAO;IACLH,IAAI,EAAER,GAAG,CAACK,KAAJ,CAAUD,IAAV,EAAgBG,KAAK,GAAGL,GAAxB,CADD;IAELO,KAAK,EAAEL,IAFF;IAGLM,GAAG,EAAEH,KAAK,GAAGL;EAHR,CAAP;AAKD;;AAED,eAAe,SAASU,aAAT,CAAuBC,WAAvB,EAAoCC,SAApC,EAA+C;EAC5D,IAAIC,SAAS,GAAGD,SAAS,CAACE,YAAV,EAAhB;EACA,IAAIC,YAAY,GAAGH,SAAS,CAACI,eAAV,KAA8B,CAAjD;EACA,IAAIC,cAAc,GAAGN,WAAW,CAACO,iBAAZ,EAArB;EACA,IAAIC,YAAY,GAAGF,cAAc,CAACG,cAAf,CAA8BP,SAA9B,CAAnB;;EACA,IAAIM,YAAJ,EAAkB;IAChB,IAAIE,SAAS,GAAGF,YAAY,CAACG,OAAb,EAAhB;IACA,OAAO3B,OAAO,CAAC0B,SAAD,EAAYN,YAAZ,CAAd;EACD;;EACD,OAAO,EAAP;AACD"},"metadata":{},"sourceType":"module"}