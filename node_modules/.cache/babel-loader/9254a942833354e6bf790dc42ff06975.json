{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SecondaryClipboard\n * @format\n * \n */\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\n\nvar EditorState = require('./EditorState');\n\nvar getContentStateFragment = require('./getContentStateFragment');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar clipboard = null;\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\n\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        return editorState;\n      }\n\n      targetRange = selection.set('focusOffset', blockEnd);\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange);\n    clipboard = getContentStateFragment(content, targetRange);\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\nmodule.exports = SecondaryClipboard;","map":{"version":3,"names":["DraftModifier","require","EditorState","getContentStateFragment","nullthrows","clipboard","SecondaryClipboard","cut","editorState","content","getCurrentContent","selection","getSelection","targetRange","isCollapsed","anchorKey","getAnchorKey","blockEnd","getBlockForKey","getLength","getAnchorOffset","set","afterRemoval","removeRange","push","paste","newContent","replaceWithFragment","module","exports"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/node_modules/draft-js/lib/SecondaryClipboard.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SecondaryClipboard\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\n\nvar getContentStateFragment = require('./getContentStateFragment');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar clipboard = null;\n\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        return editorState;\n      }\n\n      targetRange = selection.set('focusOffset', blockEnd);\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange);\n    clipboard = getContentStateFragment(content, targetRange);\n\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\n\nmodule.exports = SecondaryClipboard;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,2BAAD,CAArC;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,qBAAD,CAAxB;;AAEA,IAAII,SAAS,GAAG,IAAhB;AAEA;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB,GAAG;EACvBC,GAAG,EAAE,SAASA,GAAT,CAAaC,WAAb,EAA0B;IAC7B,IAAIC,OAAO,GAAGD,WAAW,CAACE,iBAAZ,EAAd;IACA,IAAIC,SAAS,GAAGH,WAAW,CAACI,YAAZ,EAAhB;IACA,IAAIC,WAAW,GAAG,IAAlB;;IAEA,IAAIF,SAAS,CAACG,WAAV,EAAJ,EAA6B;MAC3B,IAAIC,SAAS,GAAGJ,SAAS,CAACK,YAAV,EAAhB;MACA,IAAIC,QAAQ,GAAGR,OAAO,CAACS,cAAR,CAAuBH,SAAvB,EAAkCI,SAAlC,EAAf;;MAEA,IAAIF,QAAQ,KAAKN,SAAS,CAACS,eAAV,EAAjB,EAA8C;QAC5C,OAAOZ,WAAP;MACD;;MAEDK,WAAW,GAAGF,SAAS,CAACU,GAAV,CAAc,aAAd,EAA6BJ,QAA7B,CAAd;IACD,CATD,MASO;MACLJ,WAAW,GAAGF,SAAd;IACD;;IAEDE,WAAW,GAAGT,UAAU,CAACS,WAAD,CAAxB;IACAR,SAAS,GAAGF,uBAAuB,CAACM,OAAD,EAAUI,WAAV,CAAnC;IAEA,IAAIS,YAAY,GAAGtB,aAAa,CAACuB,WAAd,CAA0Bd,OAA1B,EAAmCI,WAAnC,EAAgD,SAAhD,CAAnB;;IAEA,IAAIS,YAAY,KAAKb,OAArB,EAA8B;MAC5B,OAAOD,WAAP;IACD;;IAED,OAAON,WAAW,CAACsB,IAAZ,CAAiBhB,WAAjB,EAA8Bc,YAA9B,EAA4C,cAA5C,CAAP;EACD,CA7BsB;EA+BvBG,KAAK,EAAE,SAASA,KAAT,CAAejB,WAAf,EAA4B;IACjC,IAAI,CAACH,SAAL,EAAgB;MACd,OAAOG,WAAP;IACD;;IAED,IAAIkB,UAAU,GAAG1B,aAAa,CAAC2B,mBAAd,CAAkCnB,WAAW,CAACE,iBAAZ,EAAlC,EAAmEF,WAAW,CAACI,YAAZ,EAAnE,EAA+FP,SAA/F,CAAjB;IAEA,OAAOH,WAAW,CAACsB,IAAZ,CAAiBhB,WAAjB,EAA8BkB,UAA9B,EAA0C,iBAA1C,CAAP;EACD;AAvCsB,CAAzB;AA0CAE,MAAM,CAACC,OAAP,GAAiBvB,kBAAjB"},"metadata":{},"sourceType":"script"}