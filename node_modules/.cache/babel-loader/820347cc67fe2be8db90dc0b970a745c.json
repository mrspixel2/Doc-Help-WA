{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp-WA\\\\src\\\\pages\\\\dashboards\\\\classifications\\\\ClassificationsTable.tsx\";\nimport React, { useState } from 'react';\nimport { history } from '../../../redux/store';\n\nconst ClassificationImg = _ref => {\n  let {\n    img\n  } = _ref;\n  const isData = img.startsWith('data:image');\n  const isWithPath = img.startsWith('http');\n\n  if (isData || isWithPath) {\n    return /*#__PURE__*/React.createElement(_Avatar, {\n      size: 40,\n      src: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(_Avatar, {\n    size: 40,\n    src: `${window.location.origin}/${img}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  });\n};\n\nconst ClassificationsTable = _ref2 => {\n  let {\n    classifications,\n    onEditClassification = () => null,\n    onDeleteClassification = () => null\n  } = _ref2;\n  const [classification, setClassification] = useState(null);\n  const [visibility, setVisibility] = useState(false);\n\n  const closeModal = () => setVisibility(false);\n\n  const handleShowInfo = () => history.push('/vertical/patient-profile');\n\n  const handleDeleteClassification = id => onDeleteClassification(id);\n\n  const handleEditClassification = classification => {\n    setClassification(classification);\n    setVisibility(true);\n  };\n\n  const actions = classification => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-list nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    shape: \"circle\",\n    onClick: handleShowInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-external-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    onClick: handleEditClassification.bind({}, classification),\n    shape: \"circle\",\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-edit-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(_Button, {\n    onClick: handleDeleteClassification.bind({}, classification.id),\n    shape: \"circle\",\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icofont icofont-ui-delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })));\n\n  const columns = [{\n    key: 'id',\n    dataIndex: 'id',\n    title: 'ID',\n    sorter: (a, b) => a.id > b.id ? 1 : -1,\n    render: id => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, id)\n  }, {\n    key: 'patient',\n    dataIndex: 'patient',\n    title: 'Patient',\n    sorter: (a, b) => a.patient > b.patient ? 1 : -1,\n    render: patient => /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }\n    }, patient)\n  }, {\n    key: 'img',\n    title: 'Photo',\n    dataIndex: 'img',\n    render: img => /*#__PURE__*/React.createElement(ClassificationImg, {\n      img: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 30\n      }\n    })\n  }, {\n    key: 'result',\n    dataIndex: 'result',\n    title: 'result',\n    sorter: (a, b) => a.result - b.result,\n    render: result => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nowrap\",\n      style: {\n        color: '#a5a5a5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, result)\n  }, {\n    key: 'desease',\n    dataIndex: 'desease',\n    title: 'Desease',\n    render: desease => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        minWidth: 200,\n        display: 'block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 34\n      }\n    }, desease)\n  }, {\n    key: 'status',\n    dataIndex: 'status',\n    title: 'Status',\n    render: status => /*#__PURE__*/React.createElement(_Tag, {\n      style: {\n        borderRadius: 20\n      },\n      color: status === 'Approved' ? '#b7ce63' : '#cec759',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, status),\n    sorter: (a, b) => a.status > b.status ? 1 : -1\n  }, {\n    key: 'actions',\n    title: 'Actions',\n    render: actions\n  }];\n  const pagination = classifications.length <= 10 ? false : {};\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Table, {\n    pagination: pagination,\n    className: \"accent-header\",\n    rowKey: \"id\",\n    dataSource: classifications,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(_Modal, {\n    visible: visibility,\n    footer: null,\n    onCancel: closeModal,\n    title: /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 24\n      }\n    }, \"Add patient\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ClassificationsTable;","map":{"version":3,"names":["React","useState","history","ClassificationImg","img","isData","startsWith","isWithPath","window","location","origin","ClassificationsTable","classifications","onEditClassification","onDeleteClassification","classification","setClassification","visibility","setVisibility","closeModal","handleShowInfo","push","handleDeleteClassification","id","handleEditClassification","actions","bind","columns","key","dataIndex","title","sorter","a","b","render","color","patient","result","desease","minWidth","display","status","borderRadius","pagination","length"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/src/pages/dashboards/classifications/ClassificationsTable.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Avatar, Table, Button, Modal, Tag } from 'antd';\r\nimport { ColumnProps } from 'antd/es/table';\r\nimport { history } from '../../../redux/store';\r\nimport { IPrediction } from '../../../interfaces/prediction';\r\n\r\ntype Props = {\r\n    classifications: IPrediction[];\r\n    onEditClassification?: (classification: IPrediction) => void;\r\n    onDeleteClassification?: (id: string) => void;\r\n};\r\n\r\ntype ClassificationImgProps = {\r\n    img: string;\r\n};\r\n\r\nconst ClassificationImg = ({ img }: ClassificationImgProps) => {\r\n    const isData = img.startsWith('data:image');\r\n    const isWithPath = img.startsWith('http');\r\n\r\n    if (isData || isWithPath) {\r\n        return <Avatar size={40} src={img} />;\r\n    }\r\n\r\n    return <Avatar size={40} src={`${window.location.origin}/${img}`} />;\r\n};\r\n\r\nconst ClassificationsTable = ({\r\n    classifications,\r\n    onEditClassification = () => null,\r\n    onDeleteClassification = () => null\r\n}: Props) => {\r\n    const [classification, setClassification] = useState(null);\r\n    const [visibility, setVisibility] = useState(false);\r\n\r\n    const closeModal = () => setVisibility(false);\r\n\r\n    const handleShowInfo = () => history.push('/vertical/patient-profile');\r\n    const handleDeleteClassification = (id) => onDeleteClassification(id);\r\n    const handleEditClassification = (classification: IPrediction) => {\r\n        setClassification(classification);\r\n        setVisibility(true);\r\n    };\r\n\r\n    const actions = (classification: IPrediction) => (\r\n        <div className='buttons-list nowrap'>\r\n            <Button shape='circle' onClick={handleShowInfo}>\r\n                <span className='icofont icofont-external-link' />\r\n            </Button>\r\n            <Button onClick={handleEditClassification.bind({}, classification)} shape='circle' type='primary'>\r\n                <span className='icofont icofont-edit-alt' />\r\n            </Button>\r\n            <Button onClick={handleDeleteClassification.bind({}, classification.id)} shape='circle' danger>\r\n                <span className='icofont icofont-ui-delete' />\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    const columns: ColumnProps<IPrediction>[] = [\r\n        {\r\n            key: 'id',\r\n            dataIndex: 'id',\r\n            title: 'ID',\r\n            sorter: (a, b) => (a.id > b.id ? 1 : -1),\r\n            render: (id) => (\r\n                <span className='nowrap' style={{ color: '#a5a5a5' }}>\r\n                    {id}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            key: 'patient',\r\n            dataIndex: 'patient',\r\n            title: 'Patient',\r\n            sorter: (a, b) => (a.patient > b.patient ? 1 : -1),\r\n            render: (patient) => <strong>{patient}</strong>\r\n        },\r\n        {\r\n            key: 'img',\r\n            title: 'Photo',\r\n            dataIndex: 'img',\r\n            render: (img) => <ClassificationImg img={img} />\r\n        },\r\n        {\r\n            key: 'result',\r\n            dataIndex: 'result',\r\n            title: 'result',\r\n            sorter: (a, b) => a.result - b.result,\r\n            render: (result) => (\r\n                <span className='nowrap' style={{ color: '#a5a5a5' }}>\r\n                    {result}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            key: 'desease',\r\n            dataIndex: 'desease',\r\n            title: 'Desease',\r\n            render: (desease) => <span style={{ minWidth: 200, display: 'block' }}>{desease}</span>\r\n        },\r\n        {\r\n            key: 'status',\r\n            dataIndex: 'status',\r\n            title: 'Status',\r\n            render: (status) => (\r\n                <Tag style={{ borderRadius: 20 }} color={status === 'Approved' ? '#b7ce63' : '#cec759'}>\r\n                    {status}\r\n                </Tag>\r\n            ),\r\n            sorter: (a, b) => (a.status > b.status ? 1 : -1)\r\n        },\r\n        {\r\n            key: 'actions',\r\n            title: 'Actions',\r\n            render: actions\r\n        }\r\n    ];\r\n\r\n    const pagination = classifications.length <= 10 ? false : {};\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                pagination={pagination}\r\n                className='accent-header'\r\n                rowKey='id'\r\n                dataSource={classifications}\r\n                columns={columns}\r\n            />\r\n\r\n            <Modal\r\n                visible={visibility}\r\n                footer={null}\r\n                onCancel={closeModal}\r\n                title={<h3 className='title'>Add patient</h3>}\r\n            >\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClassificationsTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}