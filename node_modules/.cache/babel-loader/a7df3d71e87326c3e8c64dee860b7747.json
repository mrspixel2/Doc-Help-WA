{"ast":null,"code":"import \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\react\\\\src\\\\layout\\\\components\\\\socials\\\\Socials.tsx\";\nimport React, { useRef, useState } from 'react';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons/lib';\n\nconst NetworkLayout = _ref => {\n  let {\n    iconInput,\n    linkInput,\n    actionBtn = null\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, iconInput), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, linkInput))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col col-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, actionBtn));\n};\n\nconst AddLink = _ref2 => {\n  let {\n    onLinkAdd\n  } = _ref2;\n  const buttonStyle = {\n    background: 'white',\n    border: 'none'\n  };\n  const iconInput = useRef(null);\n  const linkInput = useRef(null);\n\n  const getUserLink = () => {\n    const icon = iconInput.current.input.value;\n    const link = linkInput.current.input.value;\n    return {\n      icon,\n      link\n    };\n  };\n\n  const resetInputs = () => {\n    iconInput.current.setValue('');\n    linkInput.current.setValue('');\n  };\n\n  const handleAdd = () => {\n    const userLink = getUserLink();\n    onLinkAdd(userLink);\n    resetInputs();\n  };\n\n  return /*#__PURE__*/React.createElement(NetworkLayout, {\n    iconInput: /*#__PURE__*/React.createElement(_Input, {\n      ref: iconInput,\n      placeholder: \"Icon class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }\n    }),\n    linkInput: /*#__PURE__*/React.createElement(_Input, {\n      ref: linkInput,\n      placeholder: \"Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }\n    }),\n    actionBtn: /*#__PURE__*/React.createElement(_Button, {\n      shape: \"circle\",\n      onClick: handleAdd,\n      style: buttonStyle,\n      icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n        className: \"icon-blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n};\n\nconst Socials = _ref3 => {\n  let {\n    links\n  } = _ref3;\n  const [networks, setNetworks] = useState(links);\n\n  const addNetwork = link => setNetworks([...networks, link]);\n\n  const removeNetwork = index => {\n    const predicate = (_, _index) => _index !== index;\n\n    const filteredNetworks = networks.filter(predicate);\n    setNetworks(filteredNetworks);\n  };\n\n  const SocialLink = (_ref4, index) => {\n    let {\n      link,\n      icon\n    } = _ref4;\n    const buttonStyle = {\n      background: 'white',\n      border: 'none'\n    };\n    return /*#__PURE__*/React.createElement(NetworkLayout, {\n      key: index,\n      linkInput: /*#__PURE__*/React.createElement(_Input, {\n        defaultValue: link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }\n      }),\n      iconInput: /*#__PURE__*/React.createElement(_Input, {\n        readOnly: true,\n        prefix: /*#__PURE__*/React.createElement(\"i\", {\n          className: `icofont ${icon}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 44\n          }\n        }),\n        value: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }\n      }),\n      actionBtn: /*#__PURE__*/React.createElement(_Button, {\n        shape: \"circle\",\n        style: buttonStyle,\n        onClick: () => removeNetwork(index),\n        icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n          className: \"icon-error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, networks.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Social networks\"), networks.map(SocialLink)), /*#__PURE__*/React.createElement(_Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Add social network\"), /*#__PURE__*/React.createElement(AddLink, {\n    onLinkAdd: addNetwork,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Socials;","map":{"version":3,"names":["React","useRef","useState","DeleteOutlined","PlusOutlined","NetworkLayout","iconInput","linkInput","actionBtn","AddLink","onLinkAdd","buttonStyle","background","border","getUserLink","icon","current","input","value","link","resetInputs","setValue","handleAdd","userLink","Socials","links","networks","setNetworks","addNetwork","removeNetwork","index","predicate","_","_index","filteredNetworks","filter","SocialLink","length","map"],"sources":["E:/Work/PFE/Project folder/react/src/layout/components/socials/Socials.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { IUserLink } from '../../../interfaces/user';\nimport { Button, Divider, Input } from 'antd';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons/lib';\n\ntype Props = { links?: IUserLink[] };\n\nconst NetworkLayout = ({ iconInput, linkInput, actionBtn = null }) => (\n  <div className='row'>\n    <div className='col'>\n      <div className='row'>\n        <div className='col-md-6 col-sm-12'>{iconInput}</div>\n\n        <div className='col-md-6 col-sm-12'>{linkInput}</div>\n      </div>\n    </div>\n\n    <div className='col col-auto'>{actionBtn}</div>\n  </div>\n);\n\nconst AddLink = ({ onLinkAdd }) => {\n  const buttonStyle = { background: 'white', border: 'none' };\n\n  const iconInput = useRef<Input>(null);\n  const linkInput = useRef<Input>(null);\n\n  const getUserLink = (): IUserLink => {\n    const icon = iconInput.current.input.value;\n    const link = linkInput.current.input.value;\n\n    return {\n      icon,\n      link\n    };\n  };\n\n  const resetInputs = () => {\n    iconInput.current.setValue('');\n    linkInput.current.setValue('');\n  };\n\n  const handleAdd = () => {\n    const userLink = getUserLink();\n    onLinkAdd(userLink);\n    resetInputs();\n  };\n\n  return (\n    <NetworkLayout\n      iconInput={<Input ref={iconInput} placeholder='Icon class' />}\n      linkInput={<Input ref={linkInput} placeholder='Link' />}\n      actionBtn={\n        <Button\n          shape='circle'\n          onClick={handleAdd}\n          style={buttonStyle}\n          icon={<PlusOutlined className='icon-blue' />}\n        />\n      }\n    />\n  );\n};\n\nconst Socials = ({ links }: Props) => {\n  const [networks, setNetworks] = useState(links);\n\n  const addNetwork = (link: IUserLink) => setNetworks([...networks, link]);\n\n  const removeNetwork = (index) => {\n    const predicate = (_, _index) => _index !== index;\n    const filteredNetworks = networks.filter(predicate);\n\n    setNetworks(filteredNetworks);\n  };\n\n  const SocialLink = ({ link, icon }: IUserLink, index) => {\n    const buttonStyle = { background: 'white', border: 'none' };\n\n    return (\n      <NetworkLayout\n        key={index}\n        linkInput={<Input defaultValue={link} />}\n        iconInput={<Input readOnly prefix={<i className={`icofont ${icon}`} />} value={icon} />}\n        actionBtn={\n          <Button\n            shape='circle'\n            style={buttonStyle}\n            onClick={() => removeNetwork(index)}\n            icon={<DeleteOutlined className='icon-error' />}\n          />\n        }\n      />\n    );\n  };\n\n  return (\n    <>\n      {networks.length ? (\n        <>\n          <div className='stack'>\n            <h5>Social networks</h5>\n            {networks.map(SocialLink)}\n          </div>\n          <Divider />\n        </>\n      ) : null}\n\n      <h5>Add social network</h5>\n      <AddLink onLinkAdd={addNetwork} />\n    </>\n  );\n};\n\nexport default Socials;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}