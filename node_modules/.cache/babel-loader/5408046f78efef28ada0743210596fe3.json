{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp-WA\\\\src\\\\pages\\\\dashboards\\\\classifications\\\\ClassificationsTable.tsx\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst ClassificationTable = props => {\n  const [state, setstate] = useState([]);\n  const [loading, setloading] = useState(true);\n  useEffect(() => {\n    getData();\n    alert(state);\n  }, []);\n\n  const getData = async () => {\n    await Axios.post('http://localhost:5000/predict/getAll_predictions').then(res => {\n      console.log(res);\n      setloading(false);\n      setstate(res.data.map(row => ({\n        key: row._id,\n        Patient: row.patient,\n        Desease: row.desease,\n        result: row.result,\n        status: row.prediction_status\n      })));\n    });\n  };\n\n  const columns = [{\n    title: 'Patient Name',\n    dataIndex: 'patient',\n    key: 'patient',\n    render: text => /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }\n    }, text)\n  }, {\n    title: 'Desease',\n    dataIndex: 'desease',\n    key: 'desease',\n    responsive: ['md']\n  }, {\n    title: 'Result',\n    dataIndex: 'result',\n    key: 'result',\n    responsive: ['sm']\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    responsive: ['sm']\n  }];\n  return /*#__PURE__*/React.createElement(_Table, {\n    columns: columns,\n    dataSource: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default ClassificationTable;","map":{"version":3,"names":["Axios","React","useEffect","useState","ClassificationTable","props","state","setstate","loading","setloading","getData","alert","post","then","res","console","log","data","map","row","key","_id","Patient","patient","Desease","desease","result","status","prediction_status","columns","title","dataIndex","render","text","responsive"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/src/pages/dashboards/classifications/ClassificationsTable.tsx"],"sourcesContent":["import { Table } from 'antd';\r\nimport type { ColumnsType } from 'antd/es/table';\r\nimport Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nconst ClassificationTable = (props:any) => {\r\n  const [state, setstate] = useState([]);\r\n  const [loading, setloading] = useState(true);\r\n  useEffect(() => {\r\n    getData();\r\n    alert(state);\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    await Axios.post('http://localhost:5000/predict/getAll_predictions').then(\r\n      res => {\r\n        console.log(res);\r\n        setloading(false);\r\n        setstate(\r\n          res.data.map(row => ({\r\n            key: row._id,\r\n            Patient: row.patient,\r\n            Desease: row.desease,\r\n            result: row.result,\r\n            status: row.prediction_status\r\n            \r\n          }))\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  const columns: ColumnsType = [\r\n    {\r\n      title: 'Patient Name',\r\n      dataIndex: 'patient',\r\n      key: 'patient',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Desease',\r\n      dataIndex: 'desease',\r\n      key: 'desease',\r\n      responsive: ['md'],\r\n    },\r\n    {\r\n      title: 'Result',\r\n      dataIndex: 'result',\r\n      key: 'result',\r\n      responsive: ['sm'],\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      responsive: ['sm'],\r\n    },\r\n  ];\r\n\r\n\r\n  return(<Table columns={columns} dataSource={state} />)\r\n\r\n }\r\n\r\nexport default ClassificationTable;"],"mappings":";;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAIA,MAAMC,mBAAmB,GAAIC,KAAD,IAAe;EACzC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;EACAD,SAAS,CAAC,MAAM;IACdQ,OAAO;IACPC,KAAK,CAACL,KAAD,CAAL;EACD,CAHQ,EAGN,EAHM,CAAT;;EAKA,MAAMI,OAAO,GAAG,YAAY;IAC1B,MAAMV,KAAK,CAACY,IAAN,CAAW,kDAAX,EAA+DC,IAA/D,CACJC,GAAG,IAAI;MACLC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACAL,UAAU,CAAC,KAAD,CAAV;MACAF,QAAQ,CACNO,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAaC,GAAG,KAAK;QACnBC,GAAG,EAAED,GAAG,CAACE,GADU;QAEnBC,OAAO,EAAEH,GAAG,CAACI,OAFM;QAGnBC,OAAO,EAAEL,GAAG,CAACM,OAHM;QAInBC,MAAM,EAAEP,GAAG,CAACO,MAJO;QAKnBC,MAAM,EAAER,GAAG,CAACS;MALO,CAAL,CAAhB,CADM,CAAR;IAUD,CAdG,CAAN;EAgBD,CAjBD;;EAmBA,MAAMC,OAAoB,GAAG,CAC3B;IACEC,KAAK,EAAE,cADT;IAEEC,SAAS,EAAE,SAFb;IAGEX,GAAG,EAAE,SAHP;IAIEY,MAAM,EAAEC,IAAI,iBAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAIA,IAAJ;EAJlB,CAD2B,EAO3B;IACEH,KAAK,EAAE,SADT;IAEEC,SAAS,EAAE,SAFb;IAGEX,GAAG,EAAE,SAHP;IAIEc,UAAU,EAAE,CAAC,IAAD;EAJd,CAP2B,EAa3B;IACEJ,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,QAFb;IAGEX,GAAG,EAAE,QAHP;IAIEc,UAAU,EAAE,CAAC,IAAD;EAJd,CAb2B,EAmB3B;IACEJ,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,QAFb;IAGEX,GAAG,EAAE,QAHP;IAIEc,UAAU,EAAE,CAAC,IAAD;EAJd,CAnB2B,CAA7B;EA4BA,oBAAO;IAAO,OAAO,EAAEL,OAAhB;IAAyB,UAAU,EAAEvB,KAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AAEA,CAzDF;;AA2DA,eAAeF,mBAAf"},"metadata":{},"sourceType":"module"}