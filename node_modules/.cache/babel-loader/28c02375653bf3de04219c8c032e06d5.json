{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport { useState, useCallback, useMemo } from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport devWarning from '../../_util/devWarning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, undefined, getRowKey);\n  }, [data, getRowKey, checkStrictly]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys, []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys, halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n\n    if (onSelectionChange) {\n      onSelectionChange(availableKeys, records);\n    }\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key); // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            indeterminate: indeterminate,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = _defineProperty({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_toArray","_defineProperty","_extends","_slicedToArray","_toConsumableArray","React","useState","useCallback","useMemo","DownOutlined","convertDataToEntities","conductCheck","arrAdd","arrDel","INTERNAL_COL_DEFINE","useMergedState","Checkbox","Dropdown","Menu","Radio","devWarning","SELECTION_ALL","SELECTION_INVERT","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","push","concat","useSelection","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","preserveRecordsRef","useRef","Map","_useMergedState","value","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","_useMemo","keyEntities","undefined","flattedData","checkboxPropsMap","map","index","key","checkboxProps","set","process","env","NODE_ENV","isCheckboxDisabled","r","_a","get","disabled","_useMemo2","_conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","keys","slice","Set","derivedHalfSelectedKeySet","_useState","_useState2","lastSelectedKey","setLastSelectedKey","useEffect","setSelectedKeys","availableKeys","records","newCache","current","has","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","selectInvert","keySet","add","Array","from","transformColumns","columns","recordKeys","filter","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabled","checked","length","indeterminate","_","node","e","stopPropagation","nativeEvent","_ref2","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","_columns","expandColumn","restColumns","selectionFixed"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/node_modules/antd/es/table/hooks/useSelection.js"],"sourcesContent":["import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport { useState, useCallback, useMemo } from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport devWarning from '../../_util/devWarning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, undefined, getRowKey);\n  }, [data, getRowKey, checkStrictly]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys, []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys, halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n\n    if (onSelectionChange) {\n      onSelectionChange(availableKeys, records);\n    }\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(Menu, {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key); // Record checked\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            indeterminate: indeterminate,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                setSelectedKeys(keys);\n\n                if (onSelectMultiple) {\n                  onSelectMultiple(!checked, keys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }), changedKeys.map(function (recordKey) {\n                    return getRecordByKey(recordKey);\n                  }));\n                }\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = _defineProperty({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,QAA+C,OAA/C;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,iBAA/B;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB,C,CAAiD;;AAEjD,OAAO,IAAIC,aAAa,GAAG,YAApB;AACP,OAAO,IAAIC,gBAAgB,GAAG,eAAvB;;AAEP,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;EAC5B,OAAOA,MAAM,IAAIA,MAAM,CAACC,KAAxB;AACD;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,kBAA3B,EAA+C;EAC7C,IAAIC,IAAI,GAAG,EAAX;EACA,CAACF,IAAI,IAAI,EAAT,EAAaG,OAAb,CAAqB,UAAUC,MAAV,EAAkB;IACrCF,IAAI,CAACG,IAAL,CAAUD,MAAV;;IAEA,IAAIH,kBAAkB,IAAIG,MAA1B,EAAkC;MAChCF,IAAI,GAAG,GAAGI,MAAH,CAAU7B,kBAAkB,CAACyB,IAAD,CAA5B,EAAoCzB,kBAAkB,CAACsB,WAAW,CAACK,MAAM,CAACH,kBAAD,CAAP,EAA6BA,kBAA7B,CAAZ,CAAtD,CAAP;IACD;EACF,CAND;EAOA,OAAOC,IAAP;AACD;;AAED,eAAe,SAASK,YAAT,CAAsBC,YAAtB,EAAoCC,MAApC,EAA4C;EACzD,IAAIC,IAAI,GAAGF,YAAY,IAAI,EAA3B;EAAA,IACIG,uBAAuB,GAAGD,IAAI,CAACC,uBADnC;EAAA,IAEIC,eAAe,GAAGF,IAAI,CAACE,eAF3B;EAAA,IAGIC,gBAAgB,GAAGH,IAAI,CAACG,gBAH5B;EAAA,IAIIC,iBAAiB,GAAGJ,IAAI,CAACK,QAJ7B;EAAA,IAKIC,QAAQ,GAAGN,IAAI,CAACM,QALpB;EAAA,IAMIC,WAAW,GAAGP,IAAI,CAACO,WANvB;EAAA,IAOIC,cAAc,GAAGR,IAAI,CAACQ,cAP1B;EAAA,IAQIC,gBAAgB,GAAGT,IAAI,CAACS,gBAR5B;EAAA,IASIC,iBAAiB,GAAGV,IAAI,CAACW,WAT7B;EAAA,IAUIC,aAAa,GAAGZ,IAAI,CAACa,IAVzB;EAAA,IAWIC,UAAU,GAAGd,IAAI,CAACc,UAXtB;EAAA,IAYI1B,KAAK,GAAGY,IAAI,CAACZ,KAZjB;EAAA,IAaI2B,mBAAmB,GAAGf,IAAI,CAACgB,UAb/B;EAAA,IAcIC,aAAa,GAAGjB,IAAI,CAACiB,aAdzB;EAAA,IAeIC,kBAAkB,GAAGlB,IAAI,CAACmB,aAf9B;EAAA,IAgBIA,aAAa,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,IAAhC,GAAuCA,kBAhB3D;;EAkBA,IAAIE,SAAS,GAAGrB,MAAM,CAACqB,SAAvB;EAAA,IACI9B,IAAI,GAAGS,MAAM,CAACT,IADlB;EAAA,IAEI+B,QAAQ,GAAGtB,MAAM,CAACsB,QAFtB;EAAA,IAGIC,cAAc,GAAGvB,MAAM,CAACuB,cAH5B;EAAA,IAIIC,SAAS,GAAGxB,MAAM,CAACwB,SAJvB;EAAA,IAKIC,UAAU,GAAGzB,MAAM,CAACyB,UALxB;EAAA,IAMIjC,kBAAkB,GAAGQ,MAAM,CAACR,kBANhC;EAAA,IAOIkC,WAAW,GAAG1B,MAAM,CAAC2B,MAPzB;EAAA,IAQIC,qBAAqB,GAAG5B,MAAM,CAAC4B,qBARnC;EAAA,IASIC,iBAAiB,GAAG7B,MAAM,CAAC6B,iBAT/B,CAnByD,CA4BP;;EAElD,IAAIC,kBAAkB,GAAG7D,KAAK,CAAC8D,MAAN,CAAa,IAAIC,GAAJ,EAAb,CAAzB,CA9ByD,CA8BP;;EAElD,IAAIC,eAAe,GAAGtD,cAAc,CAACwB,eAAe,IAAI,EAApB,EAAwB;IAC1D+B,KAAK,EAAE/B;EADmD,CAAxB,CAApC;EAAA,IAGIgC,gBAAgB,GAAGpE,cAAc,CAACkE,eAAD,EAAkB,CAAlB,CAHrC;EAAA,IAIIG,kBAAkB,GAAGD,gBAAgB,CAAC,CAAD,CAJzC;EAAA,IAKIE,qBAAqB,GAAGF,gBAAgB,CAAC,CAAD,CAL5C;;EAOA,IAAIG,QAAQ,GAAGlE,OAAO,CAAC,YAAY;IACjC,OAAOgD,aAAa,GAAG;MACrBmB,WAAW,EAAE;IADQ,CAAH,GAEhBjE,qBAAqB,CAACiB,IAAD,EAAOiD,SAAP,EAAkBhB,SAAlB,CAFzB;EAGD,CAJqB,EAInB,CAACjC,IAAD,EAAOiC,SAAP,EAAkBJ,aAAlB,CAJmB,CAAtB;EAAA,IAKImB,WAAW,GAAGD,QAAQ,CAACC,WAL3B,CAvCyD,CA4CjB;;;EAGxC,IAAIE,WAAW,GAAGrE,OAAO,CAAC,YAAY;IACpC,OAAOkB,WAAW,CAACgC,QAAD,EAAW9B,kBAAX,CAAlB;EACD,CAFwB,EAEtB,CAAC8B,QAAD,EAAW9B,kBAAX,CAFsB,CAAzB,CA/CyD,CAiDrB;;EAEpC,IAAIkD,gBAAgB,GAAGtE,OAAO,CAAC,YAAY;IACzC,IAAIuE,GAAG,GAAG,IAAIX,GAAJ,EAAV;IACAS,WAAW,CAAC/C,OAAZ,CAAoB,UAAUC,MAAV,EAAkBiD,KAAlB,EAAyB;MAC3C,IAAIC,GAAG,GAAGrB,SAAS,CAAC7B,MAAD,EAASiD,KAAT,CAAnB;MACA,IAAIE,aAAa,GAAG,CAAC1C,gBAAgB,GAAGA,gBAAgB,CAACT,MAAD,CAAnB,GAA8B,IAA/C,KAAwD,EAA5E;MACAgD,GAAG,CAACI,GAAJ,CAAQF,GAAR,EAAaC,aAAb;;MAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,KAA0C,aAAaJ,aAAb,IAA8B,oBAAoBA,aAA5F,CAAJ,EAAgH;QAC9G9D,UAAU,CAAC,KAAD,EAAQ,OAAR,EAAiB,uGAAjB,CAAV;MACD;IACF,CARD;IASA,OAAO2D,GAAP;EACD,CAZ6B,EAY3B,CAACF,WAAD,EAAcjB,SAAd,EAAyBpB,gBAAzB,CAZ2B,CAA9B;EAaA,IAAI+C,kBAAkB,GAAGhF,WAAW,CAAC,UAAUiF,CAAV,EAAa;IAChD,IAAIC,EAAJ;;IAEA,OAAO,CAAC,EAAE,CAACA,EAAE,GAAGX,gBAAgB,CAACY,GAAjB,CAAqB9B,SAAS,CAAC4B,CAAD,CAA9B,CAAN,MAA8C,IAA9C,IAAsDC,EAAE,KAAK,KAAK,CAAlE,GAAsE,KAAK,CAA3E,GAA+EA,EAAE,CAACE,QAApF,CAAR;EACD,CAJmC,EAIjC,CAACb,gBAAD,EAAmBlB,SAAnB,CAJiC,CAApC;;EAMA,IAAIgC,SAAS,GAAGpF,OAAO,CAAC,YAAY;IAClC,IAAIgD,aAAJ,EAAmB;MACjB,OAAO,CAACgB,kBAAD,EAAqB,EAArB,CAAP;IACD;;IAED,IAAIqB,aAAa,GAAGlF,YAAY,CAAC6D,kBAAD,EAAqB,IAArB,EAA2BG,WAA3B,EAAwCY,kBAAxC,CAAhC;IAAA,IACIO,WAAW,GAAGD,aAAa,CAACC,WADhC;IAAA,IAEIC,eAAe,GAAGF,aAAa,CAACE,eAFpC;;IAIA,OAAO,CAACD,WAAD,EAAcC,eAAd,CAAP;EACD,CAVsB,EAUpB,CAACvB,kBAAD,EAAqBhB,aAArB,EAAoCmB,WAApC,EAAiDY,kBAAjD,CAVoB,CAAvB;EAAA,IAWIS,SAAS,GAAG7F,cAAc,CAACyF,SAAD,EAAY,CAAZ,CAX9B;EAAA,IAYIK,mBAAmB,GAAGD,SAAS,CAAC,CAAD,CAZnC;EAAA,IAaIE,uBAAuB,GAAGF,SAAS,CAAC,CAAD,CAbvC;;EAeA,IAAIG,qBAAqB,GAAG3F,OAAO,CAAC,YAAY;IAC9C,IAAI4F,IAAI,GAAGnD,aAAa,KAAK,OAAlB,GAA4BgD,mBAAmB,CAACI,KAApB,CAA0B,CAA1B,EAA6B,CAA7B,CAA5B,GAA8DJ,mBAAzE;IACA,OAAO,IAAIK,GAAJ,CAAQF,IAAR,CAAP;EACD,CAHkC,EAGhC,CAACH,mBAAD,EAAsBhD,aAAtB,CAHgC,CAAnC;EAIA,IAAIsD,yBAAyB,GAAG/F,OAAO,CAAC,YAAY;IAClD,OAAOyC,aAAa,KAAK,OAAlB,GAA4B,IAAIqD,GAAJ,EAA5B,GAAwC,IAAIA,GAAJ,CAAQJ,uBAAR,CAA/C;EACD,CAFsC,EAEpC,CAACA,uBAAD,EAA0BjD,aAA1B,CAFoC,CAAvC,CAzFyD,CA2FX;;EAE9C,IAAIuD,SAAS,GAAGlG,QAAQ,CAAC,IAAD,CAAxB;EAAA,IACImG,UAAU,GAAGtG,cAAc,CAACqG,SAAD,EAAY,CAAZ,CAD/B;EAAA,IAEIE,eAAe,GAAGD,UAAU,CAAC,CAAD,CAFhC;EAAA,IAGIE,kBAAkB,GAAGF,UAAU,CAAC,CAAD,CAHnC,CA7FyD,CAgGjB;;;EAGxCpG,KAAK,CAACuG,SAAN,CAAgB,YAAY;IAC1B,IAAI,CAACzE,YAAL,EAAmB;MACjBsC,qBAAqB,CAAC,EAAD,CAArB;IACD;EACF,CAJD,EAIG,CAAC,CAAC,CAACtC,YAAH,CAJH;EAKA,IAAI0E,eAAe,GAAGtG,WAAW,CAAC,UAAU6F,IAAV,EAAgB;IAChD,IAAIU,aAAJ;IACA,IAAIC,OAAJ;;IAEA,IAAIzE,uBAAJ,EAA6B;MAC3B;MACA,IAAI0E,QAAQ,GAAG,IAAI5C,GAAJ,EAAf;MACA0C,aAAa,GAAGV,IAAhB;MACAW,OAAO,GAAGX,IAAI,CAACrB,GAAL,CAAS,UAAUE,GAAV,EAAe;QAChC,IAAIlD,MAAM,GAAG4B,cAAc,CAACsB,GAAD,CAA3B;;QAEA,IAAI,CAAClD,MAAD,IAAWmC,kBAAkB,CAAC+C,OAAnB,CAA2BC,GAA3B,CAA+BjC,GAA/B,CAAf,EAAoD;UAClDlD,MAAM,GAAGmC,kBAAkB,CAAC+C,OAAnB,CAA2BvB,GAA3B,CAA+BT,GAA/B,CAAT;QACD;;QAED+B,QAAQ,CAAC7B,GAAT,CAAaF,GAAb,EAAkBlD,MAAlB;QACA,OAAOA,MAAP;MACD,CATS,CAAV,CAJ2B,CAavB;;MAEJmC,kBAAkB,CAAC+C,OAAnB,GAA6BD,QAA7B;IACD,CAhBD,MAgBO;MACL;MACAF,aAAa,GAAG,EAAhB;MACAC,OAAO,GAAG,EAAV;MACAX,IAAI,CAACtE,OAAL,CAAa,UAAUmD,GAAV,EAAe;QAC1B,IAAIlD,MAAM,GAAG4B,cAAc,CAACsB,GAAD,CAA3B;;QAEA,IAAIlD,MAAM,KAAK6C,SAAf,EAA0B;UACxBkC,aAAa,CAAC9E,IAAd,CAAmBiD,GAAnB;UACA8B,OAAO,CAAC/E,IAAR,CAAaD,MAAb;QACD;MACF,CAPD;IAQD;;IAED0C,qBAAqB,CAACqC,aAAD,CAArB;;IAEA,IAAIrE,iBAAJ,EAAuB;MACrBA,iBAAiB,CAACqE,aAAD,EAAgBC,OAAhB,CAAjB;IACD;EACF,CAvCgC,EAuC9B,CAACtC,qBAAD,EAAwBd,cAAxB,EAAwClB,iBAAxC,EAA2DH,uBAA3D,CAvC8B,CAAjC,CAxGyD,CA+IgC;EACzF;;EAEA,IAAI6E,sBAAsB,GAAG5G,WAAW,CAAC,UAAU0E,GAAV,EAAemC,QAAf,EAAyBhB,IAAzB,EAA+BiB,KAA/B,EAAsC;IAC7E,IAAI1E,QAAJ,EAAc;MACZ,IAAI2E,IAAI,GAAGlB,IAAI,CAACrB,GAAL,CAAS,UAAUwC,CAAV,EAAa;QAC/B,OAAO5D,cAAc,CAAC4D,CAAD,CAArB;MACD,CAFU,CAAX;MAGA5E,QAAQ,CAACgB,cAAc,CAACsB,GAAD,CAAf,EAAsBmC,QAAtB,EAAgCE,IAAhC,EAAsCD,KAAtC,CAAR;IACD;;IAEDR,eAAe,CAACT,IAAD,CAAf;EACD,CATuC,EASrC,CAACzD,QAAD,EAAWgB,cAAX,EAA2BkD,eAA3B,CATqC,CAAxC;EAUA,IAAIW,gBAAgB,GAAGhH,OAAO,CAAC,YAAY;IACzC,IAAI,CAAC2C,UAAD,IAAeG,aAAnB,EAAkC;MAChC,OAAO,IAAP;IACD;;IAED,IAAImE,aAAa,GAAGtE,UAAU,KAAK,IAAf,GAAsB,CAAC9B,aAAD,EAAgBC,gBAAhB,CAAtB,GAA0D6B,UAA9E;IACA,OAAOsE,aAAa,CAAC1C,GAAd,CAAkB,UAAU2C,SAAV,EAAqB;MAC5C,IAAIA,SAAS,KAAKrG,aAAlB,EAAiC;QAC/B,OAAO;UACL4D,GAAG,EAAE,KADA;UAEL0C,IAAI,EAAE7D,WAAW,CAAC8D,YAFb;UAGLjF,QAAQ,EAAE,SAASA,QAAT,GAAoB;YAC5BkE,eAAe,CAAClF,IAAI,CAACoD,GAAL,CAAS,UAAUhD,MAAV,EAAkBiD,KAAlB,EAAyB;cAChD,OAAOpB,SAAS,CAAC7B,MAAD,EAASiD,KAAT,CAAhB;YACD,CAFe,CAAD,CAAf;UAGD;QAPI,CAAP;MASD;;MAED,IAAI0C,SAAS,KAAKpG,gBAAlB,EAAoC;QAClC,OAAO;UACL2D,GAAG,EAAE,QADA;UAEL0C,IAAI,EAAE7D,WAAW,CAAC+D,YAFb;UAGLlF,QAAQ,EAAE,SAASA,QAAT,GAAoB;YAC5B,IAAImF,MAAM,GAAG,IAAIxB,GAAJ,CAAQH,qBAAR,CAAb;YACAzC,QAAQ,CAAC5B,OAAT,CAAiB,UAAUC,MAAV,EAAkBiD,KAAlB,EAAyB;cACxC,IAAIC,GAAG,GAAGrB,SAAS,CAAC7B,MAAD,EAASiD,KAAT,CAAnB;;cAEA,IAAI8C,MAAM,CAACZ,GAAP,CAAWjC,GAAX,CAAJ,EAAqB;gBACnB6C,MAAM,CAAC,QAAD,CAAN,CAAiB7C,GAAjB;cACD,CAFD,MAEO;gBACL6C,MAAM,CAACC,GAAP,CAAW9C,GAAX;cACD;YACF,CARD;YASA,IAAImB,IAAI,GAAG4B,KAAK,CAACC,IAAN,CAAWH,MAAX,CAAX;YACAjB,eAAe,CAACT,IAAD,CAAf;;YAEA,IAAIvD,cAAJ,EAAoB;cAClBzB,UAAU,CAAC,KAAD,EAAQ,OAAR,EAAiB,4EAAjB,CAAV;cACAyB,cAAc,CAACuD,IAAD,CAAd;YACD;UACF;QArBI,CAAP;MAuBD;;MAED,OAAOsB,SAAP;IACD,CAxCM,CAAP;EAyCD,CA/C6B,EA+C3B,CAACvE,UAAD,EAAagD,qBAAb,EAAoCzC,QAApC,EAA8CE,SAA9C,EAAyDf,cAAzD,EAAyEgE,eAAzE,CA/C2B,CAA9B,CA5JyD,CA2MsC;;EAE/F,IAAIqB,gBAAgB,GAAG3H,WAAW,CAAC,UAAU4H,OAAV,EAAmB;IACpD,IAAI,CAAChG,YAAL,EAAmB;MACjB,OAAOgG,OAAP;IACD,CAHmD,CAGlD;;;IAGF,IAAIL,MAAM,GAAG,IAAIxB,GAAJ,CAAQH,qBAAR,CAAb,CANoD,CAMP;;IAE7C,IAAIiC,UAAU,GAAGvD,WAAW,CAACE,GAAZ,CAAgBnB,SAAhB,EAA2ByE,MAA3B,CAAkC,UAAUpD,GAAV,EAAe;MAChE,OAAO,CAACH,gBAAgB,CAACY,GAAjB,CAAqBT,GAArB,EAA0BU,QAAlC;IACD,CAFgB,CAAjB;IAGA,IAAI2C,iBAAiB,GAAGF,UAAU,CAACG,KAAX,CAAiB,UAAUtD,GAAV,EAAe;MACtD,OAAO6C,MAAM,CAACZ,GAAP,CAAWjC,GAAX,CAAP;IACD,CAFuB,CAAxB;IAGA,IAAIuD,kBAAkB,GAAGJ,UAAU,CAACK,IAAX,CAAgB,UAAUxD,GAAV,EAAe;MACtD,OAAO6C,MAAM,CAACZ,GAAP,CAAWjC,GAAX,CAAP;IACD,CAFwB,CAAzB;;IAIA,IAAIyD,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;MACnD,IAAIC,UAAU,GAAG,EAAjB;;MAEA,IAAIL,iBAAJ,EAAuB;QACrBF,UAAU,CAACtG,OAAX,CAAmB,UAAUmD,GAAV,EAAe;UAChC6C,MAAM,CAAC,QAAD,CAAN,CAAiB7C,GAAjB;UACA0D,UAAU,CAAC3G,IAAX,CAAgBiD,GAAhB;QACD,CAHD;MAID,CALD,MAKO;QACLmD,UAAU,CAACtG,OAAX,CAAmB,UAAUmD,GAAV,EAAe;UAChC,IAAI,CAAC6C,MAAM,CAACZ,GAAP,CAAWjC,GAAX,CAAL,EAAsB;YACpB6C,MAAM,CAACC,GAAP,CAAW9C,GAAX;YACA0D,UAAU,CAAC3G,IAAX,CAAgBiD,GAAhB;UACD;QACF,CALD;MAMD;;MAED,IAAImB,IAAI,GAAG4B,KAAK,CAACC,IAAN,CAAWH,MAAX,CAAX;MACAjB,eAAe,CAACT,IAAD,CAAf;;MAEA,IAAIxD,WAAJ,EAAiB;QACfA,WAAW,CAAC,CAAC0F,iBAAF,EAAqBlC,IAAI,CAACrB,GAAL,CAAS,UAAUwC,CAAV,EAAa;UACpD,OAAO5D,cAAc,CAAC4D,CAAD,CAArB;QACD,CAF+B,CAArB,EAEPoB,UAAU,CAAC5D,GAAX,CAAe,UAAUwC,CAAV,EAAa;UAC9B,OAAO5D,cAAc,CAAC4D,CAAD,CAArB;QACD,CAFG,CAFO,CAAX;MAKD;IACF,CA3BD,CAlBoD,CA6CjD;IACH;;;IAGA,IAAIqB,KAAJ;;IAEA,IAAI3F,aAAa,KAAK,OAAtB,EAA+B;MAC7B,IAAI4F,mBAAJ;;MAEA,IAAIrB,gBAAJ,EAAsB;QACpB,IAAIsB,IAAI,GAAG,aAAazI,KAAK,CAAC0I,aAAN,CAAoB7H,IAApB,EAA0B;UAChD+C,iBAAiB,EAAEA;QAD6B,CAA1B,EAErBuD,gBAAgB,CAACzC,GAAjB,CAAqB,UAAU2C,SAAV,EAAqB1C,KAArB,EAA4B;UAClD,IAAIC,GAAG,GAAGyC,SAAS,CAACzC,GAApB;UAAA,IACI0C,IAAI,GAAGD,SAAS,CAACC,IADrB;UAAA,IAEIqB,gBAAgB,GAAGtB,SAAS,CAAC/E,QAFjC;UAGA,OAAO,aAAatC,KAAK,CAAC0I,aAAN,CAAoB7H,IAAI,CAAC+H,IAAzB,EAA+B;YACjDhE,GAAG,EAAEA,GAAG,IAAID,KADqC;YAEjDkE,OAAO,EAAE,SAASA,OAAT,GAAmB;cAC1B,IAAIF,gBAAJ,EAAsB;gBACpBA,gBAAgB,CAACZ,UAAD,CAAhB;cACD;YACF;UANgD,CAA/B,EAOjBT,IAPiB,CAApB;QAQD,CAZE,CAFqB,CAAxB;QAeAkB,mBAAmB,GAAG,aAAaxI,KAAK,CAAC0I,aAAN,CAAoB,KAApB,EAA2B;UAC5DI,SAAS,EAAE,GAAGlH,MAAH,CAAUwB,SAAV,EAAqB,kBAArB;QADiD,CAA3B,EAEhC,aAAapD,KAAK,CAAC0I,aAAN,CAAoB9H,QAApB,EAA8B;UAC5CmI,OAAO,EAAEN,IADmC;UAE5C7E,iBAAiB,EAAEA;QAFyB,CAA9B,EAGb,aAAa5D,KAAK,CAAC0I,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkC,aAAa1I,KAAK,CAAC0I,aAAN,CAAoBtI,YAApB,EAAkC,IAAlC,CAA/C,CAHA,CAFmB,CAAnC;MAMD;;MAED,IAAI4I,WAAW,GAAGxE,WAAW,CAAC0D,KAAZ,CAAkB,UAAUxG,MAAV,EAAkBiD,KAAlB,EAAyB;QAC3D,IAAIC,GAAG,GAAGrB,SAAS,CAAC7B,MAAD,EAASiD,KAAT,CAAnB;QACA,IAAIE,aAAa,GAAGJ,gBAAgB,CAACY,GAAjB,CAAqBT,GAArB,KAA6B,EAAjD;QACA,OAAOC,aAAa,CAACS,QAArB;MACD,CAJiB,CAAlB;MAKAiD,KAAK,GAAG,CAACtF,aAAD,IAAkB,aAAajD,KAAK,CAAC0I,aAAN,CAAoB,KAApB,EAA2B;QAChEI,SAAS,EAAE,GAAGlH,MAAH,CAAUwB,SAAV,EAAqB,YAArB;MADqD,CAA3B,EAEpC,aAAapD,KAAK,CAAC0I,aAAN,CAAoB/H,QAApB,EAA8B;QAC5CsI,OAAO,EAAE,CAACD,WAAD,IAAgB,CAAC,CAACxE,WAAW,CAAC0E,MAA9B,IAAwCjB,iBADL;QAE5CkB,aAAa,EAAE,CAAClB,iBAAD,IAAsBE,kBAFO;QAG5C9F,QAAQ,EAAEgG,iBAHkC;QAI5C/C,QAAQ,EAAEd,WAAW,CAAC0E,MAAZ,KAAuB,CAAvB,IAA4BF;MAJM,CAA9B,CAFuB,EAOnCR,mBAPmC,CAAvC;IAQD,CA3FmD,CA2FlD;;;IAGF,IAAIxF,UAAJ;;IAEA,IAAIJ,aAAa,KAAK,OAAtB,EAA+B;MAC7BI,UAAU,GAAG,SAASA,UAAT,CAAoBoG,CAApB,EAAuB1H,MAAvB,EAA+BiD,KAA/B,EAAsC;QACjD,IAAIC,GAAG,GAAGrB,SAAS,CAAC7B,MAAD,EAASiD,KAAT,CAAnB;QACA,IAAIsE,OAAO,GAAGxB,MAAM,CAACZ,GAAP,CAAWjC,GAAX,CAAd;QACA,OAAO;UACLyE,IAAI,EAAE,aAAarJ,KAAK,CAAC0I,aAAN,CAAoB5H,KAApB,EAA2BjB,QAAQ,CAAC,EAAD,EAAK4E,gBAAgB,CAACY,GAAjB,CAAqBT,GAArB,CAAL,EAAgC;YACpFqE,OAAO,EAAEA,OAD2E;YAEpFJ,OAAO,EAAE,SAASA,OAAT,CAAiBS,CAAjB,EAAoB;cAC3B,OAAOA,CAAC,CAACC,eAAF,EAAP;YACD,CAJmF;YAKpFlH,QAAQ,EAAE,SAASA,QAAT,CAAkB2E,KAAlB,EAAyB;cACjC,IAAI,CAACS,MAAM,CAACZ,GAAP,CAAWjC,GAAX,CAAL,EAAsB;gBACpBkC,sBAAsB,CAAClC,GAAD,EAAM,IAAN,EAAY,CAACA,GAAD,CAAZ,EAAmBoC,KAAK,CAACwC,WAAzB,CAAtB;cACD;YACF;UATmF,CAAhC,CAAnC,CADd;UAYLP,OAAO,EAAEA;QAZJ,CAAP;MAcD,CAjBD;IAkBD,CAnBD,MAmBO;MACLjG,UAAU,GAAG,SAASA,UAAT,CAAoBoG,CAApB,EAAuB1H,MAAvB,EAA+BiD,KAA/B,EAAsC;QACjD,IAAIC,GAAG,GAAGrB,SAAS,CAAC7B,MAAD,EAASiD,KAAT,CAAnB;QACA,IAAIsE,OAAO,GAAGxB,MAAM,CAACZ,GAAP,CAAWjC,GAAX,CAAd;QACA,IAAIuE,aAAa,GAAGjD,yBAAyB,CAACW,GAA1B,CAA8BjC,GAA9B,CAApB,CAHiD,CAGO;;QAExD,OAAO;UACLyE,IAAI,EAAE,aAAarJ,KAAK,CAAC0I,aAAN,CAAoB/H,QAApB,EAA8Bd,QAAQ,CAAC,EAAD,EAAK4E,gBAAgB,CAACY,GAAjB,CAAqBT,GAArB,CAAL,EAAgC;YACvFqE,OAAO,EAAEA,OAD8E;YAEvFE,aAAa,EAAEA,aAFwE;YAGvFN,OAAO,EAAE,SAASA,OAAT,CAAiBS,CAAjB,EAAoB;cAC3B,OAAOA,CAAC,CAACC,eAAF,EAAP;YACD,CALsF;YAMvFlH,QAAQ,EAAE,SAASA,QAAT,CAAkBoH,KAAlB,EAAyB;cACjC,IAAID,WAAW,GAAGC,KAAK,CAACD,WAAxB;cACA,IAAIE,QAAQ,GAAGF,WAAW,CAACE,QAA3B;cACA,IAAIC,UAAU,GAAG,CAAC,CAAlB;cACA,IAAIC,QAAQ,GAAG,CAAC,CAAhB,CAJiC,CAId;;cAEnB,IAAIF,QAAQ,IAAIvG,aAAhB,EAA+B;gBAC7B,IAAI0G,SAAS,GAAG,IAAI5D,GAAJ,CAAQ,CAACI,eAAD,EAAkBzB,GAAlB,CAAR,CAAhB;gBACAmD,UAAU,CAACK,IAAX,CAAgB,UAAU0B,SAAV,EAAqBC,WAArB,EAAkC;kBAChD,IAAIF,SAAS,CAAChD,GAAV,CAAciD,SAAd,CAAJ,EAA8B;oBAC5B,IAAIH,UAAU,KAAK,CAAC,CAApB,EAAuB;sBACrBA,UAAU,GAAGI,WAAb;oBACD,CAFD,MAEO;sBACLH,QAAQ,GAAGG,WAAX;sBACA,OAAO,IAAP;oBACD;kBACF;;kBAED,OAAO,KAAP;gBACD,CAXD;cAYD;;cAED,IAAIH,QAAQ,KAAK,CAAC,CAAd,IAAmBD,UAAU,KAAKC,QAAlC,IAA8CzG,aAAlD,EAAiE;gBAC/D;gBACA,IAAI6G,SAAS,GAAGjC,UAAU,CAAC/B,KAAX,CAAiB2D,UAAjB,EAA6BC,QAAQ,GAAG,CAAxC,CAAhB;gBACA,IAAIK,WAAW,GAAG,EAAlB;;gBAEA,IAAIhB,OAAJ,EAAa;kBACXe,SAAS,CAACvI,OAAV,CAAkB,UAAUqI,SAAV,EAAqB;oBACrC,IAAIrC,MAAM,CAACZ,GAAP,CAAWiD,SAAX,CAAJ,EAA2B;sBACzBG,WAAW,CAACtI,IAAZ,CAAiBmI,SAAjB;sBACArC,MAAM,CAAC,QAAD,CAAN,CAAiBqC,SAAjB;oBACD;kBACF,CALD;gBAMD,CAPD,MAOO;kBACLE,SAAS,CAACvI,OAAV,CAAkB,UAAUqI,SAAV,EAAqB;oBACrC,IAAI,CAACrC,MAAM,CAACZ,GAAP,CAAWiD,SAAX,CAAL,EAA4B;sBAC1BG,WAAW,CAACtI,IAAZ,CAAiBmI,SAAjB;sBACArC,MAAM,CAACC,GAAP,CAAWoC,SAAX;oBACD;kBACF,CALD;gBAMD;;gBAED,IAAI/D,IAAI,GAAG4B,KAAK,CAACC,IAAN,CAAWH,MAAX,CAAX;gBACAjB,eAAe,CAACT,IAAD,CAAf;;gBAEA,IAAItD,gBAAJ,EAAsB;kBACpBA,gBAAgB,CAAC,CAACwG,OAAF,EAAWlD,IAAI,CAACrB,GAAL,CAAS,UAAUoF,SAAV,EAAqB;oBACvD,OAAOxG,cAAc,CAACwG,SAAD,CAArB;kBACD,CAF0B,CAAX,EAEZG,WAAW,CAACvF,GAAZ,CAAgB,UAAUoF,SAAV,EAAqB;oBACvC,OAAOxG,cAAc,CAACwG,SAAD,CAArB;kBACD,CAFG,CAFY,CAAhB;gBAKD;cACF,CA/BD,MA+BO;gBACL;gBACA,IAAII,iBAAiB,GAAGtE,mBAAxB;;gBAEA,IAAIzC,aAAJ,EAAmB;kBACjB,IAAIsC,WAAW,GAAGwD,OAAO,GAAGzI,MAAM,CAAC0J,iBAAD,EAAoBtF,GAApB,CAAT,GAAoCrE,MAAM,CAAC2J,iBAAD,EAAoBtF,GAApB,CAAnE;kBACAkC,sBAAsB,CAAClC,GAAD,EAAM,CAACqE,OAAP,EAAgBxD,WAAhB,EAA6B+D,WAA7B,CAAtB;gBACD,CAHD,MAGO;kBACL;kBACA,IAAIW,MAAM,GAAG7J,YAAY,CAAC,GAAGsB,MAAH,CAAU7B,kBAAkB,CAACmK,iBAAD,CAA5B,EAAiD,CAACtF,GAAD,CAAjD,CAAD,EAA0D,IAA1D,EAAgEN,WAAhE,EAA6EY,kBAA7E,CAAzB;kBACA,IAAIkF,YAAY,GAAGD,MAAM,CAAC1E,WAA1B;kBAAA,IACIC,eAAe,GAAGyE,MAAM,CAACzE,eAD7B;kBAEA,IAAI2E,eAAe,GAAGD,YAAtB,CALK,CAK+B;;kBAEpC,IAAInB,OAAJ,EAAa;oBACX,IAAIqB,UAAU,GAAG,IAAIrE,GAAJ,CAAQmE,YAAR,CAAjB;oBACAE,UAAU,CAAC,QAAD,CAAV,CAAqB1F,GAArB;oBACAyF,eAAe,GAAG/J,YAAY,CAACqH,KAAK,CAACC,IAAN,CAAW0C,UAAX,CAAD,EAAyB;sBACrDrB,OAAO,EAAE,KAD4C;sBAErDvD,eAAe,EAAEA;oBAFoC,CAAzB,EAG3BpB,WAH2B,EAGdY,kBAHc,CAAZ,CAGkBO,WAHpC;kBAID;;kBAEDqB,sBAAsB,CAAClC,GAAD,EAAM,CAACqE,OAAP,EAAgBoB,eAAhB,EAAiCb,WAAjC,CAAtB;gBACD;cACF;;cAEDlD,kBAAkB,CAAC1B,GAAD,CAAlB;YACD;UAvFsF,CAAhC,CAAtC,CADd;UA0FLqE,OAAO,EAAEA;QA1FJ,CAAP;MA4FD,CAjGD;IAkGD;;IAED,IAAIsB,mBAAmB,GAAG,SAASA,mBAAT,CAA6BnB,CAA7B,EAAgC1H,MAAhC,EAAwCiD,KAAxC,EAA+C;MACvE,IAAI6F,WAAW,GAAGxH,UAAU,CAACoG,CAAD,EAAI1H,MAAJ,EAAYiD,KAAZ,CAA5B;MAAA,IACI0E,IAAI,GAAGmB,WAAW,CAACnB,IADvB;MAAA,IAEIJ,OAAO,GAAGuB,WAAW,CAACvB,OAF1B;;MAIA,IAAIlG,mBAAJ,EAAyB;QACvB,OAAOA,mBAAmB,CAACkG,OAAD,EAAUvH,MAAV,EAAkBiD,KAAlB,EAAyB0E,IAAzB,CAA1B;MACD;;MAED,OAAOA,IAAP;IACD,CAVD,CAxNoD,CAkOjD;;;IAGH,IAAIoB,eAAe,GAAG7K,eAAe,CAAC;MACpC8K,KAAK,EAAEhI,iBAD6B;MAEpCoG,SAAS,EAAE,GAAGlH,MAAH,CAAUwB,SAAV,EAAqB,mBAArB,CAFyB;MAGpCmF,KAAK,EAAEzG,YAAY,CAAC6I,WAAb,IAA4BpC,KAHC;MAIpCqC,MAAM,EAAEL;IAJ4B,CAAD,EAKlC9J,mBALkC,EAKb;MACtBqI,SAAS,EAAE,GAAGlH,MAAH,CAAUwB,SAAV,EAAqB,gBAArB;IADW,CALa,CAArC;;IASA,IAAII,UAAU,KAAK,KAAf,IAAwBsE,OAAO,CAACoB,MAAhC,IAA0C,CAACvF,qBAA/C,EAAsE;MACpE,IAAIkH,QAAQ,GAAGlL,QAAQ,CAACmI,OAAD,CAAvB;MAAA,IACIgD,YAAY,GAAGD,QAAQ,CAAC,CAAD,CAD3B;MAAA,IAEIE,WAAW,GAAGF,QAAQ,CAAC7E,KAAT,CAAe,CAAf,CAFlB;;MAIA,IAAIgF,cAAc,GAAG5J,KAAK,IAAIF,YAAY,CAAC6J,WAAW,CAAC,CAAD,CAAZ,CAA1C;;MAEA,IAAIC,cAAJ,EAAoB;QAClBF,YAAY,CAAC1J,KAAb,GAAqB4J,cAArB;MACD;;MAED,OAAO,CAACF,YAAD,EAAejL,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK4K,eAAL,CAAT,EAAgC;QAC5DrJ,KAAK,EAAE4J;MADqD,CAAhC,CAAvB,EAEHpJ,MAFG,CAEI7B,kBAAkB,CAACgL,WAAD,CAFtB,CAAP;IAGD;;IAED,OAAO,CAAClL,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK4K,eAAL,CAAT,EAAgC;MAC9CrJ,KAAK,EAAEA,KAAK,IAAIF,YAAY,CAAC4G,OAAO,CAAC,CAAD,CAAR;IADkB,CAAhC,CAAT,EAEHlG,MAFG,CAEI7B,kBAAkB,CAAC+H,OAAD,CAFtB,CAAP;EAGD,CAjQiC,EAiQ/B,CAACvE,SAAD,EAAYiB,WAAZ,EAAyB1C,YAAzB,EAAuC8D,mBAAvC,EAA4DE,qBAA5D,EAAmFI,yBAAnF,EAA8GxD,iBAA9G,EAAiIyE,gBAAjI,EAAmJ3D,UAAnJ,EAA+J6C,eAA/J,EAAgL5B,gBAAhL,EAAkMhC,gBAAlM,EAAoNqE,sBAApN,EAA4O5B,kBAA5O,CAjQ+B,CAAlC;EAkQA,OAAO,CAAC2C,gBAAD,EAAmB/B,qBAAnB,CAAP;AACD"},"metadata":{},"sourceType":"module"}