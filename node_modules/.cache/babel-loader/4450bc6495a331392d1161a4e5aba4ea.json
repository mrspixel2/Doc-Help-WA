{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\react\\\\src\\\\pages\\\\icons\\\\AntdIconsPage.tsx\";\nimport * as React from 'react';\nimport * as AntdIcons from '@ant-design/icons';\nimport { IconWrap } from './IconWrap';\nimport { usePageData } from '../../hooks/usePage';\nimport { categories } from './antd-icons';\nexport let ThemeType;\n\n(function (ThemeType) {\n  ThemeType[\"Filled\"] = \"Filled\";\n  ThemeType[\"Outlined\"] = \"Outlined\";\n  ThemeType[\"TwoTone\"] = \"TwoTone\";\n})(ThemeType || (ThemeType = {}));\n\nconst Category = _ref => {\n  let {\n    icons,\n    title\n  } = _ref;\n  const categoryTitle = title.charAt(0).toUpperCase() + title.slice(1);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"section-title mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, categoryTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, icons.map((_ref2, i) => {\n    let {\n      icon,\n      name\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-3 col-sm-4 col-6\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconWrap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, React.createElement(allIcons[icon]), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, name)));\n  })));\n};\n\nconst allIcons = AntdIcons;\nconst pageData = {\n  title: 'Ant icons',\n  fulFilled: true,\n  breadcrumbs: [{\n    title: 'Home',\n    route: 'default-dashboard'\n  }, {\n    title: 'UI Kit ',\n    route: 'default-dashboard'\n  }, {\n    title: 'Ant icons'\n  }]\n};\n\nconst AntdIconsPage = () => {\n  usePageData(pageData);\n  const theme = ThemeType.Outlined;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.keys(categories).map(key => {\n    const iconList = categories[key];\n    return {\n      category: key,\n      icons: iconList.map(iconName => ({\n        icon: iconName + theme,\n        name: iconName\n      })).filter(_ref3 => {\n        let {\n          icon\n        } = _ref3;\n        return allIcons[icon];\n      })\n    };\n  }).map(_ref4 => {\n    let {\n      category,\n      icons\n    } = _ref4;\n    return /*#__PURE__*/React.createElement(Category, {\n      key: category,\n      title: category,\n      icons: icons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default AntdIconsPage;","map":{"version":3,"names":["React","AntdIcons","IconWrap","usePageData","categories","ThemeType","Category","icons","title","categoryTitle","charAt","toUpperCase","slice","map","i","icon","name","createElement","allIcons","pageData","fulFilled","breadcrumbs","route","AntdIconsPage","theme","Outlined","Object","keys","key","iconList","category","iconName","filter"],"sources":["E:/Work/PFE/Project folder/react/src/pages/icons/AntdIconsPage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport * as AntdIcons from '@ant-design/icons';\n\nimport { IconWrap } from './IconWrap';\nimport { usePageData } from '../../hooks/usePage';\n\nimport { IPageData } from '../../interfaces/page';\n\nimport { categories, CategoriesKeys } from './antd-icons';\n\nexport enum ThemeType {\n  Filled = 'Filled',\n  Outlined = 'Outlined',\n  TwoTone = 'TwoTone'\n}\n\nconst Category = ({ icons, title }) => {\n  const categoryTitle = title.charAt(0).toUpperCase() + title.slice(1);\n\n  return (\n    <div>\n      <h4 className='section-title mb-4'>{categoryTitle}</h4>\n\n      <div className='row'>\n        {icons.map(({ icon, name }, i) => {\n\n          return (\n            <div className='col-lg-2 col-md-3 col-sm-4 col-6' key={i}>\n              <IconWrap>\n                {React.createElement(allIcons[icon])}\n                <span className='selector'>{name}</span>\n              </IconWrap>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst allIcons: {\n  [key: string]: any;\n} = AntdIcons;\n\nconst pageData: IPageData = {\n  title: 'Ant icons',\n  fulFilled: true,\n  breadcrumbs: [\n    {\n      title: 'Home',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'UI Kit ',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'Ant icons'\n    }\n  ]\n};\n\nconst AntdIconsPage = () => {\n  usePageData(pageData);\n  const theme = ThemeType.Outlined;\n\n  return (\n    <>\n      {Object.keys(categories)\n        .map((key) => {\n          const iconList = categories[key];\n\n          return {\n            category: key,\n            icons: iconList\n              .map((iconName) => ({ icon: iconName + theme, name: iconName }))\n              .filter(({ icon }) => allIcons[icon])\n          };\n        })\n        .map(({ category, icons }) => (\n          <Category key={category} title={category as CategoriesKeys} icons={icons} />\n        ))}\n    </>\n  );\n};\n\nexport default AntdIconsPage;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAIA,SAASC,UAAT,QAA2C,cAA3C;AAEA,WAAYC,SAAZ;;WAAYA,S;EAAAA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S;;AAMZ,MAAMC,QAAQ,GAAG,QAAsB;EAAA,IAArB;IAAEC,KAAF;IAASC;EAAT,CAAqB;EACrC,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCH,KAAK,CAACI,KAAN,CAAY,CAAZ,CAAtD;EAEA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,oBAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAoCH,aAApC,CADF,eAGE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGF,KAAK,CAACM,GAAN,CAAU,QAAiBC,CAAjB,KAAuB;IAAA,IAAtB;MAAEC,IAAF;MAAQC;IAAR,CAAsB;IAEhC,oBACE;MAAK,SAAS,EAAC,kCAAf;MAAkD,GAAG,EAAEF,CAAvD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,QAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGd,KAAK,CAACiB,aAAN,CAAoBC,QAAQ,CAACH,IAAD,CAA5B,CADH,eAEE;MAAM,SAAS,EAAC,UAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAA4BC,IAA5B,CAFF,CADF,CADF;EAQD,CAVA,CADH,CAHF,CADF;AAmBD,CAtBD;;AAwBA,MAAME,QAEL,GAAGjB,SAFJ;AAIA,MAAMkB,QAAmB,GAAG;EAC1BX,KAAK,EAAE,WADmB;EAE1BY,SAAS,EAAE,IAFe;EAG1BC,WAAW,EAAE,CACX;IACEb,KAAK,EAAE,MADT;IAEEc,KAAK,EAAE;EAFT,CADW,EAKX;IACEd,KAAK,EAAE,SADT;IAEEc,KAAK,EAAE;EAFT,CALW,EASX;IACEd,KAAK,EAAE;EADT,CATW;AAHa,CAA5B;;AAkBA,MAAMe,aAAa,GAAG,MAAM;EAC1BpB,WAAW,CAACgB,QAAD,CAAX;EACA,MAAMK,KAAK,GAAGnB,SAAS,CAACoB,QAAxB;EAEA,oBACE,0CACGC,MAAM,CAACC,IAAP,CAAYvB,UAAZ,EACES,GADF,CACOe,GAAD,IAAS;IACZ,MAAMC,QAAQ,GAAGzB,UAAU,CAACwB,GAAD,CAA3B;IAEA,OAAO;MACLE,QAAQ,EAAEF,GADL;MAELrB,KAAK,EAAEsB,QAAQ,CACZhB,GADI,CACCkB,QAAD,KAAe;QAAEhB,IAAI,EAAEgB,QAAQ,GAAGP,KAAnB;QAA0BR,IAAI,EAAEe;MAAhC,CAAf,CADA,EAEJC,MAFI,CAEG;QAAA,IAAC;UAAEjB;QAAF,CAAD;QAAA,OAAcG,QAAQ,CAACH,IAAD,CAAtB;MAAA,CAFH;IAFF,CAAP;EAMD,CAVF,EAWEF,GAXF,CAWM;IAAA,IAAC;MAAEiB,QAAF;MAAYvB;IAAZ,CAAD;IAAA,oBACH,oBAAC,QAAD;MAAU,GAAG,EAAEuB,QAAf;MAAyB,KAAK,EAAEA,QAAhC;MAA4D,KAAK,EAAEvB,KAAnE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADG;EAAA,CAXN,CADH,CADF;AAkBD,CAtBD;;AAwBA,eAAegB,aAAf"},"metadata":{},"sourceType":"module"}