{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\n\nvar Tree =\n/** @class */\nfunction () {\n  var Tree = /*#__PURE__*/function (_React$Component) {\n    _inherits(Tree, _React$Component);\n\n    var _super = _createSuper(Tree);\n\n    function Tree() {\n      var _this;\n\n      _classCallCheck(this, Tree);\n\n      _this = _super.apply(this, arguments);\n      _this.state = {\n        keyEntities: {},\n        selectedKeys: [],\n        checkedKeys: [],\n        halfCheckedKeys: [],\n        loadedKeys: [],\n        loadingKeys: [],\n        expandedKeys: [],\n        dragging: false,\n        dragNodesKeys: [],\n        dragOverNodeKey: null,\n        dropPosition: null,\n        treeData: [],\n        flattenNodes: [],\n        focused: false,\n        activeKey: null,\n        listChanging: false,\n        prevProps: null\n      };\n      _this.listRef = React.createRef();\n\n      _this.onNodeDragStart = function (event, node) {\n        var _this$state = _this.state,\n            expandedKeys = _this$state.expandedKeys,\n            keyEntities = _this$state.keyEntities;\n        var onDragStart = _this.props.onDragStart;\n        var eventKey = node.props.eventKey;\n        _this.dragNode = node;\n        var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n        _this.setState({\n          dragging: true,\n          dragNodesKeys: getDragNodesKeys(eventKey, keyEntities)\n        });\n\n        _this.setExpandedKeys(newExpandedKeys);\n\n        if (onDragStart) {\n          onDragStart({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n      /**\n       * [Legacy] Select handler is less small than node,\n       * so that this will trigger when drag enter node or select handler.\n       * This is a little tricky if customize css without padding.\n       * Better for use mouse move event to refresh drag state.\n       * But let's just keep it to avoid event trigger logic change.\n       */\n\n\n      _this.onNodeDragEnter = function (event, node) {\n        var _this$state2 = _this.state,\n            expandedKeys = _this$state2.expandedKeys,\n            keyEntities = _this$state2.keyEntities,\n            dragNodesKeys = _this$state2.dragNodesKeys;\n        var onDragEnter = _this.props.onDragEnter;\n        var _node$props = node.props,\n            pos = _node$props.pos,\n            eventKey = _node$props.eventKey;\n        if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n        var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n        if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n          _this.setState({\n            dragOverNodeKey: '',\n            dropPosition: null\n          });\n\n          return;\n        } // Ref: https://github.com/react-component/tree/issues/132\n        // Add timeout to let onDragLevel fire before onDragEnter,\n        // so that we can clean drag props for onDragLeave node.\n        // Macro task for this:\n        // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n        setTimeout(function () {\n          // Update drag over node\n          _this.setState({\n            dragOverNodeKey: eventKey,\n            dropPosition: dropPosition\n          }); // Side effect for delay drag\n\n\n          if (!_this.delayedDragEnterLogic) {\n            _this.delayedDragEnterLogic = {};\n          }\n\n          Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n            clearTimeout(_this.delayedDragEnterLogic[key]);\n          });\n          _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n            if (!_this.state.dragging) return;\n\n            var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n            var entity = keyEntities[eventKey];\n\n            if (entity && (entity.children || []).length) {\n              newExpandedKeys = arrAdd(expandedKeys, eventKey);\n            }\n\n            if (!('expandedKeys' in _this.props)) {\n              _this.setExpandedKeys(newExpandedKeys);\n            }\n\n            if (onDragEnter) {\n              onDragEnter({\n                event: event,\n                node: convertNodePropsToEventData(node.props),\n                expandedKeys: newExpandedKeys\n              });\n            }\n          }, 400);\n        }, 0);\n      };\n\n      _this.onNodeDragOver = function (event, node) {\n        var dragNodesKeys = _this.state.dragNodesKeys;\n        var onDragOver = _this.props.onDragOver;\n        var eventKey = node.props.eventKey;\n\n        if (dragNodesKeys.indexOf(eventKey) !== -1) {\n          return;\n        } // Update drag position\n\n\n        if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n          var dropPosition = calcDropPosition(event, node);\n          if (dropPosition === _this.state.dropPosition) return;\n\n          _this.setState({\n            dropPosition: dropPosition\n          });\n        }\n\n        if (onDragOver) {\n          onDragOver({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n\n      _this.onNodeDragLeave = function (event, node) {\n        var onDragLeave = _this.props.onDragLeave;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        if (onDragLeave) {\n          onDragLeave({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n\n      _this.onNodeDragEnd = function (event, node) {\n        var onDragEnd = _this.props.onDragEnd;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        _this.cleanDragState();\n\n        if (onDragEnd) {\n          onDragEnd({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n\n        _this.dragNode = null;\n      };\n\n      _this.onNodeDrop = function (event, node) {\n        var _this$state3 = _this.state,\n            _this$state3$dragNode = _this$state3.dragNodesKeys,\n            dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n            dropPosition = _this$state3.dropPosition;\n        var onDrop = _this.props.onDrop;\n        var _node$props2 = node.props,\n            eventKey = _node$props2.eventKey,\n            pos = _node$props2.pos;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        _this.cleanDragState();\n\n        if (dragNodesKeys.indexOf(eventKey) !== -1) {\n          warning(false, \"Can not drop to dragNode(include it's children node)\");\n          return;\n        }\n\n        var posArr = posToArr(pos);\n        var dropResult = {\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n          dragNodesKeys: dragNodesKeys.slice(),\n          dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n          dropToGap: false\n        };\n\n        if (dropPosition !== 0) {\n          dropResult.dropToGap = true;\n        }\n\n        if (onDrop) {\n          onDrop(dropResult);\n        }\n\n        _this.dragNode = null;\n      };\n\n      _this.cleanDragState = function () {\n        var dragging = _this.state.dragging;\n\n        if (dragging) {\n          _this.setState({\n            dragging: false\n          });\n        }\n      };\n\n      _this.onNodeClick = function (e, treeNode) {\n        var onClick = _this.props.onClick;\n\n        if (onClick) {\n          onClick(e, treeNode);\n        }\n      };\n\n      _this.onNodeDoubleClick = function (e, treeNode) {\n        var onDoubleClick = _this.props.onDoubleClick;\n\n        if (onDoubleClick) {\n          onDoubleClick(e, treeNode);\n        }\n      };\n\n      _this.onNodeSelect = function (e, treeNode) {\n        var selectedKeys = _this.state.selectedKeys;\n        var keyEntities = _this.state.keyEntities;\n        var _this$props = _this.props,\n            onSelect = _this$props.onSelect,\n            multiple = _this$props.multiple;\n        var selected = treeNode.selected,\n            key = treeNode.key;\n        var targetSelected = !selected; // Update selected keys\n\n        if (!targetSelected) {\n          selectedKeys = arrDel(selectedKeys, key);\n        } else if (!multiple) {\n          selectedKeys = [key];\n        } else {\n          selectedKeys = arrAdd(selectedKeys, key);\n        } // [Legacy] Not found related usage in doc or upper libs\n\n\n        var selectedNodes = selectedKeys.map(function (selectedKey) {\n          var entity = keyEntities[selectedKey];\n          if (!entity) return null;\n          return entity.node;\n        }).filter(function (node) {\n          return node;\n        });\n\n        _this.setUncontrolledState({\n          selectedKeys: selectedKeys\n        });\n\n        if (onSelect) {\n          onSelect(selectedKeys, {\n            event: 'select',\n            selected: targetSelected,\n            node: treeNode,\n            selectedNodes: selectedNodes,\n            nativeEvent: e.nativeEvent\n          });\n        }\n      };\n\n      _this.onNodeCheck = function (e, treeNode, checked) {\n        var _this$state4 = _this.state,\n            keyEntities = _this$state4.keyEntities,\n            oriCheckedKeys = _this$state4.checkedKeys,\n            oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n        var _this$props2 = _this.props,\n            checkStrictly = _this$props2.checkStrictly,\n            onCheck = _this$props2.onCheck;\n        var key = treeNode.key; // Prepare trigger arguments\n\n        var checkedObj;\n        var eventObj = {\n          event: 'check',\n          node: treeNode,\n          checked: checked,\n          nativeEvent: e.nativeEvent\n        };\n\n        if (checkStrictly) {\n          var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n          var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n          checkedObj = {\n            checked: checkedKeys,\n            halfChecked: halfCheckedKeys\n          };\n          eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n            return keyEntities[checkedKey];\n          }).filter(function (entity) {\n            return entity;\n          }).map(function (entity) {\n            return entity.node;\n          });\n\n          _this.setUncontrolledState({\n            checkedKeys: checkedKeys\n          });\n        } else {\n          // Always fill first\n          var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n              _checkedKeys = _conductCheck.checkedKeys,\n              _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n          if (!checked) {\n            var keySet = new Set(_checkedKeys);\n            keySet.delete(key);\n\n            var _conductCheck2 = conductCheck(Array.from(keySet), {\n              checked: false,\n              halfCheckedKeys: _halfCheckedKeys\n            }, keyEntities);\n\n            _checkedKeys = _conductCheck2.checkedKeys;\n            _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n          }\n\n          checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n          eventObj.checkedNodes = [];\n          eventObj.checkedNodesPositions = [];\n          eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n          _checkedKeys.forEach(function (checkedKey) {\n            var entity = keyEntities[checkedKey];\n            if (!entity) return;\n            var node = entity.node,\n                pos = entity.pos;\n            eventObj.checkedNodes.push(node);\n            eventObj.checkedNodesPositions.push({\n              node: node,\n              pos: pos\n            });\n          });\n\n          _this.setUncontrolledState({\n            checkedKeys: _checkedKeys\n          }, false, {\n            halfCheckedKeys: _halfCheckedKeys\n          });\n        }\n\n        if (onCheck) {\n          onCheck(checkedObj, eventObj);\n        }\n      };\n\n      _this.onNodeLoad = function (treeNode) {\n        return new Promise(function (resolve) {\n          // We need to get the latest state of loading/loaded keys\n          _this.setState(function (_ref) {\n            var _ref$loadedKeys = _ref.loadedKeys,\n                loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n                _ref$loadingKeys = _ref.loadingKeys,\n                loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n            var _this$props3 = _this.props,\n                loadData = _this$props3.loadData,\n                onLoad = _this$props3.onLoad;\n            var key = treeNode.key;\n\n            if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n              // react 15 will warn if return null\n              return {};\n            } // Process load data\n\n\n            var promise = loadData(treeNode);\n            promise.then(function () {\n              var _this$state5 = _this.state,\n                  currentLoadedKeys = _this$state5.loadedKeys,\n                  currentLoadingKeys = _this$state5.loadingKeys;\n              var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n              var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n              // https://github.com/ant-design/ant-design/issues/12464\n\n              if (onLoad) {\n                onLoad(newLoadedKeys, {\n                  event: 'load',\n                  node: treeNode\n                });\n              }\n\n              _this.setUncontrolledState({\n                loadedKeys: newLoadedKeys\n              });\n\n              _this.setState({\n                loadingKeys: newLoadingKeys\n              });\n\n              resolve();\n            });\n            return {\n              loadingKeys: arrAdd(loadingKeys, key)\n            };\n          });\n        });\n      };\n\n      _this.onNodeMouseEnter = function (event, node) {\n        var onMouseEnter = _this.props.onMouseEnter;\n\n        if (onMouseEnter) {\n          onMouseEnter({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onNodeMouseLeave = function (event, node) {\n        var onMouseLeave = _this.props.onMouseLeave;\n\n        if (onMouseLeave) {\n          onMouseLeave({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onNodeContextMenu = function (event, node) {\n        var onRightClick = _this.props.onRightClick;\n\n        if (onRightClick) {\n          event.preventDefault();\n          onRightClick({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onFocus = function () {\n        var onFocus = _this.props.onFocus;\n\n        _this.setState({\n          focused: true\n        });\n\n        if (onFocus) {\n          onFocus.apply(void 0, arguments);\n        }\n      };\n\n      _this.onBlur = function () {\n        var onBlur = _this.props.onBlur;\n\n        _this.setState({\n          focused: false\n        });\n\n        _this.onActiveChange(null);\n\n        if (onBlur) {\n          onBlur.apply(void 0, arguments);\n        }\n      };\n\n      _this.getTreeNodeRequiredProps = function () {\n        var _this$state6 = _this.state,\n            expandedKeys = _this$state6.expandedKeys,\n            selectedKeys = _this$state6.selectedKeys,\n            loadedKeys = _this$state6.loadedKeys,\n            loadingKeys = _this$state6.loadingKeys,\n            checkedKeys = _this$state6.checkedKeys,\n            halfCheckedKeys = _this$state6.halfCheckedKeys,\n            dragOverNodeKey = _this$state6.dragOverNodeKey,\n            dropPosition = _this$state6.dropPosition,\n            keyEntities = _this$state6.keyEntities;\n        return {\n          expandedKeys: expandedKeys || [],\n          selectedKeys: selectedKeys || [],\n          loadedKeys: loadedKeys || [],\n          loadingKeys: loadingKeys || [],\n          checkedKeys: checkedKeys || [],\n          halfCheckedKeys: halfCheckedKeys || [],\n          dragOverNodeKey: dragOverNodeKey,\n          dropPosition: dropPosition,\n          keyEntities: keyEntities\n        };\n      }; // =========================== Expanded ===========================\n\n      /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n      _this.setExpandedKeys = function (expandedKeys) {\n        var treeData = _this.state.treeData;\n        var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n        _this.setUncontrolledState({\n          expandedKeys: expandedKeys,\n          flattenNodes: flattenNodes\n        }, true);\n      };\n\n      _this.onNodeExpand = function (e, treeNode) {\n        var expandedKeys = _this.state.expandedKeys;\n        var listChanging = _this.state.listChanging;\n        var _this$props4 = _this.props,\n            onExpand = _this$props4.onExpand,\n            loadData = _this$props4.loadData;\n        var key = treeNode.key,\n            expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n        if (listChanging) {\n          return;\n        } // Update selected keys\n\n\n        var index = expandedKeys.indexOf(key);\n        var targetExpanded = !expanded;\n        warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n        if (targetExpanded) {\n          expandedKeys = arrAdd(expandedKeys, key);\n        } else {\n          expandedKeys = arrDel(expandedKeys, key);\n        }\n\n        _this.setExpandedKeys(expandedKeys);\n\n        if (onExpand) {\n          onExpand(expandedKeys, {\n            node: treeNode,\n            expanded: targetExpanded,\n            nativeEvent: e.nativeEvent\n          });\n        } // Async Load data\n\n\n        if (targetExpanded && loadData) {\n          var loadPromise = _this.onNodeLoad(treeNode);\n\n          if (loadPromise) {\n            loadPromise.then(function () {\n              // [Legacy] Refresh logic\n              var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n              _this.setUncontrolledState({\n                flattenNodes: newFlattenTreeData\n              });\n            });\n          }\n        }\n      };\n\n      _this.onListChangeStart = function () {\n        _this.setUncontrolledState({\n          listChanging: true\n        });\n      };\n\n      _this.onListChangeEnd = function () {\n        setTimeout(function () {\n          _this.setUncontrolledState({\n            listChanging: false\n          });\n        });\n      }; // =========================== Keyboard ===========================\n\n\n      _this.onActiveChange = function (newActiveKey) {\n        var activeKey = _this.state.activeKey;\n        var onActiveChange = _this.props.onActiveChange;\n\n        if (activeKey === newActiveKey) {\n          return;\n        }\n\n        _this.setState({\n          activeKey: newActiveKey\n        });\n\n        if (newActiveKey !== null) {\n          _this.scrollTo({\n            key: newActiveKey\n          });\n        }\n\n        if (onActiveChange) {\n          onActiveChange(newActiveKey);\n        }\n      };\n\n      _this.getActiveItem = function () {\n        var _this$state7 = _this.state,\n            activeKey = _this$state7.activeKey,\n            flattenNodes = _this$state7.flattenNodes;\n\n        if (activeKey === null) {\n          return null;\n        }\n\n        return flattenNodes.find(function (_ref2) {\n          var key = _ref2.data.key;\n          return key === activeKey;\n        }) || null;\n      };\n\n      _this.offsetActiveKey = function (offset) {\n        var _this$state8 = _this.state,\n            flattenNodes = _this$state8.flattenNodes,\n            activeKey = _this$state8.activeKey;\n        var index = flattenNodes.findIndex(function (_ref3) {\n          var key = _ref3.data.key;\n          return key === activeKey;\n        }); // Align with index\n\n        if (index === -1 && offset < 0) {\n          index = flattenNodes.length;\n        }\n\n        index = (index + offset + flattenNodes.length) % flattenNodes.length;\n        var item = flattenNodes[index];\n\n        if (item) {\n          var key = item.data.key;\n\n          _this.onActiveChange(key);\n        } else {\n          _this.onActiveChange(null);\n        }\n      };\n\n      _this.onKeyDown = function (event) {\n        var _this$state9 = _this.state,\n            activeKey = _this$state9.activeKey,\n            expandedKeys = _this$state9.expandedKeys,\n            checkedKeys = _this$state9.checkedKeys;\n        var _this$props5 = _this.props,\n            onKeyDown = _this$props5.onKeyDown,\n            checkable = _this$props5.checkable,\n            selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n        switch (event.which) {\n          case KeyCode.UP:\n            {\n              _this.offsetActiveKey(-1);\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.DOWN:\n            {\n              _this.offsetActiveKey(1);\n\n              event.preventDefault();\n              break;\n            }\n        } // >>>>>>>>>> Expand & Selection\n\n\n        var activeItem = _this.getActiveItem();\n\n        if (activeItem && activeItem.data) {\n          var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n          var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n          var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n            data: activeItem.data,\n            active: true\n          }));\n\n          switch (event.which) {\n            // >>> Expand\n            case KeyCode.LEFT:\n              {\n                // Collapse if possible\n                if (expandable && expandedKeys.includes(activeKey)) {\n                  _this.onNodeExpand({}, eventNode);\n                } else if (activeItem.parent) {\n                  _this.onActiveChange(activeItem.parent.data.key);\n                }\n\n                event.preventDefault();\n                break;\n              }\n\n            case KeyCode.RIGHT:\n              {\n                // Expand if possible\n                if (expandable && !expandedKeys.includes(activeKey)) {\n                  _this.onNodeExpand({}, eventNode);\n                } else if (activeItem.children && activeItem.children.length) {\n                  _this.onActiveChange(activeItem.children[0].data.key);\n                }\n\n                event.preventDefault();\n                break;\n              }\n            // Selection\n\n            case KeyCode.ENTER:\n            case KeyCode.SPACE:\n              {\n                if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                  _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n                } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                  _this.onNodeSelect({}, eventNode);\n                }\n\n                break;\n              }\n          }\n        }\n\n        if (onKeyDown) {\n          onKeyDown(event);\n        }\n      };\n      /**\n       * Only update the value which is not in props\n       */\n\n\n      _this.setUncontrolledState = function (state) {\n        var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      };\n\n      _this.scrollTo = function (scroll) {\n        _this.listRef.current.scrollTo(scroll);\n      };\n\n      return _this;\n    }\n\n    _createClass(Tree, [{\n      key: \"render\",\n      value: function render() {\n        var _classNames;\n\n        var _this$state10 = this.state,\n            focused = _this$state10.focused,\n            flattenNodes = _this$state10.flattenNodes,\n            keyEntities = _this$state10.keyEntities,\n            dragging = _this$state10.dragging,\n            activeKey = _this$state10.activeKey;\n        var _this$props6 = this.props,\n            prefixCls = _this$props6.prefixCls,\n            className = _this$props6.className,\n            style = _this$props6.style,\n            showLine = _this$props6.showLine,\n            focusable = _this$props6.focusable,\n            _this$props6$tabIndex = _this$props6.tabIndex,\n            tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n            selectable = _this$props6.selectable,\n            showIcon = _this$props6.showIcon,\n            icon = _this$props6.icon,\n            switcherIcon = _this$props6.switcherIcon,\n            draggable = _this$props6.draggable,\n            checkable = _this$props6.checkable,\n            checkStrictly = _this$props6.checkStrictly,\n            disabled = _this$props6.disabled,\n            motion = _this$props6.motion,\n            loadData = _this$props6.loadData,\n            filterTreeNode = _this$props6.filterTreeNode,\n            height = _this$props6.height,\n            itemHeight = _this$props6.itemHeight,\n            virtual = _this$props6.virtual;\n        var domProps = getDataAndAria(this.props);\n        return React.createElement(TreeContext.Provider, {\n          value: {\n            prefixCls: prefixCls,\n            selectable: selectable,\n            showIcon: showIcon,\n            icon: icon,\n            switcherIcon: switcherIcon,\n            draggable: draggable,\n            checkable: checkable,\n            checkStrictly: checkStrictly,\n            disabled: disabled,\n            keyEntities: keyEntities,\n            loadData: loadData,\n            filterTreeNode: filterTreeNode,\n            onNodeClick: this.onNodeClick,\n            onNodeDoubleClick: this.onNodeDoubleClick,\n            onNodeExpand: this.onNodeExpand,\n            onNodeSelect: this.onNodeSelect,\n            onNodeCheck: this.onNodeCheck,\n            onNodeLoad: this.onNodeLoad,\n            onNodeMouseEnter: this.onNodeMouseEnter,\n            onNodeMouseLeave: this.onNodeMouseLeave,\n            onNodeContextMenu: this.onNodeContextMenu,\n            onNodeDragStart: this.onNodeDragStart,\n            onNodeDragEnter: this.onNodeDragEnter,\n            onNodeDragOver: this.onNodeDragOver,\n            onNodeDragLeave: this.onNodeDragLeave,\n            onNodeDragEnd: this.onNodeDragEnd,\n            onNodeDrop: this.onNodeDrop\n          }\n        }, React.createElement(\"div\", {\n          className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n        }, React.createElement(NodeList, Object.assign({\n          ref: this.listRef,\n          prefixCls: prefixCls,\n          style: style,\n          data: flattenNodes,\n          disabled: disabled,\n          selectable: selectable,\n          checkable: !!checkable,\n          motion: motion,\n          dragging: dragging,\n          height: height,\n          itemHeight: itemHeight,\n          virtual: virtual,\n          focusable: focusable,\n          focused: focused,\n          tabIndex: tabIndex,\n          activeItem: this.getActiveItem(),\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          onKeyDown: this.onKeyDown,\n          onActiveChange: this.onActiveChange,\n          onListChangeStart: this.onListChangeStart,\n          onListChangeEnd: this.onListChangeEnd\n        }, this.getTreeNodeRequiredProps(), domProps))));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, prevState) {\n        var prevProps = prevState.prevProps;\n        var newState = {\n          prevProps: props\n        };\n\n        function needSync(name) {\n          return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n        } // ================== Tree Node ==================\n\n\n        var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n        if (needSync('treeData')) {\n          treeData = props.treeData;\n        } else if (needSync('children')) {\n          warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n          treeData = convertTreeToData(props.children);\n        } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n        if (treeData) {\n          newState.treeData = treeData;\n          var entitiesMap = convertDataToEntities(treeData);\n          newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n          if (process.env.NODE_ENV !== 'production') {\n            warningWithoutKey(treeData);\n          }\n        }\n\n        var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n        if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n          newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n        } else if (!prevProps && props.defaultExpandAll) {\n          var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n          delete cloneKeyEntities[MOTION_KEY];\n          newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n            return cloneKeyEntities[key].key;\n          });\n        } else if (!prevProps && props.defaultExpandedKeys) {\n          newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n        }\n\n        if (!newState.expandedKeys) {\n          delete newState.expandedKeys;\n        } // ================ flattenNodes =================\n\n\n        if (treeData || newState.expandedKeys) {\n          var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n          newState.flattenNodes = flattenNodes;\n        } // ================ selectedKeys =================\n\n\n        if (props.selectable) {\n          if (needSync('selectedKeys')) {\n            newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n          } else if (!prevProps && props.defaultSelectedKeys) {\n            newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n          }\n        } // ================= checkedKeys =================\n\n\n        if (props.checkable) {\n          var checkedKeyEntity;\n\n          if (needSync('checkedKeys')) {\n            checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n          } else if (!prevProps && props.defaultCheckedKeys) {\n            checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n          } else if (treeData) {\n            // If `treeData` changed, we also need check it\n            checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n              checkedKeys: prevState.checkedKeys,\n              halfCheckedKeys: prevState.halfCheckedKeys\n            };\n          }\n\n          if (checkedKeyEntity) {\n            var _checkedKeyEntity = checkedKeyEntity,\n                _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n                checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n                _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n                halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n            if (!props.checkStrictly) {\n              var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n              checkedKeys = conductKeys.checkedKeys;\n              halfCheckedKeys = conductKeys.halfCheckedKeys;\n            }\n\n            newState.checkedKeys = checkedKeys;\n            newState.halfCheckedKeys = halfCheckedKeys;\n          }\n        } // ================= loadedKeys ==================\n\n\n        if (needSync('loadedKeys')) {\n          newState.loadedKeys = props.loadedKeys;\n        }\n\n        return newState;\n      }\n    }]);\n\n    return Tree;\n  }(React.Component);\n\n  Tree.defaultProps = {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  };\n  Tree.TreeNode = TreeNode;\n  return Tree;\n}();\n\nexport default Tree;","map":{"version":3,"names":["_defineProperty","_toConsumableArray","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","React","KeyCode","warning","classNames","TreeContext","getDataAndAria","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","Tree","_React$Component","_super","_this","state","keyEntities","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragging","dragNodesKeys","dragOverNodeKey","dropPosition","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","dragNode","newExpandedKeys","setState","setExpandedKeys","onNodeDragEnter","_this$state2","onDragEnter","_node$props","pos","indexOf","setTimeout","delayedDragEnterLogic","clearTimeout","window","entity","children","onNodeDragOver","onDragOver","onNodeDragLeave","onDragLeave","onNodeDragEnd","onDragEnd","cleanDragState","onNodeDrop","_this$state3","_this$state3$dragNode","onDrop","_node$props2","posArr","dropResult","slice","Number","dropToGap","onNodeClick","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","setUncontrolledState","nativeEvent","onNodeCheck","checked","_this$state4","oriCheckedKeys","oriHalfCheckedKeys","_this$props2","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","concat","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","Array","from","checkedNodesPositions","onNodeLoad","Promise","resolve","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props3","loadData","onLoad","promise","then","_this$state5","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","getTreeNodeRequiredProps","_this$state6","onNodeExpand","_this$props4","onExpand","expanded","index","targetExpanded","loadPromise","newFlattenTreeData","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","getActiveItem","_this$state7","find","_ref2","data","offsetActiveKey","offset","_this$state8","findIndex","_ref3","item","onKeyDown","_this$state9","_this$props5","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","active","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","undefined","forceState","needSync","allPassed","newState","name","scroll","current","value","render","_classNames","_this$state10","_this$props6","prefixCls","className","style","showLine","focusable","_this$props6$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","domProps","createElement","Provider","assign","ref","getDerivedStateFromProps","prevState","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"sources":["E:/Work/PFE/Project folder/react/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\n\nvar Tree =\n/** @class */\nfunction () {\n  var Tree = /*#__PURE__*/function (_React$Component) {\n    _inherits(Tree, _React$Component);\n\n    var _super = _createSuper(Tree);\n\n    function Tree() {\n      var _this;\n\n      _classCallCheck(this, Tree);\n\n      _this = _super.apply(this, arguments);\n      _this.state = {\n        keyEntities: {},\n        selectedKeys: [],\n        checkedKeys: [],\n        halfCheckedKeys: [],\n        loadedKeys: [],\n        loadingKeys: [],\n        expandedKeys: [],\n        dragging: false,\n        dragNodesKeys: [],\n        dragOverNodeKey: null,\n        dropPosition: null,\n        treeData: [],\n        flattenNodes: [],\n        focused: false,\n        activeKey: null,\n        listChanging: false,\n        prevProps: null\n      };\n      _this.listRef = React.createRef();\n\n      _this.onNodeDragStart = function (event, node) {\n        var _this$state = _this.state,\n            expandedKeys = _this$state.expandedKeys,\n            keyEntities = _this$state.keyEntities;\n        var onDragStart = _this.props.onDragStart;\n        var eventKey = node.props.eventKey;\n        _this.dragNode = node;\n        var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n        _this.setState({\n          dragging: true,\n          dragNodesKeys: getDragNodesKeys(eventKey, keyEntities)\n        });\n\n        _this.setExpandedKeys(newExpandedKeys);\n\n        if (onDragStart) {\n          onDragStart({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n      /**\n       * [Legacy] Select handler is less small than node,\n       * so that this will trigger when drag enter node or select handler.\n       * This is a little tricky if customize css without padding.\n       * Better for use mouse move event to refresh drag state.\n       * But let's just keep it to avoid event trigger logic change.\n       */\n\n\n      _this.onNodeDragEnter = function (event, node) {\n        var _this$state2 = _this.state,\n            expandedKeys = _this$state2.expandedKeys,\n            keyEntities = _this$state2.keyEntities,\n            dragNodesKeys = _this$state2.dragNodesKeys;\n        var onDragEnter = _this.props.onDragEnter;\n        var _node$props = node.props,\n            pos = _node$props.pos,\n            eventKey = _node$props.eventKey;\n        if (!_this.dragNode || dragNodesKeys.indexOf(eventKey) !== -1) return;\n        var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n        if (_this.dragNode.props.eventKey === eventKey && dropPosition === 0) {\n          _this.setState({\n            dragOverNodeKey: '',\n            dropPosition: null\n          });\n\n          return;\n        } // Ref: https://github.com/react-component/tree/issues/132\n        // Add timeout to let onDragLevel fire before onDragEnter,\n        // so that we can clean drag props for onDragLeave node.\n        // Macro task for this:\n        // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n        setTimeout(function () {\n          // Update drag over node\n          _this.setState({\n            dragOverNodeKey: eventKey,\n            dropPosition: dropPosition\n          }); // Side effect for delay drag\n\n\n          if (!_this.delayedDragEnterLogic) {\n            _this.delayedDragEnterLogic = {};\n          }\n\n          Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n            clearTimeout(_this.delayedDragEnterLogic[key]);\n          });\n          _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n            if (!_this.state.dragging) return;\n\n            var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n            var entity = keyEntities[eventKey];\n\n            if (entity && (entity.children || []).length) {\n              newExpandedKeys = arrAdd(expandedKeys, eventKey);\n            }\n\n            if (!('expandedKeys' in _this.props)) {\n              _this.setExpandedKeys(newExpandedKeys);\n            }\n\n            if (onDragEnter) {\n              onDragEnter({\n                event: event,\n                node: convertNodePropsToEventData(node.props),\n                expandedKeys: newExpandedKeys\n              });\n            }\n          }, 400);\n        }, 0);\n      };\n\n      _this.onNodeDragOver = function (event, node) {\n        var dragNodesKeys = _this.state.dragNodesKeys;\n        var onDragOver = _this.props.onDragOver;\n        var eventKey = node.props.eventKey;\n\n        if (dragNodesKeys.indexOf(eventKey) !== -1) {\n          return;\n        } // Update drag position\n\n\n        if (_this.dragNode && eventKey === _this.state.dragOverNodeKey) {\n          var dropPosition = calcDropPosition(event, node);\n          if (dropPosition === _this.state.dropPosition) return;\n\n          _this.setState({\n            dropPosition: dropPosition\n          });\n        }\n\n        if (onDragOver) {\n          onDragOver({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n\n      _this.onNodeDragLeave = function (event, node) {\n        var onDragLeave = _this.props.onDragLeave;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        if (onDragLeave) {\n          onDragLeave({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n      };\n\n      _this.onNodeDragEnd = function (event, node) {\n        var onDragEnd = _this.props.onDragEnd;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        _this.cleanDragState();\n\n        if (onDragEnd) {\n          onDragEnd({\n            event: event,\n            node: convertNodePropsToEventData(node.props)\n          });\n        }\n\n        _this.dragNode = null;\n      };\n\n      _this.onNodeDrop = function (event, node) {\n        var _this$state3 = _this.state,\n            _this$state3$dragNode = _this$state3.dragNodesKeys,\n            dragNodesKeys = _this$state3$dragNode === void 0 ? [] : _this$state3$dragNode,\n            dropPosition = _this$state3.dropPosition;\n        var onDrop = _this.props.onDrop;\n        var _node$props2 = node.props,\n            eventKey = _node$props2.eventKey,\n            pos = _node$props2.pos;\n\n        _this.setState({\n          dragOverNodeKey: ''\n        });\n\n        _this.cleanDragState();\n\n        if (dragNodesKeys.indexOf(eventKey) !== -1) {\n          warning(false, \"Can not drop to dragNode(include it's children node)\");\n          return;\n        }\n\n        var posArr = posToArr(pos);\n        var dropResult = {\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n          dragNodesKeys: dragNodesKeys.slice(),\n          dropPosition: dropPosition + Number(posArr[posArr.length - 1]),\n          dropToGap: false\n        };\n\n        if (dropPosition !== 0) {\n          dropResult.dropToGap = true;\n        }\n\n        if (onDrop) {\n          onDrop(dropResult);\n        }\n\n        _this.dragNode = null;\n      };\n\n      _this.cleanDragState = function () {\n        var dragging = _this.state.dragging;\n\n        if (dragging) {\n          _this.setState({\n            dragging: false\n          });\n        }\n      };\n\n      _this.onNodeClick = function (e, treeNode) {\n        var onClick = _this.props.onClick;\n\n        if (onClick) {\n          onClick(e, treeNode);\n        }\n      };\n\n      _this.onNodeDoubleClick = function (e, treeNode) {\n        var onDoubleClick = _this.props.onDoubleClick;\n\n        if (onDoubleClick) {\n          onDoubleClick(e, treeNode);\n        }\n      };\n\n      _this.onNodeSelect = function (e, treeNode) {\n        var selectedKeys = _this.state.selectedKeys;\n        var keyEntities = _this.state.keyEntities;\n        var _this$props = _this.props,\n            onSelect = _this$props.onSelect,\n            multiple = _this$props.multiple;\n        var selected = treeNode.selected,\n            key = treeNode.key;\n        var targetSelected = !selected; // Update selected keys\n\n        if (!targetSelected) {\n          selectedKeys = arrDel(selectedKeys, key);\n        } else if (!multiple) {\n          selectedKeys = [key];\n        } else {\n          selectedKeys = arrAdd(selectedKeys, key);\n        } // [Legacy] Not found related usage in doc or upper libs\n\n\n        var selectedNodes = selectedKeys.map(function (selectedKey) {\n          var entity = keyEntities[selectedKey];\n          if (!entity) return null;\n          return entity.node;\n        }).filter(function (node) {\n          return node;\n        });\n\n        _this.setUncontrolledState({\n          selectedKeys: selectedKeys\n        });\n\n        if (onSelect) {\n          onSelect(selectedKeys, {\n            event: 'select',\n            selected: targetSelected,\n            node: treeNode,\n            selectedNodes: selectedNodes,\n            nativeEvent: e.nativeEvent\n          });\n        }\n      };\n\n      _this.onNodeCheck = function (e, treeNode, checked) {\n        var _this$state4 = _this.state,\n            keyEntities = _this$state4.keyEntities,\n            oriCheckedKeys = _this$state4.checkedKeys,\n            oriHalfCheckedKeys = _this$state4.halfCheckedKeys;\n        var _this$props2 = _this.props,\n            checkStrictly = _this$props2.checkStrictly,\n            onCheck = _this$props2.onCheck;\n        var key = treeNode.key; // Prepare trigger arguments\n\n        var checkedObj;\n        var eventObj = {\n          event: 'check',\n          node: treeNode,\n          checked: checked,\n          nativeEvent: e.nativeEvent\n        };\n\n        if (checkStrictly) {\n          var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n          var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n          checkedObj = {\n            checked: checkedKeys,\n            halfChecked: halfCheckedKeys\n          };\n          eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n            return keyEntities[checkedKey];\n          }).filter(function (entity) {\n            return entity;\n          }).map(function (entity) {\n            return entity.node;\n          });\n\n          _this.setUncontrolledState({\n            checkedKeys: checkedKeys\n          });\n        } else {\n          // Always fill first\n          var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n              _checkedKeys = _conductCheck.checkedKeys,\n              _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n          if (!checked) {\n            var keySet = new Set(_checkedKeys);\n            keySet.delete(key);\n\n            var _conductCheck2 = conductCheck(Array.from(keySet), {\n              checked: false,\n              halfCheckedKeys: _halfCheckedKeys\n            }, keyEntities);\n\n            _checkedKeys = _conductCheck2.checkedKeys;\n            _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n          }\n\n          checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n          eventObj.checkedNodes = [];\n          eventObj.checkedNodesPositions = [];\n          eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n          _checkedKeys.forEach(function (checkedKey) {\n            var entity = keyEntities[checkedKey];\n            if (!entity) return;\n            var node = entity.node,\n                pos = entity.pos;\n            eventObj.checkedNodes.push(node);\n            eventObj.checkedNodesPositions.push({\n              node: node,\n              pos: pos\n            });\n          });\n\n          _this.setUncontrolledState({\n            checkedKeys: _checkedKeys\n          }, false, {\n            halfCheckedKeys: _halfCheckedKeys\n          });\n        }\n\n        if (onCheck) {\n          onCheck(checkedObj, eventObj);\n        }\n      };\n\n      _this.onNodeLoad = function (treeNode) {\n        return new Promise(function (resolve) {\n          // We need to get the latest state of loading/loaded keys\n          _this.setState(function (_ref) {\n            var _ref$loadedKeys = _ref.loadedKeys,\n                loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n                _ref$loadingKeys = _ref.loadingKeys,\n                loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n            var _this$props3 = _this.props,\n                loadData = _this$props3.loadData,\n                onLoad = _this$props3.onLoad;\n            var key = treeNode.key;\n\n            if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n              // react 15 will warn if return null\n              return {};\n            } // Process load data\n\n\n            var promise = loadData(treeNode);\n            promise.then(function () {\n              var _this$state5 = _this.state,\n                  currentLoadedKeys = _this$state5.loadedKeys,\n                  currentLoadingKeys = _this$state5.loadingKeys;\n              var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n              var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n              // https://github.com/ant-design/ant-design/issues/12464\n\n              if (onLoad) {\n                onLoad(newLoadedKeys, {\n                  event: 'load',\n                  node: treeNode\n                });\n              }\n\n              _this.setUncontrolledState({\n                loadedKeys: newLoadedKeys\n              });\n\n              _this.setState({\n                loadingKeys: newLoadingKeys\n              });\n\n              resolve();\n            });\n            return {\n              loadingKeys: arrAdd(loadingKeys, key)\n            };\n          });\n        });\n      };\n\n      _this.onNodeMouseEnter = function (event, node) {\n        var onMouseEnter = _this.props.onMouseEnter;\n\n        if (onMouseEnter) {\n          onMouseEnter({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onNodeMouseLeave = function (event, node) {\n        var onMouseLeave = _this.props.onMouseLeave;\n\n        if (onMouseLeave) {\n          onMouseLeave({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onNodeContextMenu = function (event, node) {\n        var onRightClick = _this.props.onRightClick;\n\n        if (onRightClick) {\n          event.preventDefault();\n          onRightClick({\n            event: event,\n            node: node\n          });\n        }\n      };\n\n      _this.onFocus = function () {\n        var onFocus = _this.props.onFocus;\n\n        _this.setState({\n          focused: true\n        });\n\n        if (onFocus) {\n          onFocus.apply(void 0, arguments);\n        }\n      };\n\n      _this.onBlur = function () {\n        var onBlur = _this.props.onBlur;\n\n        _this.setState({\n          focused: false\n        });\n\n        _this.onActiveChange(null);\n\n        if (onBlur) {\n          onBlur.apply(void 0, arguments);\n        }\n      };\n\n      _this.getTreeNodeRequiredProps = function () {\n        var _this$state6 = _this.state,\n            expandedKeys = _this$state6.expandedKeys,\n            selectedKeys = _this$state6.selectedKeys,\n            loadedKeys = _this$state6.loadedKeys,\n            loadingKeys = _this$state6.loadingKeys,\n            checkedKeys = _this$state6.checkedKeys,\n            halfCheckedKeys = _this$state6.halfCheckedKeys,\n            dragOverNodeKey = _this$state6.dragOverNodeKey,\n            dropPosition = _this$state6.dropPosition,\n            keyEntities = _this$state6.keyEntities;\n        return {\n          expandedKeys: expandedKeys || [],\n          selectedKeys: selectedKeys || [],\n          loadedKeys: loadedKeys || [],\n          loadingKeys: loadingKeys || [],\n          checkedKeys: checkedKeys || [],\n          halfCheckedKeys: halfCheckedKeys || [],\n          dragOverNodeKey: dragOverNodeKey,\n          dropPosition: dropPosition,\n          keyEntities: keyEntities\n        };\n      }; // =========================== Expanded ===========================\n\n      /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n      _this.setExpandedKeys = function (expandedKeys) {\n        var treeData = _this.state.treeData;\n        var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n        _this.setUncontrolledState({\n          expandedKeys: expandedKeys,\n          flattenNodes: flattenNodes\n        }, true);\n      };\n\n      _this.onNodeExpand = function (e, treeNode) {\n        var expandedKeys = _this.state.expandedKeys;\n        var listChanging = _this.state.listChanging;\n        var _this$props4 = _this.props,\n            onExpand = _this$props4.onExpand,\n            loadData = _this$props4.loadData;\n        var key = treeNode.key,\n            expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n        if (listChanging) {\n          return;\n        } // Update selected keys\n\n\n        var index = expandedKeys.indexOf(key);\n        var targetExpanded = !expanded;\n        warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n        if (targetExpanded) {\n          expandedKeys = arrAdd(expandedKeys, key);\n        } else {\n          expandedKeys = arrDel(expandedKeys, key);\n        }\n\n        _this.setExpandedKeys(expandedKeys);\n\n        if (onExpand) {\n          onExpand(expandedKeys, {\n            node: treeNode,\n            expanded: targetExpanded,\n            nativeEvent: e.nativeEvent\n          });\n        } // Async Load data\n\n\n        if (targetExpanded && loadData) {\n          var loadPromise = _this.onNodeLoad(treeNode);\n\n          if (loadPromise) {\n            loadPromise.then(function () {\n              // [Legacy] Refresh logic\n              var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n              _this.setUncontrolledState({\n                flattenNodes: newFlattenTreeData\n              });\n            });\n          }\n        }\n      };\n\n      _this.onListChangeStart = function () {\n        _this.setUncontrolledState({\n          listChanging: true\n        });\n      };\n\n      _this.onListChangeEnd = function () {\n        setTimeout(function () {\n          _this.setUncontrolledState({\n            listChanging: false\n          });\n        });\n      }; // =========================== Keyboard ===========================\n\n\n      _this.onActiveChange = function (newActiveKey) {\n        var activeKey = _this.state.activeKey;\n        var onActiveChange = _this.props.onActiveChange;\n\n        if (activeKey === newActiveKey) {\n          return;\n        }\n\n        _this.setState({\n          activeKey: newActiveKey\n        });\n\n        if (newActiveKey !== null) {\n          _this.scrollTo({\n            key: newActiveKey\n          });\n        }\n\n        if (onActiveChange) {\n          onActiveChange(newActiveKey);\n        }\n      };\n\n      _this.getActiveItem = function () {\n        var _this$state7 = _this.state,\n            activeKey = _this$state7.activeKey,\n            flattenNodes = _this$state7.flattenNodes;\n\n        if (activeKey === null) {\n          return null;\n        }\n\n        return flattenNodes.find(function (_ref2) {\n          var key = _ref2.data.key;\n          return key === activeKey;\n        }) || null;\n      };\n\n      _this.offsetActiveKey = function (offset) {\n        var _this$state8 = _this.state,\n            flattenNodes = _this$state8.flattenNodes,\n            activeKey = _this$state8.activeKey;\n        var index = flattenNodes.findIndex(function (_ref3) {\n          var key = _ref3.data.key;\n          return key === activeKey;\n        }); // Align with index\n\n        if (index === -1 && offset < 0) {\n          index = flattenNodes.length;\n        }\n\n        index = (index + offset + flattenNodes.length) % flattenNodes.length;\n        var item = flattenNodes[index];\n\n        if (item) {\n          var key = item.data.key;\n\n          _this.onActiveChange(key);\n        } else {\n          _this.onActiveChange(null);\n        }\n      };\n\n      _this.onKeyDown = function (event) {\n        var _this$state9 = _this.state,\n            activeKey = _this$state9.activeKey,\n            expandedKeys = _this$state9.expandedKeys,\n            checkedKeys = _this$state9.checkedKeys;\n        var _this$props5 = _this.props,\n            onKeyDown = _this$props5.onKeyDown,\n            checkable = _this$props5.checkable,\n            selectable = _this$props5.selectable; // >>>>>>>>>> Direction\n\n        switch (event.which) {\n          case KeyCode.UP:\n            {\n              _this.offsetActiveKey(-1);\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.DOWN:\n            {\n              _this.offsetActiveKey(1);\n\n              event.preventDefault();\n              break;\n            }\n        } // >>>>>>>>>> Expand & Selection\n\n\n        var activeItem = _this.getActiveItem();\n\n        if (activeItem && activeItem.data) {\n          var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n          var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n          var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n            data: activeItem.data,\n            active: true\n          }));\n\n          switch (event.which) {\n            // >>> Expand\n            case KeyCode.LEFT:\n              {\n                // Collapse if possible\n                if (expandable && expandedKeys.includes(activeKey)) {\n                  _this.onNodeExpand({}, eventNode);\n                } else if (activeItem.parent) {\n                  _this.onActiveChange(activeItem.parent.data.key);\n                }\n\n                event.preventDefault();\n                break;\n              }\n\n            case KeyCode.RIGHT:\n              {\n                // Expand if possible\n                if (expandable && !expandedKeys.includes(activeKey)) {\n                  _this.onNodeExpand({}, eventNode);\n                } else if (activeItem.children && activeItem.children.length) {\n                  _this.onActiveChange(activeItem.children[0].data.key);\n                }\n\n                event.preventDefault();\n                break;\n              }\n            // Selection\n\n            case KeyCode.ENTER:\n            case KeyCode.SPACE:\n              {\n                if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                  _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n                } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                  _this.onNodeSelect({}, eventNode);\n                }\n\n                break;\n              }\n          }\n        }\n\n        if (onKeyDown) {\n          onKeyDown(event);\n        }\n      };\n      /**\n       * Only update the value which is not in props\n       */\n\n\n      _this.setUncontrolledState = function (state) {\n        var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      };\n\n      _this.scrollTo = function (scroll) {\n        _this.listRef.current.scrollTo(scroll);\n      };\n\n      return _this;\n    }\n\n    _createClass(Tree, [{\n      key: \"render\",\n      value: function render() {\n        var _classNames;\n\n        var _this$state10 = this.state,\n            focused = _this$state10.focused,\n            flattenNodes = _this$state10.flattenNodes,\n            keyEntities = _this$state10.keyEntities,\n            dragging = _this$state10.dragging,\n            activeKey = _this$state10.activeKey;\n        var _this$props6 = this.props,\n            prefixCls = _this$props6.prefixCls,\n            className = _this$props6.className,\n            style = _this$props6.style,\n            showLine = _this$props6.showLine,\n            focusable = _this$props6.focusable,\n            _this$props6$tabIndex = _this$props6.tabIndex,\n            tabIndex = _this$props6$tabIndex === void 0 ? 0 : _this$props6$tabIndex,\n            selectable = _this$props6.selectable,\n            showIcon = _this$props6.showIcon,\n            icon = _this$props6.icon,\n            switcherIcon = _this$props6.switcherIcon,\n            draggable = _this$props6.draggable,\n            checkable = _this$props6.checkable,\n            checkStrictly = _this$props6.checkStrictly,\n            disabled = _this$props6.disabled,\n            motion = _this$props6.motion,\n            loadData = _this$props6.loadData,\n            filterTreeNode = _this$props6.filterTreeNode,\n            height = _this$props6.height,\n            itemHeight = _this$props6.itemHeight,\n            virtual = _this$props6.virtual;\n        var domProps = getDataAndAria(this.props);\n        return React.createElement(TreeContext.Provider, {\n          value: {\n            prefixCls: prefixCls,\n            selectable: selectable,\n            showIcon: showIcon,\n            icon: icon,\n            switcherIcon: switcherIcon,\n            draggable: draggable,\n            checkable: checkable,\n            checkStrictly: checkStrictly,\n            disabled: disabled,\n            keyEntities: keyEntities,\n            loadData: loadData,\n            filterTreeNode: filterTreeNode,\n            onNodeClick: this.onNodeClick,\n            onNodeDoubleClick: this.onNodeDoubleClick,\n            onNodeExpand: this.onNodeExpand,\n            onNodeSelect: this.onNodeSelect,\n            onNodeCheck: this.onNodeCheck,\n            onNodeLoad: this.onNodeLoad,\n            onNodeMouseEnter: this.onNodeMouseEnter,\n            onNodeMouseLeave: this.onNodeMouseLeave,\n            onNodeContextMenu: this.onNodeContextMenu,\n            onNodeDragStart: this.onNodeDragStart,\n            onNodeDragEnter: this.onNodeDragEnter,\n            onNodeDragOver: this.onNodeDragOver,\n            onNodeDragLeave: this.onNodeDragLeave,\n            onNodeDragEnd: this.onNodeDragEnd,\n            onNodeDrop: this.onNodeDrop\n          }\n        }, React.createElement(\"div\", {\n          className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n        }, React.createElement(NodeList, Object.assign({\n          ref: this.listRef,\n          prefixCls: prefixCls,\n          style: style,\n          data: flattenNodes,\n          disabled: disabled,\n          selectable: selectable,\n          checkable: !!checkable,\n          motion: motion,\n          dragging: dragging,\n          height: height,\n          itemHeight: itemHeight,\n          virtual: virtual,\n          focusable: focusable,\n          focused: focused,\n          tabIndex: tabIndex,\n          activeItem: this.getActiveItem(),\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          onKeyDown: this.onKeyDown,\n          onActiveChange: this.onActiveChange,\n          onListChangeStart: this.onListChangeStart,\n          onListChangeEnd: this.onListChangeEnd\n        }, this.getTreeNodeRequiredProps(), domProps))));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, prevState) {\n        var prevProps = prevState.prevProps;\n        var newState = {\n          prevProps: props\n        };\n\n        function needSync(name) {\n          return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n        } // ================== Tree Node ==================\n\n\n        var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n        if (needSync('treeData')) {\n          treeData = props.treeData;\n        } else if (needSync('children')) {\n          warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n          treeData = convertTreeToData(props.children);\n        } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n        if (treeData) {\n          newState.treeData = treeData;\n          var entitiesMap = convertDataToEntities(treeData);\n          newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n          if (process.env.NODE_ENV !== 'production') {\n            warningWithoutKey(treeData);\n          }\n        }\n\n        var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n        if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n          newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n        } else if (!prevProps && props.defaultExpandAll) {\n          var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n          delete cloneKeyEntities[MOTION_KEY];\n          newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n            return cloneKeyEntities[key].key;\n          });\n        } else if (!prevProps && props.defaultExpandedKeys) {\n          newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n        }\n\n        if (!newState.expandedKeys) {\n          delete newState.expandedKeys;\n        } // ================ flattenNodes =================\n\n\n        if (treeData || newState.expandedKeys) {\n          var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n          newState.flattenNodes = flattenNodes;\n        } // ================ selectedKeys =================\n\n\n        if (props.selectable) {\n          if (needSync('selectedKeys')) {\n            newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n          } else if (!prevProps && props.defaultSelectedKeys) {\n            newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n          }\n        } // ================= checkedKeys =================\n\n\n        if (props.checkable) {\n          var checkedKeyEntity;\n\n          if (needSync('checkedKeys')) {\n            checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n          } else if (!prevProps && props.defaultCheckedKeys) {\n            checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n          } else if (treeData) {\n            // If `treeData` changed, we also need check it\n            checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n              checkedKeys: prevState.checkedKeys,\n              halfCheckedKeys: prevState.halfCheckedKeys\n            };\n          }\n\n          if (checkedKeyEntity) {\n            var _checkedKeyEntity = checkedKeyEntity,\n                _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n                checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n                _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n                halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n            if (!props.checkStrictly) {\n              var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n              checkedKeys = conductKeys.checkedKeys;\n              halfCheckedKeys = conductKeys.halfCheckedKeys;\n            }\n\n            newState.checkedKeys = checkedKeys;\n            newState.halfCheckedKeys = halfCheckedKeys;\n          }\n        } // ================= loadedKeys ==================\n\n\n        if (needSync('loadedKeys')) {\n          newState.loadedKeys = props.loadedKeys;\n        }\n\n        return newState;\n      }\n    }]);\n\n    return Tree;\n  }(React.Component);\n\n  Tree.defaultProps = {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  };\n  Tree.TreeNode = TreeNode;\n  return Tree;\n}();\n\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module"}