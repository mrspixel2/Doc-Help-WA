{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\dashboards\\\\classifications\\\\ClassificationsTable.tsx\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst ClassificationTable = props => {\n  const [state, setstate] = useState([]);\n  const [loading, setloading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    await Axios.post('http://localhost:5000/predict/getAll_predictions').then(res => {\n      console.log(res);\n      setloading(false);\n      setstate(res.data.map(row => ({\n        key: row._id,\n        patient: row.patient,\n        desease: row.desease,\n        result: row.result,\n        status: row.prediction_status\n      })));\n    });\n  };\n\n  const columns = [{\n    title: 'Patient Name',\n    dataIndex: 'patient',\n    key: 'patient',\n    render: text => /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }\n    }, text)\n  }, {\n    title: 'Desease',\n    dataIndex: 'desease',\n    key: 'desease',\n    responsive: ['md']\n  }, {\n    title: 'Result',\n    dataIndex: 'result',\n    key: 'result',\n    responsive: ['sm'],\n    render: result => result == 0 ? \"Normal\" : \"Diagnosed\"\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    responsive: ['sm'],\n    render: status => /*#__PURE__*/React.createElement(_Tag, {\n      style: {\n        borderRadius: 15\n      },\n      color: status === 'success' ? '#b7ce63' : '#cec759',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, status)\n  }];\n  return /*#__PURE__*/React.createElement(_Table, {\n    columns: columns,\n    dataSource: state,\n    onRow: (record, rowIndex) => ({\n      onClick: e => {\n        history.push('prediction_details', record.id);\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default ClassificationTable;","map":{"version":3,"names":["Axios","React","useEffect","useState","useHistory","ClassificationTable","props","state","setstate","loading","setloading","history","getData","post","then","res","console","log","data","map","row","key","_id","patient","desease","result","status","prediction_status","columns","title","dataIndex","render","text","responsive","borderRadius","record","rowIndex","onClick","e","push","id"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/dashboards/classifications/ClassificationsTable.tsx"],"sourcesContent":["import { Table, Tag } from 'antd';\r\nimport type { ColumnsType } from 'antd/es/table';\r\nimport Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ClassificationTable = (props:any) => {\r\n  const [state, setstate] = useState([]);\r\n  const [loading, setloading] = useState(true);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    await Axios.post('http://localhost:5000/predict/getAll_predictions').then(\r\n      res => {\r\n        console.log(res);\r\n        setloading(false);\r\n        setstate(\r\n          res.data.map(row => ({\r\n            key: row._id,\r\n            patient: row.patient,\r\n            desease: row.desease,\r\n            result: row.result,\r\n            status: row.prediction_status\r\n            \r\n          }))\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  const columns: ColumnsType = [\r\n    {\r\n      title: 'Patient Name',\r\n      dataIndex: 'patient',\r\n      key: 'patient',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Desease',\r\n      dataIndex: 'desease',\r\n      key: 'desease',\r\n      responsive: ['md'],\r\n    },\r\n    {\r\n      title: 'Result',\r\n      dataIndex: 'result',\r\n      key: 'result',\r\n      responsive: ['sm'],\r\n      render: (result) => (\r\n        result == 0 ? \"Normal\" : \"Diagnosed\"\r\n      )\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      responsive: ['sm'],\r\n      render: (status) => (\r\n        <Tag style={{ borderRadius: 15 }} color={status === 'success' ? '#b7ce63' : '#cec759'}>\r\n          {status}\r\n        </Tag>\r\n      )\r\n    },\r\n  ];\r\n\r\n\r\n  return(<Table columns={columns}\r\n    dataSource={state}\r\n    onRow={(record, rowIndex) => ({\r\n     onClick: (e) => {\r\n        history.push('prediction_details',record.id)\r\n       },\r\n     })} />)\r\n\r\n}\r\n\r\nexport default ClassificationTable;"],"mappings":";;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAIA,MAAMC,mBAAmB,GAAIC,KAAD,IAAe;EACzC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAMQ,OAAO,GAAGP,UAAU,EAA1B;EACAF,SAAS,CAAC,MAAM;IACdU,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,OAAO,GAAG,YAAY;IAC1B,MAAMZ,KAAK,CAACa,IAAN,CAAW,kDAAX,EAA+DC,IAA/D,CACJC,GAAG,IAAI;MACLC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACAL,UAAU,CAAC,KAAD,CAAV;MACAF,QAAQ,CACNO,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAaC,GAAG,KAAK;QACnBC,GAAG,EAAED,GAAG,CAACE,GADU;QAEnBC,OAAO,EAAEH,GAAG,CAACG,OAFM;QAGnBC,OAAO,EAAEJ,GAAG,CAACI,OAHM;QAInBC,MAAM,EAAEL,GAAG,CAACK,MAJO;QAKnBC,MAAM,EAAEN,GAAG,CAACO;MALO,CAAL,CAAhB,CADM,CAAR;IAUD,CAdG,CAAN;EAgBD,CAjBD;;EAmBA,MAAMC,OAAoB,GAAG,CAC3B;IACEC,KAAK,EAAE,cADT;IAEEC,SAAS,EAAE,SAFb;IAGET,GAAG,EAAE,SAHP;IAIEU,MAAM,EAAEC,IAAI,iBAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAIA,IAAJ;EAJlB,CAD2B,EAO3B;IACEH,KAAK,EAAE,SADT;IAEEC,SAAS,EAAE,SAFb;IAGET,GAAG,EAAE,SAHP;IAIEY,UAAU,EAAE,CAAC,IAAD;EAJd,CAP2B,EAa3B;IACEJ,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,QAFb;IAGET,GAAG,EAAE,QAHP;IAIEY,UAAU,EAAE,CAAC,IAAD,CAJd;IAKEF,MAAM,EAAGN,MAAD,IACNA,MAAM,IAAI,CAAV,GAAc,QAAd,GAAyB;EAN7B,CAb2B,EAsB3B;IACEI,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,QAFb;IAGET,GAAG,EAAE,QAHP;IAIEY,UAAU,EAAE,CAAC,IAAD,CAJd;IAKEF,MAAM,EAAGL,MAAD,iBACN;MAAK,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAhB,CAAZ;MAAkC,KAAK,EAAER,MAAM,KAAK,SAAX,GAAuB,SAAvB,GAAmC,SAA5E;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGA,MADH;EANJ,CAtB2B,CAA7B;EAoCA,oBAAO;IAAO,OAAO,EAAEE,OAAhB;IACL,UAAU,EAAErB,KADP;IAEL,KAAK,EAAE,CAAC4B,MAAD,EAASC,QAAT,MAAuB;MAC7BC,OAAO,EAAGC,CAAD,IAAO;QACb3B,OAAO,CAAC4B,IAAR,CAAa,oBAAb,EAAkCJ,MAAM,CAACK,EAAzC;MACA;IAH0B,CAAvB,CAFF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AAQD,CAvED;;AAyEA,eAAenC,mBAAf"},"metadata":{},"sourceType":"module"}