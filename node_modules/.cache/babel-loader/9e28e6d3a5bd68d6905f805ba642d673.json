{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\dashboards\\\\dashboard\\\\charts\\\\predictions-month-linechart.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport LineChart from \"react-chartjs-2\";\n\nconst predictionsMonthLinechart = () => {\n  const [counts, setCounts] = useState([100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200]);\n  const [labels, setLabels] = useState([\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]);\n\n  const fetchData = async () => {\n    const res = await fetch(\"http://localhost:5000/query/predictions_per_month\");\n    const data = await res.json().then(data => {\n      setCounts(data.slice(1).map(d => d));\n    });\n    console.log(counts);\n    return data;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const d = {\n    labels: labels,\n    datasets: [{\n      label: 'My First Dataset',\n      data: counts,\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  const config = {\n    type: 'line',\n    data: d\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    config: config,\n    data: d,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default predictionsMonthLinechart;","map":{"version":3,"names":["React","useEffect","useState","LineChart","predictionsMonthLinechart","counts","setCounts","labels","setLabels","fetchData","res","fetch","data","json","then","slice","map","d","console","log","datasets","label","fill","borderColor","tension","config","type"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/dashboards/dashboard/charts/predictions-month-linechart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport LineChart from \"react-chartjs-2\";\r\n\r\nconst predictionsMonthLinechart = () => {\r\n    const [counts, setCounts] = useState([100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200]);\r\n    const [labels, setLabels] = useState([\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]);\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch(\"http://localhost:5000/query/predictions_per_month\");\r\n        const data = await res.json()\r\n            .then(data => {\r\n                setCounts(data.slice(1).map((d) => d));\r\n            });\r\n        console.log(counts);\r\n        return data;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const d = {\r\n        labels: labels,\r\n        datasets: [{\r\n            label: 'My First Dataset',\r\n            data: counts,\r\n            fill: false,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1\r\n        }]\r\n    };\r\n\r\n    const config = {\r\n        type: 'line',\r\n        data: d,\r\n      };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LineChart config={config} data={d} />\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default predictionsMonthLinechart;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAMC,yBAAyB,GAAG,MAAM;EACpC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,IAA9C,EAAoD,IAApD,EAA0D,IAA1D,CAAD,CAApC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAD,CAApC;;EAEA,MAAMO,SAAS,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,GACdC,IADc,CACTF,IAAI,IAAI;MACVN,SAAS,CAACM,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAzB,CAAD,CAAT;IACH,CAHc,CAAnB;IAIAC,OAAO,CAACC,GAAR,CAAYd,MAAZ;IACA,OAAOO,IAAP;EACH,CARD;;EAUAX,SAAS,CAAC,MAAM;IAEZQ,SAAS;EACZ,CAHQ,EAGN,EAHM,CAAT;EAMA,MAAMQ,CAAC,GAAG;IACNV,MAAM,EAAEA,MADF;IAENa,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE,kBADA;MAEPT,IAAI,EAAEP,MAFC;MAGPiB,IAAI,EAAE,KAHC;MAIPC,WAAW,EAAE,mBAJN;MAKPC,OAAO,EAAE;IALF,CAAD;EAFJ,CAAV;EAWA,MAAMC,MAAM,GAAG;IACXC,IAAI,EAAE,MADK;IAEXd,IAAI,EAAEK;EAFK,CAAf;EAMA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,SAAD;IAAW,MAAM,EAAEQ,MAAnB;IAA2B,IAAI,EAAER,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AAKH,CA1CD;;AA4CA,eAAeb,yBAAf"},"metadata":{},"sourceType":"module"}