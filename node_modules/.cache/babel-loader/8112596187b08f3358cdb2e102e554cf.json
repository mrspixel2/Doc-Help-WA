{"ast":null,"code":"import \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp-WA\\\\src\\\\pages\\\\desease-predictors\\\\PimageLoader.tsx\";\nimport { UploadOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\n\nconst PimageLoader = () => {\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n\n  const handleUpload = () => {\n    const formData = new FormData();\n    fileList.forEach(file => {\n      formData.append('files[]', file);\n    });\n    setUploading(true); // You can use any AJAX library you like\n\n    fetch('http://localhost:5000/predict/tuberculosis', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(() => {\n      setFileList([]);\n\n      _message.success('upload successfully.');\n    }).catch(() => {\n      _message.error('upload failed.');\n    }).finally(() => {\n      setUploading(false);\n    });\n  };\n\n  const props = {\n    onRemove: file => {\n      const index = fileList.indexOf(file);\n      const newFileList = fileList.slice();\n      newFileList.splice(index, 1);\n      setFileList(newFileList);\n    },\n    beforeUpload: file => {\n      setFileList([...fileList, file]);\n      return false;\n    },\n    fileList\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Upload, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Select File\")), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    onClick: handleUpload,\n    disabled: fileList.length === 0,\n    loading: uploading,\n    style: {\n      marginTop: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, uploading ? 'Uploading' : 'Start Upload'));\n};\n\nexport default PimageLoader;","map":{"version":3,"names":["UploadOutlined","React","useState","PimageLoader","fileList","setFileList","uploading","setUploading","handleUpload","formData","FormData","forEach","file","append","fetch","method","body","then","res","json","success","catch","error","finally","props","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","length","marginTop"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/src/pages/desease-predictors/PimageLoader.tsx"],"sourcesContent":["import { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, message, Upload } from 'antd';\r\nimport type { RcFile, UploadFile, UploadProps } from 'antd/es/upload/interface';\r\nimport React, { useState } from 'react';\r\n\r\nconst PimageLoader = () => {\r\n    const [fileList, setFileList] = useState<UploadFile[]>([]);\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const handleUpload = () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('files[]', file as RcFile);\r\n        });\r\n        setUploading(true);\r\n        // You can use any AJAX library you like\r\n        fetch('http://localhost:5000/predict/tuberculosis', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then(res => res.json())\r\n            .then(() => {\r\n                setFileList([]);\r\n                message.success('upload successfully.');\r\n            })\r\n            .catch(() => {\r\n                message.error('upload failed.');\r\n            })\r\n            .finally(() => {\r\n                setUploading(false);\r\n            });\r\n    };\r\n\r\n    const props: UploadProps = {\r\n        onRemove: file => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: file => {\r\n            setFileList([...fileList, file]);\r\n\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Upload {...props}>\r\n                <Button icon={<UploadOutlined />}>Select File</Button>\r\n            </Upload>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={handleUpload}\r\n                disabled={fileList.length === 0}\r\n                loading={uploading}\r\n                style={{ marginTop: 16 }}\r\n            >\r\n                {uploading ? 'Uploading' : 'Start Upload'}\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PimageLoader;"],"mappings":";;;;;;;AAAA,SAASA,cAAT,QAA+B,mBAA/B;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,YAAY,GAAG,MAAM;EACvB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAe,EAAf,CAAxC;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMM,YAAY,GAAG,MAAM;IACvB,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAN,QAAQ,CAACO,OAAT,CAAiBC,IAAI,IAAI;MACrBH,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BD,IAA3B;IACH,CAFD;IAGAL,YAAY,CAAC,IAAD,CAAZ,CALuB,CAMvB;;IACAO,KAAK,CAAC,4CAAD,EAA+C;MAChDC,MAAM,EAAE,MADwC;MAEhDC,IAAI,EAAEP;IAF0C,CAA/C,CAAL,CAIKQ,IAJL,CAIUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJjB,EAKKF,IALL,CAKU,MAAM;MACRZ,WAAW,CAAC,EAAD,CAAX;;MACA,SAAQe,OAAR,CAAgB,sBAAhB;IACH,CARL,EASKC,KATL,CASW,MAAM;MACT,SAAQC,KAAR,CAAc,gBAAd;IACH,CAXL,EAYKC,OAZL,CAYa,MAAM;MACXhB,YAAY,CAAC,KAAD,CAAZ;IACH,CAdL;EAeH,CAtBD;;EAwBA,MAAMiB,KAAkB,GAAG;IACvBC,QAAQ,EAAEb,IAAI,IAAI;MACd,MAAMc,KAAK,GAAGtB,QAAQ,CAACuB,OAAT,CAAiBf,IAAjB,CAAd;MACA,MAAMgB,WAAW,GAAGxB,QAAQ,CAACyB,KAAT,EAApB;MACAD,WAAW,CAACE,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;MACArB,WAAW,CAACuB,WAAD,CAAX;IACH,CANsB;IAOvBG,YAAY,EAAEnB,IAAI,IAAI;MAClBP,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcQ,IAAd,CAAD,CAAX;MAEA,OAAO,KAAP;IACH,CAXsB;IAYvBR;EAZuB,CAA3B;EAeA,oBACI,uDACI,+CAAYoB,KAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBACI;IAAQ,IAAI,eAAE,oBAAC,cAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBADJ,CADJ,eAII;IACI,IAAI,EAAC,SADT;IAEI,OAAO,EAAEhB,YAFb;IAGI,QAAQ,EAAEJ,QAAQ,CAAC4B,MAAT,KAAoB,CAHlC;IAII,OAAO,EAAE1B,SAJb;IAKI,KAAK,EAAE;MAAE2B,SAAS,EAAE;IAAb,CALX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAOK3B,SAAS,GAAG,WAAH,GAAiB,cAP/B,CAJJ,CADJ;AAgBH,CA3DD;;AA6DA,eAAeH,YAAf"},"metadata":{},"sourceType":"module"}