{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\dashboards\\\\dashboard\\\\charts\\\\predictions-month-linechart.tsx\";\nimport React, { useEffect, useState } from \"react\";\n\nconst predictionsMonthLinechart = () => {\n  const [counts, setCounts] = useState([100, 200, 300]);\n  const [labels, setLabels] = useState([\"A\", \"B\", \"C\"]);\n\n  const fetchData = async () => {\n    const res = await fetch(\"http://localhost:5000/query/predictions_per_month\");\n    const data = await res.json().then(data => {\n      setCounts(data.slice(1).map(d => d));\n    });\n    console.log(counts);\n    return data;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const d = {\n    labels: labels,\n    title: 'Predictions per desease',\n    datasets: [{\n      label: \"Predictions per desease\",\n      type: 'pie',\n      backgroundColor: ['#2fa7ff', '#7cdb86', '#805aff'],\n      borderColor: ['#2fa7ff', '#7cdb86', '#805aff'],\n      data: counts\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: d,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default predictionsMonthLinechart;","map":{"version":3,"names":["React","useEffect","useState","predictionsMonthLinechart","counts","setCounts","labels","setLabels","fetchData","res","fetch","data","json","then","slice","map","d","console","log","title","datasets","label","type","backgroundColor","borderColor"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/dashboards/dashboard/charts/predictions-month-linechart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport LineChart from \"react-chartjs-2\";\r\n\r\nconst predictionsMonthLinechart = () => {\r\n    const [counts, setCounts] = useState([100, 200, 300]);\r\n    const [labels, setLabels] = useState([\"A\", \"B\", \"C\"]);\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch(\"http://localhost:5000/query/predictions_per_month\");\r\n        const data = await res.json()\r\n            .then(data => {\r\n                setCounts(data.slice(1).map((d) => d));\r\n            });\r\n        console.log(counts);\r\n        return data;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const d = {\r\n        labels: labels,\r\n        title: 'Predictions per desease',\r\n        datasets: [\r\n            {\r\n                label: \"Predictions per desease\",\r\n                type: 'pie',\r\n                backgroundColor: ['#2fa7ff', '#7cdb86', '#805aff'],\r\n                borderColor: ['#2fa7ff', '#7cdb86', '#805aff'],\r\n                data: counts,\r\n            },\r\n        ],\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Pie data={d} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default predictionsMonthLinechart;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,MAAMC,yBAAyB,GAAG,MAAM;EACpC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAD,CAApC;EACA,MAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAD,CAApC;;EAEA,MAAMM,SAAS,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,GACdC,IADc,CACTF,IAAI,IAAI;MACVN,SAAS,CAACM,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,GAAd,CAAmBC,CAAD,IAAOA,CAAzB,CAAD,CAAT;IACH,CAHc,CAAnB;IAIAC,OAAO,CAACC,GAAR,CAAYd,MAAZ;IACA,OAAOO,IAAP;EACH,CARD;;EAUAV,SAAS,CAAC,MAAM;IAEZO,SAAS;EACZ,CAHQ,EAGN,EAHM,CAAT;EAMA,MAAMQ,CAAC,GAAG;IACNV,MAAM,EAAEA,MADF;IAENa,KAAK,EAAE,yBAFD;IAGNC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,yBADX;MAEIC,IAAI,EAAE,KAFV;MAGIC,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAHrB;MAIIC,WAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAJjB;MAKIb,IAAI,EAAEP;IALV,CADM;EAHJ,CAAV;EAeA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,GAAD;IAAK,IAAI,EAAEY,CAAX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AAKH,CAxCD;;AA0CA,eAAeb,yBAAf"},"metadata":{},"sourceType":"module"}