{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\charts\\\\recharts\\\\charts\\\\CustomShapeBarChart.tsx\";\nimport React from 'react';\nimport { ResponsiveContainer, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nconst colors = scaleOrdinal(schemeCategory10).range();\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  female: 2400,\n  male: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  female: 1398,\n  male: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  female: 9800,\n  male: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  female: 3908,\n  male: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  female: 4800,\n  male: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  female: 3800,\n  male: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  female: 4300,\n  male: 2100\n}];\n\nconst getPath = (x, y, width, height) => `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + 2 * width / 3},${y + height} ${x + width}, ${y + height}\n          Z`;\n\nconst TriangleBar = props => {\n  const {\n    fill,\n    x,\n    y,\n    width,\n    height\n  } = props;\n  return /*#__PURE__*/React.createElement(\"path\", {\n    d: getPath(x, y, width, height),\n    stroke: \"none\",\n    fill: fill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  });\n};\n\nconst WithCustomShape = () => {\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: 300,\n    width: '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    height: 300,\n    data: data,\n    margin: {\n      top: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"female\",\n    fill: \"#8884d8\",\n    shape: /*#__PURE__*/React.createElement(TriangleBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 53\n      }\n    }),\n    label: {\n      position: 'top'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: colors[index % 20],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default WithCustomShape;","map":{"version":3,"names":["React","ResponsiveContainer","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","scaleOrdinal","schemeCategory10","colors","range","data","name","uv","female","male","getPath","x","y","width","height","TriangleBar","props","fill","WithCustomShape","top","position","map","entry","index"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/charts/recharts/charts/CustomShapeBarChart.tsx"],"sourcesContent":["import React from 'react';\n\nimport { ResponsiveContainer, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid } from 'recharts';\n\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\n\nconst colors = scaleOrdinal(schemeCategory10).range();\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    female: 2400,\n    male: 2400\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    female: 1398,\n    male: 2210\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    female: 9800,\n    male: 2290\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    female: 3908,\n    male: 2000\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    female: 4800,\n    male: 2181\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    female: 3800,\n    male: 2500\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    female: 4300,\n    male: 2100\n  }\n];\n\nconst getPath = (x, y, width, height) => `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y + height} ${x + width}, ${\n  y + height\n}\n          Z`;\n\nconst TriangleBar = (props) => {\n  const { fill, x, y, width, height } = props;\n\n  return <path d={getPath(x, y, width, height)} stroke='none' fill={fill} />;\n};\n\nconst WithCustomShape = () => {\n  return (\n    <ResponsiveContainer height={300} width={'100%'}>\n      <BarChart\n        height={300}\n        data={data}\n        margin={{\n          top: 20\n        }}\n      >\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis />\n        <Bar dataKey='female' fill='#8884d8' shape={<TriangleBar />} label={{ position: 'top' }}>\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\n          ))}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default WithCustomShape;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}