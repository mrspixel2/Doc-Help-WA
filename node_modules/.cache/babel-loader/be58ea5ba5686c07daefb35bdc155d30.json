{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\charts\\\\recharts\\\\charts\\\\AreaChartFillByValue.tsx\";\nimport React from 'react';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: -1000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 500,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: -2000,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: -250,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nconst gradientOffset = () => {\n  const dataMax = Math.max(...data.map(i => i.uv));\n  const dataMin = Math.min(...data.map(i => i.uv));\n\n  if (dataMax <= 0) {\n    return 0;\n  }\n\n  if (dataMin >= 0) {\n    return 1;\n  }\n\n  return dataMax / (dataMax - dataMin);\n};\n\nconst off = gradientOffset();\n\nconst AreaChartFillByValue = () => {\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: 300,\n    widht: '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AreaChart, {\n    width: 500,\n    height: 400,\n    data: data,\n    margin: {\n      top: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"splitColor\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: off,\n    stopColor: \"green\",\n    stopOpacity: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: off,\n    stopColor: \"red\",\n    stopOpacity: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"uv\",\n    stroke: \"#000\",\n    fill: \"url(#splitColor)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AreaChartFillByValue;","map":{"version":3,"names":["React","ResponsiveContainer","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","data","name","uv","pv","amt","gradientOffset","dataMax","Math","max","map","i","dataMin","min","off","AreaChartFillByValue","top"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/charts/recharts/charts/AreaChartFillByValue.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip\n} from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: 'Page C',\n    uv: -1000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: 'Page D',\n    uv: 500,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: 'Page E',\n    uv: -2000,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: 'Page F',\n    uv: -250,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\nconst gradientOffset = () => {\n  const dataMax = Math.max(...data.map(i => i.uv));\n  const dataMin = Math.min(...data.map(i => i.uv));\n\n  if (dataMax <= 0) {\n    return 0;\n  }\n  if (dataMin >= 0) {\n    return 1;\n  }\n\n  return dataMax / (dataMax - dataMin);\n};\n\nconst off = gradientOffset();\n\nconst AreaChartFillByValue = () => {\n  return (\n    <ResponsiveContainer height={300} widht={'100%'}>\n      <AreaChart\n        width={500}\n        height={400}\n        data={data}\n        margin={{\n          top: 10\n        }}>\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis />\n        <Tooltip />\n        <defs>\n          <linearGradient id='splitColor' x1='0' y1='0' x2='0' y2='1'>\n            <stop offset={off} stopColor='green' stopOpacity={1} />\n            <stop offset={off} stopColor='red' stopOpacity={1} />\n          </linearGradient>\n        </defs>\n        <Area type='monotone' dataKey='uv' stroke='#000' fill='url(#splitColor)' />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default AreaChartFillByValue;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,SAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,aANF,EAOEC,OAPF,QAQO,UARP;AAUA,MAAMC,IAAI,GAAG,CACX;EACEC,IAAI,EAAE,QADR;EAEEC,EAAE,EAAE,IAFN;EAGEC,EAAE,EAAE,IAHN;EAIEC,GAAG,EAAE;AAJP,CADW,EAOX;EACEH,IAAI,EAAE,QADR;EAEEC,EAAE,EAAE,IAFN;EAGEC,EAAE,EAAE,IAHN;EAIEC,GAAG,EAAE;AAJP,CAPW,EAaX;EACEH,IAAI,EAAE,QADR;EAEEC,EAAE,EAAE,CAAC,IAFP;EAGEC,EAAE,EAAE,IAHN;EAIEC,GAAG,EAAE;AAJP,CAbW,EAmBX;EACEH,IAAI,EAAE,QADR;EAEEC,EAAE,EAAE,GAFN;EAGEC,EAAE,EAAE,IAHN;EAIEC,GAAG,EAAE;AAJP,CAnBW,EAyBX;EACEH,IAAI,EAAE,QADR;EAEEC,EAAE,EAAE,CAAC,IAFP;EAGEC,EAAE,EAAE,IAHN;EAIEC,GAAG,EAAE;AAJP,CAzBW,EA+BX;EACEH,IAAI,EAAE,QADR;EAEEC,EAAE,EAAE,CAAC,GAFP;EAGEC,EAAE,EAAE,IAHN;EAIEC,GAAG,EAAE;AAJP,CA/BW,EAqCX;EACEH,IAAI,EAAE,QADR;EAEEC,EAAE,EAAE,IAFN;EAGEC,EAAE,EAAE,IAHN;EAIEC,GAAG,EAAE;AAJP,CArCW,CAAb;;AA6CA,MAAMC,cAAc,GAAG,MAAM;EAC3B,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGR,IAAI,CAACS,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACR,EAAhB,CAAZ,CAAhB;EACA,MAAMS,OAAO,GAAGJ,IAAI,CAACK,GAAL,CAAS,GAAGZ,IAAI,CAACS,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACR,EAAhB,CAAZ,CAAhB;;EAEA,IAAII,OAAO,IAAI,CAAf,EAAkB;IAChB,OAAO,CAAP;EACD;;EACD,IAAIK,OAAO,IAAI,CAAf,EAAkB;IAChB,OAAO,CAAP;EACD;;EAED,OAAOL,OAAO,IAAIA,OAAO,GAAGK,OAAd,CAAd;AACD,CAZD;;AAcA,MAAME,GAAG,GAAGR,cAAc,EAA1B;;AAEA,MAAMS,oBAAoB,GAAG,MAAM;EACjC,oBACE,oBAAC,mBAAD;IAAqB,MAAM,EAAE,GAA7B;IAAkC,KAAK,EAAE,MAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IACE,KAAK,EAAE,GADT;IAEE,MAAM,EAAE,GAFV;IAGE,IAAI,EAAEd,IAHR;IAIE,MAAM,EAAE;MACNe,GAAG,EAAE;IADC,CAJV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAOE,oBAAC,aAAD;IAAe,eAAe,EAAC,KAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPF,eAQE,oBAAC,KAAD;IAAO,OAAO,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARF,eASE,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EATF,eAUE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVF,eAWE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAgB,EAAE,EAAC,YAAnB;IAAgC,EAAE,EAAC,GAAnC;IAAuC,EAAE,EAAC,GAA1C;IAA8C,EAAE,EAAC,GAAjD;IAAqD,EAAE,EAAC,GAAxD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAM,MAAM,EAAEF,GAAd;IAAmB,SAAS,EAAC,OAA7B;IAAqC,WAAW,EAAE,CAAlD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAM,MAAM,EAAEA,GAAd;IAAmB,SAAS,EAAC,KAA7B;IAAmC,WAAW,EAAE,CAAhD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADF,CAXF,eAiBE,oBAAC,IAAD;IAAM,IAAI,EAAC,UAAX;IAAsB,OAAO,EAAC,IAA9B;IAAmC,MAAM,EAAC,MAA1C;IAAiD,IAAI,EAAC,kBAAtD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAjBF,CADF,CADF;AAuBD,CAxBD;;AA0BA,eAAeC,oBAAf"},"metadata":{},"sourceType":"module"}