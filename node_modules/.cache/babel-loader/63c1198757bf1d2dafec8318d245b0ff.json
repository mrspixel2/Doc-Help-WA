{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\dashboards\\\\dashboard\\\\charts\\\\deseases-barchart.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nconst d = [{\n  name: 'Covid19',\n  approved: 4000,\n  rejected: 2400,\n  amt: 2400\n}, {\n  name: 'Kidney',\n  approved: 3000,\n  rejected: 1398,\n  amt: 2210\n}, {\n  name: 'Tuberculosis',\n  approved: 2000,\n  rejected: 9800,\n  amt: 2290\n}];\n\nconst SimpleBarChart = () => {\n  const [counts, setCounts] = useState([{\n    name: 'Covid19',\n    approved: 4000,\n    rejected: 2400,\n    amt: 2400\n  }, {\n    name: 'Kidney',\n    approved: 3000,\n    rejected: 1398,\n    amt: 2210\n  }, {\n    name: 'Tuberculosis',\n    approved: 2000,\n    rejected: 9800,\n    amt: 2290\n  }]);\n\n  const fetchData = async () => {\n    const res = await fetch(\"http://localhost:5000/query/approval_count_per_desease\");\n    const data = await res.json().then(data => {\n      setCounts(data.map(d => {\n        return {\n          name: d._id,\n          approved: d.approved,\n          rejected: d.rejected,\n          total: d.approved + d.rejected\n        };\n      }));\n    });\n    console.log(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    height: 300,\n    width: '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    width: 200,\n    height: 100,\n    data: d,\n    margin: {\n      top: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"approved\",\n    fill: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"rejected\",\n    fill: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default SimpleBarChart;","map":{"version":3,"names":["React","useEffect","useState","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","d","name","approved","rejected","amt","SimpleBarChart","counts","setCounts","fetchData","res","fetch","data","json","then","map","_id","total","console","log","top"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/dashboards/dashboard/charts/deseases-barchart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ResponsiveContainer,\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend\r\n} from 'recharts';\r\n\r\n\r\nconst d = [\r\n    {\r\n        name: 'Covid19',\r\n        approved: 4000,\r\n        rejected: 2400,\r\n        amt: 2400\r\n    },\r\n    {\r\n        name: 'Kidney',\r\n        approved: 3000,\r\n        rejected: 1398,\r\n        amt: 2210\r\n    },\r\n    {\r\n        name: 'Tuberculosis',\r\n        approved: 2000,\r\n        rejected: 9800,\r\n        amt: 2290\r\n    }\r\n];\r\n\r\nconst SimpleBarChart = () => {\r\n\r\n    const [counts, setCounts] = useState([{\r\n        name: 'Covid19',\r\n        approved: 4000,\r\n        rejected: 2400,\r\n        amt: 2400\r\n    },\r\n    {\r\n        name: 'Kidney',\r\n        approved: 3000,\r\n        rejected: 1398,\r\n        amt: 2210\r\n    },\r\n    {\r\n        name: 'Tuberculosis',\r\n        approved: 2000,\r\n        rejected: 9800,\r\n        amt: 2290\r\n    }]);\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch(\"http://localhost:5000/query/approval_count_per_desease\");\r\n        const data = await res.json()\r\n        .then(data => {\r\n        setCounts(data.map((d) => {\r\n            return {\r\n                name: d._id,\r\n                approved: d.approved,\r\n                rejected: d.rejected,\r\n                total: d.approved + d.rejected\r\n            }\r\n        }))\r\n        });\r\n        console.log(data);\r\n      }\r\n    \r\n      useEffect(() => {\r\n    \r\n      fetchData();\r\n      }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <ResponsiveContainer height={300} width={'100%'}>\r\n            <BarChart\r\n                width={200}\r\n                height={100}\r\n                data={d}\r\n                margin={{\r\n                    top: 5\r\n                }}>\r\n                <CartesianGrid strokeDasharray='3 3' />\r\n                <XAxis dataKey='name' />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey='approved' fill='#8884d8' />\r\n                <Bar dataKey='rejected' fill='#82ca9d' />\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default SimpleBarChart;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACIC,mBADJ,EAEIC,QAFJ,EAGIC,GAHJ,EAIIC,KAJJ,EAKIC,KALJ,EAMIC,aANJ,EAOIC,OAPJ,EAQIC,MARJ,QASO,UATP;AAYA,MAAMC,CAAC,GAAG,CACN;EACIC,IAAI,EAAE,SADV;EAEIC,QAAQ,EAAE,IAFd;EAGIC,QAAQ,EAAE,IAHd;EAIIC,GAAG,EAAE;AAJT,CADM,EAON;EACIH,IAAI,EAAE,QADV;EAEIC,QAAQ,EAAE,IAFd;EAGIC,QAAQ,EAAE,IAHd;EAIIC,GAAG,EAAE;AAJT,CAPM,EAaN;EACIH,IAAI,EAAE,cADV;EAEIC,QAAQ,EAAE,IAFd;EAGIC,QAAQ,EAAE,IAHd;EAIIC,GAAG,EAAE;AAJT,CAbM,CAAV;;AAqBA,MAAMC,cAAc,GAAG,MAAM;EAEzB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAC;IAClCU,IAAI,EAAE,SAD4B;IAElCC,QAAQ,EAAE,IAFwB;IAGlCC,QAAQ,EAAE,IAHwB;IAIlCC,GAAG,EAAE;EAJ6B,CAAD,EAMrC;IACIH,IAAI,EAAE,QADV;IAEIC,QAAQ,EAAE,IAFd;IAGIC,QAAQ,EAAE,IAHd;IAIIC,GAAG,EAAE;EAJT,CANqC,EAYrC;IACIH,IAAI,EAAE,cADV;IAEIC,QAAQ,EAAE,IAFd;IAGIC,QAAQ,EAAE,IAHd;IAIIC,GAAG,EAAE;EAJT,CAZqC,CAAD,CAApC;;EAmBA,MAAMI,SAAS,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,GAClBC,IADkB,CACbF,IAAI,IAAI;MACdJ,SAAS,CAACI,IAAI,CAACG,GAAL,CAAUd,CAAD,IAAO;QACtB,OAAO;UACHC,IAAI,EAAED,CAAC,CAACe,GADL;UAEHb,QAAQ,EAAEF,CAAC,CAACE,QAFT;UAGHC,QAAQ,EAAEH,CAAC,CAACG,QAHT;UAIHa,KAAK,EAAEhB,CAAC,CAACE,QAAF,GAAaF,CAAC,CAACG;QAJnB,CAAP;MAMH,CAPS,CAAD,CAAT;IAQC,CAVkB,CAAnB;IAWAc,OAAO,CAACC,GAAR,CAAYP,IAAZ;EACD,CAdH;;EAgBErB,SAAS,CAAC,MAAM;IAEhBkB,SAAS;EACR,CAHQ,EAGN,EAHM,CAAT;EAQF,oBACI,oBAAC,mBAAD;IAAqB,MAAM,EAAE,GAA7B;IAAkC,KAAK,EAAE,MAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IACI,KAAK,EAAE,GADX;IAEI,MAAM,EAAE,GAFZ;IAGI,IAAI,EAAER,CAHV;IAII,MAAM,EAAE;MACJmB,GAAG,EAAE;IADD,CAJZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAOI,oBAAC,aAAD;IAAe,eAAe,EAAC,KAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,eAQI,oBAAC,KAAD;IAAO,OAAO,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARJ,eASI,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EATJ,eAUI,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVJ,eAWI,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXJ,eAYI,oBAAC,GAAD;IAAK,OAAO,EAAC,UAAb;IAAwB,IAAI,EAAC,SAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZJ,eAaI,oBAAC,GAAD;IAAK,OAAO,EAAC,UAAb;IAAwB,IAAI,EAAC,SAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAbJ,CADJ,CADJ;AAmBH,CAhED;;AAkEA,eAAed,cAAf"},"metadata":{},"sourceType":"module"}