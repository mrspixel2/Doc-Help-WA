{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp-WA\\\\src\\\\pages\\\\maps\\\\WorldMapPage.tsx\";\nimport React, { useState } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts';\nimport { usePageData, useFetchPageData } from '../../hooks/usePage';\nimport { worldMapOptions } from './worldMapOptions';\nconst pageData = {\n  fulFilled: true,\n  breadcrumbs: [{\n    title: 'Home',\n    route: 'default-dashboard'\n  }, {\n    title: 'UI Kit ',\n    route: 'default-dashboard'\n  }, {\n    title: 'World map'\n  }]\n};\nconst mapUrl = './data/world.json';\n\nconst WorldMapPage = () => {\n  const [mapOptions, setMapOptions] = useState(null);\n  useFetchPageData(mapUrl, null, setOptions);\n  usePageData(pageData);\n\n  function setOptions(geoJson) {\n    echarts.registerMap('HK', geoJson);\n    setMapOptions(worldMapOptions);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-height-page p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, mapOptions ? /*#__PURE__*/React.createElement(ReactEcharts, {\n    option: mapOptions,\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    className: \"echarts-for-echarts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default WorldMapPage;","map":{"version":3,"names":["React","useState","ReactEcharts","echarts","usePageData","useFetchPageData","worldMapOptions","pageData","fulFilled","breadcrumbs","title","route","mapUrl","WorldMapPage","mapOptions","setMapOptions","setOptions","geoJson","registerMap","height","width"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/src/pages/maps/WorldMapPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts';\n\nimport { usePageData, useFetchPageData } from '../../hooks/usePage';\nimport { IPageData } from '../../interfaces/page';\n\nimport { worldMapOptions } from './worldMapOptions';\n\nconst pageData: IPageData = {\n  fulFilled: true,\n  breadcrumbs: [\n    {\n      title: 'Home',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'UI Kit ',\n      route: 'default-dashboard'\n    },\n    {\n      title: 'World map'\n    }\n  ]\n};\n\nconst mapUrl = './data/world.json';\n\nconst WorldMapPage = () => {\n  const [mapOptions, setMapOptions] = useState(null);\n\n  useFetchPageData(mapUrl, null, setOptions);\n  usePageData(pageData);\n\n  function setOptions(geoJson: any) {\n    echarts.registerMap('HK', geoJson);\n    setMapOptions(worldMapOptions);\n  }\n\n  return (\n    <div className='full-height-page p-4'>\n      {mapOptions ? (\n        <ReactEcharts\n          option={mapOptions}\n          style={{ height: '100%', width: '100%' }}\n          className='echarts-for-echarts'\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default WorldMapPage;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,qBAA9C;AAGA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,MAAMC,QAAmB,GAAG;EAC1BC,SAAS,EAAE,IADe;EAE1BC,WAAW,EAAE,CACX;IACEC,KAAK,EAAE,MADT;IAEEC,KAAK,EAAE;EAFT,CADW,EAKX;IACED,KAAK,EAAE,SADT;IAEEC,KAAK,EAAE;EAFT,CALW,EASX;IACED,KAAK,EAAE;EADT,CATW;AAFa,CAA5B;AAiBA,MAAME,MAAM,GAAG,mBAAf;;AAEA,MAAMC,YAAY,GAAG,MAAM;EACzB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,IAAD,CAA5C;EAEAI,gBAAgB,CAACO,MAAD,EAAS,IAAT,EAAeI,UAAf,CAAhB;EACAZ,WAAW,CAACG,QAAD,CAAX;;EAEA,SAASS,UAAT,CAAoBC,OAApB,EAAkC;IAChCd,OAAO,CAACe,WAAR,CAAoB,IAApB,EAA0BD,OAA1B;IACAF,aAAa,CAACT,eAAD,CAAb;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,sBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGQ,UAAU,gBACT,oBAAC,YAAD;IACE,MAAM,EAAEA,UADV;IAEE,KAAK,EAAE;MAAEK,MAAM,EAAE,MAAV;MAAkBC,KAAK,EAAE;IAAzB,CAFT;IAGE,SAAS,EAAC,qBAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADS,GAMP,IAPN,CADF;AAWD,CAtBD;;AAwBA,eAAeP,YAAf"},"metadata":{},"sourceType":"module"}