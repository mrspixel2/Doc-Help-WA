{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp-WA\\\\src\\\\pages\\\\dashboards\\\\classifications\\\\ClassificationsTable.tsx\";\nimport React from 'react';\nimport { useGetPredictions } from '../../../hooks/useGetPredictions';\nconst columns = [{\n  title: 'Patient Name',\n  dataIndex: 'patient',\n  key: 'patient',\n  render: text => /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, text)\n}, {\n  title: 'Desease',\n  dataIndex: 'desease',\n  key: 'desease',\n  responsive: ['md']\n}, {\n  title: 'Result',\n  dataIndex: 'result',\n  key: 'result',\n  responsive: ['sm']\n}, {\n  title: 'Status',\n  dataIndex: 'status',\n  key: 'status',\n  responsive: ['sm']\n}];\nconst predictions = useGetPredictions();\nconst data = [{\n  key: '1',\n  patient: 'John Brown',\n  desease: 'Tuberculosis',\n  result: 1,\n  status: \"Done\"\n}];\n\nconst ClassificationTable = () => /*#__PURE__*/React.createElement(_Table, {\n  columns: columns,\n  dataSource: data,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 45\n  }\n});\n\nexport default ClassificationTable;","map":{"version":3,"names":["React","useGetPredictions","columns","title","dataIndex","key","render","text","responsive","predictions","data","patient","desease","result","status","ClassificationTable"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/src/pages/dashboards/classifications/ClassificationsTable.tsx"],"sourcesContent":["import { Table } from 'antd';\r\nimport type { ColumnsType } from 'antd/es/table';\r\nimport React from 'react';\r\nimport { useGetPredictions } from '../../../hooks/useGetPredictions';\r\n\r\ninterface DataType {\r\n  key: React.Key;\r\n  patient: string;\r\n  desease: string;\r\n  result: number;\r\n  status: string;\r\n}\r\n\r\nconst columns: ColumnsType<DataType> = [\r\n  {\r\n    title: 'Patient Name',\r\n    dataIndex: 'patient',\r\n    key: 'patient',\r\n    render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Desease',\r\n    dataIndex: 'desease',\r\n    key: 'desease',\r\n    responsive: ['md'],\r\n  },\r\n  {\r\n    title: 'Result',\r\n    dataIndex: 'result',\r\n    key: 'result',\r\n    responsive: ['sm'],\r\n  },\r\n  {\r\n    title: 'Status',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n    responsive: ['sm'],\r\n  },\r\n];\r\n\r\nconst predictions = useGetPredictions();\r\n\r\nconst data: DataType[] = [\r\n  {\r\n    key: '1',\r\n    patient: 'John Brown',\r\n    desease: 'Tuberculosis',\r\n    result: 1,\r\n    status: \"Done\"\r\n  },\r\n];\r\n\r\nconst ClassificationTable: React.FC = () => <Table columns={columns} dataSource={data} />;\r\n\r\nexport default ClassificationTable;"],"mappings":";;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AAUA,MAAMC,OAA8B,GAAG,CACrC;EACEC,KAAK,EAAE,cADT;EAEEC,SAAS,EAAE,SAFb;EAGEC,GAAG,EAAE,SAHP;EAIEC,MAAM,EAAEC,IAAI,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIA,IAAJ;AAJlB,CADqC,EAOrC;EACEJ,KAAK,EAAE,SADT;EAEEC,SAAS,EAAE,SAFb;EAGEC,GAAG,EAAE,SAHP;EAIEG,UAAU,EAAE,CAAC,IAAD;AAJd,CAPqC,EAarC;EACEL,KAAK,EAAE,QADT;EAEEC,SAAS,EAAE,QAFb;EAGEC,GAAG,EAAE,QAHP;EAIEG,UAAU,EAAE,CAAC,IAAD;AAJd,CAbqC,EAmBrC;EACEL,KAAK,EAAE,QADT;EAEEC,SAAS,EAAE,QAFb;EAGEC,GAAG,EAAE,QAHP;EAIEG,UAAU,EAAE,CAAC,IAAD;AAJd,CAnBqC,CAAvC;AA2BA,MAAMC,WAAW,GAAGR,iBAAiB,EAArC;AAEA,MAAMS,IAAgB,GAAG,CACvB;EACEL,GAAG,EAAE,GADP;EAEEM,OAAO,EAAE,YAFX;EAGEC,OAAO,EAAE,cAHX;EAIEC,MAAM,EAAE,CAJV;EAKEC,MAAM,EAAE;AALV,CADuB,CAAzB;;AAUA,MAAMC,mBAA6B,GAAG,mBAAM;EAAO,OAAO,EAAEb,OAAhB;EAAyB,UAAU,EAAEQ,IAArC;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAA5C;;AAEA,eAAeK,mBAAf"},"metadata":{},"sourceType":"module"}