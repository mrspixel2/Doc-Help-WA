{"ast":null,"code":"function endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nexport default (function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim();\n\n      if (validType.charAt(0) === '.') {\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\n      } else if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n\n      return mimeType === validType;\n    });\n  }\n\n  return true;\n});","map":{"version":3,"names":["endsWith","str","suffix","indexOf","length","file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","charAt","toLowerCase","test"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/node_modules/rc-upload/es/attr-accept.js"],"sourcesContent":["function endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nexport default (function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim();\n      if (validType.charAt(0) === '.') {\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\n      } else if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n});"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+B;EAC7B,OAAOD,GAAG,CAACE,OAAJ,CAAYD,MAAZ,EAAoBD,GAAG,CAACG,MAAJ,GAAaF,MAAM,CAACE,MAAxC,MAAoD,CAAC,CAA5D;AACD;;AAED,gBAAgB,UAAUC,IAAV,EAAgBC,aAAhB,EAA+B;EAC7C,IAAID,IAAI,IAAIC,aAAZ,EAA2B;IACzB,IAAIC,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,aAAd,IAA+BA,aAA/B,GAA+CA,aAAa,CAACI,KAAd,CAAoB,GAApB,CAAxE;IACA,IAAIC,QAAQ,GAAGN,IAAI,CAACO,IAAL,IAAa,EAA5B;IACA,IAAIC,QAAQ,GAAGR,IAAI,CAACS,IAAL,IAAa,EAA5B;IACA,IAAIC,YAAY,GAAGF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAAnB;IAEA,OAAOT,kBAAkB,CAACU,IAAnB,CAAwB,UAAUH,IAAV,EAAgB;MAC7C,IAAII,SAAS,GAAGJ,IAAI,CAACK,IAAL,EAAhB;;MACA,IAAID,SAAS,CAACE,MAAV,CAAiB,CAAjB,MAAwB,GAA5B,EAAiC;QAC/B,OAAOpB,QAAQ,CAACW,QAAQ,CAACU,WAAT,EAAD,EAAyBH,SAAS,CAACG,WAAV,EAAzB,CAAf;MACD,CAFD,MAEO,IAAI,QAAQC,IAAR,CAAaJ,SAAb,CAAJ,EAA6B;QAClC;QACA,OAAOH,YAAY,KAAKG,SAAS,CAACF,OAAV,CAAkB,OAAlB,EAA2B,EAA3B,CAAxB;MACD;;MACD,OAAOH,QAAQ,KAAKK,SAApB;IACD,CATM,CAAP;EAUD;;EACD,OAAO,IAAP;AACD,CAnBD"},"metadata":{},"sourceType":"module"}