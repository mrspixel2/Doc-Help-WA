{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\dashboards\\\\dashboard\\\\charts\\\\predictions-month-linechart.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, XAxis, YAxis, CartesianGrid, Line, Tooltip, Legend } from 'recharts';\n\nconst PredictionsMonthLinechart = () => {\n  const [d, setD] = useState([{\n    month: 'jan',\n    predictions: 4000\n  }]);\n\n  const fetchData = async () => {\n    const res = await fetch(\"http://localhost:5000/query/predictions_per_month\");\n    const data = await res.json().then(data => {\n      setD(Object.keys(data).map(key => {\n        return {\n          month: key,\n          predictions: data[key]\n        };\n      }));\n    });\n    console.log(data);\n    console.log(d);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 1100,\n    height: 400,\n    data: d,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"predictions\",\n    stroke: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PredictionsMonthLinechart;","map":{"version":3,"names":["React","useEffect","useState","LineChart","XAxis","YAxis","CartesianGrid","Line","Tooltip","Legend","PredictionsMonthLinechart","d","setD","month","predictions","fetchData","res","fetch","data","json","then","Object","keys","map","key","console","log","top","right","left","bottom"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/dashboards/dashboard/charts/predictions-month-linechart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    LineChart,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Line,\r\n    Tooltip,\r\n    Legend\r\n} from 'recharts';\r\n\r\nconst PredictionsMonthLinechart = () => {\r\n    const [d, setD] = useState([\r\n        {\r\n            month: 'jan',\r\n            predictions: 4000,\r\n        },\r\n    ])\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch(\"http://localhost:5000/query/predictions_per_month\");\r\n        const data = await res.json()\r\n            .then(data => {\r\n                setD((Object.keys(data)).map((key) => {\r\n                    return {\r\n                        month: key,\r\n                        predictions: data[key]\r\n                    }\r\n                }))\r\n            })\r\n        console.log(data);\r\n        console.log(d);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <LineChart width={1100} height={400} data={d}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"month\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"predictions\" stroke=\"#8884d8\" />\r\n\r\n        </LineChart>\r\n    )\r\n}\r\n\r\nexport default PredictionsMonthLinechart;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACIC,SADJ,EAEIC,KAFJ,EAGIC,KAHJ,EAIIC,aAJJ,EAKIC,IALJ,EAMIC,OANJ,EAOIC,MAPJ,QAQO,UARP;;AAUA,MAAMC,yBAAyB,GAAG,MAAM;EACpC,MAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYV,QAAQ,CAAC,CACvB;IACIW,KAAK,EAAE,KADX;IAEIC,WAAW,EAAE;EAFjB,CADuB,CAAD,CAA1B;;EAOA,MAAMC,SAAS,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,GACdC,IADc,CACTF,IAAI,IAAI;MACVN,IAAI,CAAES,MAAM,CAACC,IAAP,CAAYJ,IAAZ,CAAD,CAAoBK,GAApB,CAAyBC,GAAD,IAAS;QAClC,OAAO;UACHX,KAAK,EAAEW,GADJ;UAEHV,WAAW,EAAEI,IAAI,CAACM,GAAD;QAFd,CAAP;MAIH,CALI,CAAD,CAAJ;IAMH,CARc,CAAnB;IASAC,OAAO,CAACC,GAAR,CAAYR,IAAZ;IACAO,OAAO,CAACC,GAAR,CAAYf,CAAZ;EACH,CAbD;;EAeAV,SAAS,CAAC,MAAM;IAEZc,SAAS;EACZ,CAHQ,EAGN,EAHM,CAAT;EAMA,oBACI,oBAAC,SAAD;IAAW,KAAK,EAAE,IAAlB;IAAwB,MAAM,EAAE,GAAhC;IAAqC,IAAI,EAAEJ,CAA3C;IACI,MAAM,EAAE;MAAEgB,GAAG,EAAE,CAAP;MAAUC,KAAK,EAAE,EAAjB;MAAqBC,IAAI,EAAE,EAA3B;MAA+BC,MAAM,EAAE;IAAvC,CADZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI,oBAAC,aAAD;IAAe,eAAe,EAAC,KAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,eAGI,oBAAC,KAAD;IAAO,OAAO,EAAC,OAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHJ,eAII,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJJ,eAKI,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALJ,eAMI,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANJ,eAOI,oBAAC,IAAD;IAAM,IAAI,EAAC,UAAX;IAAsB,OAAO,EAAC,aAA9B;IAA4C,MAAM,EAAC,SAAnD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,CADJ;AAYH,CAzCD;;AA2CA,eAAepB,yBAAf"},"metadata":{},"sourceType":"module"}