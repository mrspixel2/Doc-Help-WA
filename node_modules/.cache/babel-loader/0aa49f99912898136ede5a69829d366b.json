{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp-WA\\\\src\\\\pages\\\\dashboards\\\\classifications\\\\ClassificationsTable.tsx\";\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nconst columns = [{\n  title: 'Patient Name',\n  dataIndex: 'patient',\n  key: 'patient',\n  render: text => /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, text)\n}, {\n  title: 'Desease',\n  dataIndex: 'desease',\n  key: 'desease',\n  responsive: ['md']\n}, {\n  title: 'Result',\n  dataIndex: 'result',\n  key: 'result',\n  responsive: ['sm']\n}, {\n  title: 'Status',\n  dataIndex: 'status',\n  key: 'status',\n  responsive: ['sm']\n}];\nconst data = [{\n  key: '1',\n  patient: 'John Brown',\n  desease: 'Tuberculosis',\n  result: 1,\n  status: \"Done\"\n}];\n\nconst ClassificationTable = () => {\n  const [state, setstate] = useState([]);\n  const [loading, setloading] = useState(true);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    await Axios.get('http://localhost:5000/predict/getAll_predictions').then(res => {\n      setloading(false);\n      setstate(res.data.map(row => ({\n        Name: row.name,\n        Email: row.email,\n        id: row.id\n      })));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(_Table, {\n    columns: columns,\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default ClassificationTable;","map":{"version":3,"names":["Axios","React","useEffect","useState","columns","title","dataIndex","key","render","text","responsive","data","patient","desease","result","status","ClassificationTable","state","setstate","loading","setloading","getData","get","then","res","map","row","Name","name","Email","email","id"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/src/pages/dashboards/classifications/ClassificationsTable.tsx"],"sourcesContent":["import { Table } from 'antd';\r\nimport type { ColumnsType } from 'antd/es/table';\r\nimport Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst columns: ColumnsType = [\r\n  {\r\n    title: 'Patient Name',\r\n    dataIndex: 'patient',\r\n    key: 'patient',\r\n    render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Desease',\r\n    dataIndex: 'desease',\r\n    key: 'desease',\r\n    responsive: ['md'],\r\n  },\r\n  {\r\n    title: 'Result',\r\n    dataIndex: 'result',\r\n    key: 'result',\r\n    responsive: ['sm'],\r\n  },\r\n  {\r\n    title: 'Status',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n    responsive: ['sm'],\r\n  },\r\n];\r\n\r\nconst data: DataType[] = [\r\n  {\r\n    key: '1',\r\n    patient: 'John Brown',\r\n    desease: 'Tuberculosis',\r\n    result: 1,\r\n    status: \"Done\"\r\n  },\r\n];\r\n\r\nconst ClassificationTable = () => {\r\n  const [state, setstate] = useState([]);\r\n  const [loading, setloading] = useState(true);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    await Axios.get('http://localhost:5000/predict/getAll_predictions').then(\r\n      res => {\r\n        setloading(false);\r\n        setstate(\r\n          res.data.map(row => ({\r\n            Name: row.name,\r\n            Email: row.email,\r\n            id: row.id\r\n          }))\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  return(<Table columns={columns} dataSource={data} />)\r\n\r\n }\r\n\r\nexport default ClassificationTable;"],"mappings":";;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,MAAMC,OAAoB,GAAG,CAC3B;EACEC,KAAK,EAAE,cADT;EAEEC,SAAS,EAAE,SAFb;EAGEC,GAAG,EAAE,SAHP;EAIEC,MAAM,EAAEC,IAAI,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIA,IAAJ;AAJlB,CAD2B,EAO3B;EACEJ,KAAK,EAAE,SADT;EAEEC,SAAS,EAAE,SAFb;EAGEC,GAAG,EAAE,SAHP;EAIEG,UAAU,EAAE,CAAC,IAAD;AAJd,CAP2B,EAa3B;EACEL,KAAK,EAAE,QADT;EAEEC,SAAS,EAAE,QAFb;EAGEC,GAAG,EAAE,QAHP;EAIEG,UAAU,EAAE,CAAC,IAAD;AAJd,CAb2B,EAmB3B;EACEL,KAAK,EAAE,QADT;EAEEC,SAAS,EAAE,QAFb;EAGEC,GAAG,EAAE,QAHP;EAIEG,UAAU,EAAE,CAAC,IAAD;AAJd,CAnB2B,CAA7B;AA2BA,MAAMC,IAAgB,GAAG,CACvB;EACEJ,GAAG,EAAE,GADP;EAEEK,OAAO,EAAE,YAFX;EAGEC,OAAO,EAAE,cAHX;EAIEC,MAAM,EAAE,CAJV;EAKEC,MAAM,EAAE;AALV,CADuB,CAAzB;;AAUA,MAAMC,mBAAmB,GAAG,MAAM;EAChC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;EACAD,SAAS,CAAC,MAAM;IACdmB,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,OAAO,GAAG,YAAY;IAC1B,MAAMrB,KAAK,CAACsB,GAAN,CAAU,kDAAV,EAA8DC,IAA9D,CACJC,GAAG,IAAI;MACLJ,UAAU,CAAC,KAAD,CAAV;MACAF,QAAQ,CACNM,GAAG,CAACb,IAAJ,CAASc,GAAT,CAAaC,GAAG,KAAK;QACnBC,IAAI,EAAED,GAAG,CAACE,IADS;QAEnBC,KAAK,EAAEH,GAAG,CAACI,KAFQ;QAGnBC,EAAE,EAAEL,GAAG,CAACK;MAHW,CAAL,CAAhB,CADM,CAAR;IAOD,CAVG,CAAN;EAYD,CAbD;;EAgBA,oBAAO;IAAO,OAAO,EAAE3B,OAAhB;IAAyB,UAAU,EAAEO,IAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AAEA,CAzBF;;AA2BA,eAAeK,mBAAf"},"metadata":{},"sourceType":"module"}