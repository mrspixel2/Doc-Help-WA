{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"E:\\\\Work\\\\PFE\\\\Project folder\\\\DocHelp\\\\src\\\\pages\\\\dashboards\\\\dashboard\\\\charts\\\\KidneySymptomsCountTable.tsx\";\nimport React, { useEffect, useState } from 'react';\n\nconst KidneySymptomsCountTable = () => {\n  const [data, setData] = useState([]);\n  const columns = [{\n    title: 'Kidney Disease',\n    dataIndex: 'disease',\n    key: 'disease'\n  }, {\n    title: 'Symptoms',\n    dataIndex: 'symptoms',\n    key: 'symptoms',\n    render: symptoms => symptoms.map(symptom => symptom.symptom).join(', '),\n    onCell: record => {\n      return {\n        style: {\n          maxWidth: 200,\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap'\n        }\n      };\n    },\n    responsive: ['md']\n  }, {\n    title: 'Count',\n    dataIndex: 'counts',\n    key: 'count',\n    render: counts => counts.map(count => count.count).join(', '),\n    responsive: ['sm']\n  }];\n\n  const fetchData = async () => {\n    const res = await fetch(\"http://localhost:5000/query/symptoms_count_per_kidney_result\");\n    const data = await res.json().then(data => {\n      setData(data.map(d => {\n        return {\n          disease: d._id,\n          symptoms: d.symptoms,\n          counts: d.symptoms\n        };\n      }));\n    });\n    console.log(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(_Table, {\n    columns: columns,\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default KidneySymptomsCountTable;","map":{"version":3,"names":["React","useEffect","useState","KidneySymptomsCountTable","data","setData","columns","title","dataIndex","key","render","symptoms","map","symptom","join","onCell","record","style","maxWidth","overflow","textOverflow","whiteSpace","responsive","counts","count","fetchData","res","fetch","json","then","d","disease","_id","console","log"],"sources":["E:/Work/PFE/Project folder/DocHelp/src/pages/dashboards/dashboard/charts/KidneySymptomsCountTable.tsx"],"sourcesContent":["import { Table } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport type { ColumnsType } from 'antd/es/table';\r\n\r\n\r\nconst KidneySymptomsCountTable = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const columns: ColumnsType = [\r\n        {\r\n            title: 'Kidney Disease',\r\n            dataIndex: 'disease',\r\n            key: 'disease',\r\n        },\r\n        {\r\n            title: 'Symptoms',\r\n            dataIndex: 'symptoms',\r\n            key: 'symptoms',\r\n            render: (symptoms) => symptoms.map((symptom) => symptom.symptom).join(', '),\r\n            onCell: (record) => {\r\n                return {\r\n                    style: {\r\n                        maxWidth: 200,\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                    },\r\n                };\r\n            },\r\n            responsive: ['md']\r\n        },\r\n        {\r\n            title: 'Count',\r\n            dataIndex: 'counts',\r\n            key: 'count',\r\n            render: (counts) => counts.map((count) => count.count).join(', '),\r\n            responsive: ['sm']\r\n        },\r\n        ];\r\n\r\n    const fetchData = async () => {\r\n        const res = await fetch(\"http://localhost:5000/query/symptoms_count_per_kidney_result\");\r\n        const data = await res.json()\r\n            .then(data => {\r\n                setData(data.map((d) => {\r\n                    return {\r\n                        disease: d._id,\r\n                        symptoms: d.symptoms,\r\n                        counts: d.symptoms\r\n                    }\r\n                }))\r\n            });\r\n        console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <Table columns={columns} dataSource={data}></Table>\r\n    )\r\n}\r\nexport default KidneySymptomsCountTable"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAIA,MAAMC,wBAAwB,GAAG,MAAM;EACnC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMI,OAAoB,GAAG,CACzB;IACIC,KAAK,EAAE,gBADX;IAEIC,SAAS,EAAE,SAFf;IAGIC,GAAG,EAAE;EAHT,CADyB,EAMzB;IACIF,KAAK,EAAE,UADX;IAEIC,SAAS,EAAE,UAFf;IAGIC,GAAG,EAAE,UAHT;IAIIC,MAAM,EAAGC,QAAD,IAAcA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAaA,OAAO,CAACA,OAAlC,EAA2CC,IAA3C,CAAgD,IAAhD,CAJ1B;IAKIC,MAAM,EAAGC,MAAD,IAAY;MAChB,OAAO;QACHC,KAAK,EAAE;UACHC,QAAQ,EAAE,GADP;UAEHC,QAAQ,EAAE,QAFP;UAGHC,YAAY,EAAE,UAHX;UAIHC,UAAU,EAAE;QAJT;MADJ,CAAP;IAQH,CAdL;IAeIC,UAAU,EAAE,CAAC,IAAD;EAfhB,CANyB,EAuBzB;IACIf,KAAK,EAAE,OADX;IAEIC,SAAS,EAAE,QAFf;IAGIC,GAAG,EAAE,OAHT;IAIIC,MAAM,EAAGa,MAAD,IAAYA,MAAM,CAACX,GAAP,CAAYY,KAAD,IAAWA,KAAK,CAACA,KAA5B,EAAmCV,IAAnC,CAAwC,IAAxC,CAJxB;IAKIQ,UAAU,EAAE,CAAC,IAAD;EALhB,CAvByB,CAA7B;;EAgCA,MAAMG,SAAS,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8DAAD,CAAvB;IACA,MAAMvB,IAAI,GAAG,MAAMsB,GAAG,CAACE,IAAJ,GACdC,IADc,CACTzB,IAAI,IAAI;MACVC,OAAO,CAACD,IAAI,CAACQ,GAAL,CAAUkB,CAAD,IAAO;QACpB,OAAO;UACHC,OAAO,EAAED,CAAC,CAACE,GADR;UAEHrB,QAAQ,EAAEmB,CAAC,CAACnB,QAFT;UAGHY,MAAM,EAAEO,CAAC,CAACnB;QAHP,CAAP;MAKH,CANO,CAAD,CAAP;IAOH,CATc,CAAnB;IAUAsB,OAAO,CAACC,GAAR,CAAY9B,IAAZ;EACH,CAbD;;EAeAH,SAAS,CAAC,MAAM;IAEZwB,SAAS;EACZ,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACI;IAAO,OAAO,EAAEnB,OAAhB;IAAyB,UAAU,EAAEF,IAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ;AAGH,CA1DD;;AA2DA,eAAeD,wBAAf"},"metadata":{},"sourceType":"module"}