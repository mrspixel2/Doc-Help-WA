{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/**\n * Handle virtual list of the TreeNodes.\n */\n\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar noop = function noop() {};\n\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\n\nexport function getMinimumRangeTransitionRange(list, height, itemHeight) {\n  if (!height) {\n    return list;\n  }\n\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\n\nfunction itemKey(item) {\n  var key = item.data.key,\n      pos = item.pos;\n  return getKey(key, pos);\n}\n\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n\n  return path;\n}\n\nvar RefNodeList = function RefNodeList(props, ref) {\n  var prefixCls = props.prefixCls,\n      data = props.data,\n      selectable = props.selectable,\n      checkable = props.checkable,\n      expandedKeys = props.expandedKeys,\n      selectedKeys = props.selectedKeys,\n      checkedKeys = props.checkedKeys,\n      loadedKeys = props.loadedKeys,\n      loadingKeys = props.loadingKeys,\n      halfCheckedKeys = props.halfCheckedKeys,\n      keyEntities = props.keyEntities,\n      disabled = props.disabled,\n      dragging = props.dragging,\n      dragOverNodeKey = props.dragOverNodeKey,\n      dropPosition = props.dropPosition,\n      motion = props.motion,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      focusable = props.focusable,\n      activeItem = props.activeItem,\n      focused = props.focused,\n      tabIndex = props.tabIndex,\n      onKeyDown = props.onKeyDown,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onActiveChange = props.onActiveChange,\n      onListChangeStart = props.onListChangeStart,\n      onListChangeEnd = props.onListChangeEnd,\n      domProps = _objectWithoutProperties(props, [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"]); // =============================== Ref ================================\n\n\n  var listRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      }\n    };\n  }); // ============================== Motion ==============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      disableVirtual = _React$useState2[0],\n      setDisableVirtual = _React$useState2[1];\n\n  var _React$useState3 = React.useState(expandedKeys),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevExpandedKeys = _React$useState4[0],\n      setPrevExpandedKeys = _React$useState4[1];\n\n  var _React$useState5 = React.useState(data),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      prevData = _React$useState6[0],\n      setPrevData = _React$useState6[1];\n\n  var _React$useState7 = React.useState(data),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      transitionData = _React$useState8[0],\n      setTransitionData = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      transitionRange = _React$useState10[0],\n      setTransitionRange = _React$useState10[1];\n\n  var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      motionType = _React$useState12[0],\n      setMotionType = _React$useState12[1];\n\n  function onMotionEnd() {\n    setPrevData(data);\n    setTransitionData(data);\n    setTransitionRange([]);\n    setMotionType(null);\n    setDisableVirtual(false);\n    onListChangeEnd();\n  } // Do animation if expanded keys changed\n\n\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.data.key;\n          return key === diffExpanded.key;\n        });\n        if (motion) setDisableVirtual(true);\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.data.key;\n          return key === diffExpanded.key;\n        });\n\n        if (motion) setDisableVirtual(true);\n\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), height, itemHeight);\n\n        var _newTransitionData = data.slice();\n\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      } // Trigger when `motion` provided\n\n\n      if (motion) {\n        onListChangeStart();\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]); // We should clean up motion if is changed by dragging\n\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return React.createElement(React.Fragment, null, focused && activeItem && React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), React.createElement(\"div\", {\n    role: \"tree\"\n  }, React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop\n  })), React.createElement(VirtualList, Object.assign({}, domProps, {\n    disabled: disableVirtual,\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    onSkipRender: onMotionEnd,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n        _treeNode$data = treeNode.data,\n        key = _treeNode$data.key,\n        restProps = _objectWithoutProperties(_treeNode$data, [\"key\"]),\n        isStart = treeNode.isStart,\n        isEnd = treeNode.isEnd;\n\n    var mergedKey = getKey(key, pos);\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return React.createElement(MotionTreeNode, Object.assign({}, restProps, treeNodeProps, {\n      active: activeItem && key === activeItem.data.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n};\n\nvar NodeList = React.forwardRef(RefNodeList);\nNodeList.displayName = 'NodeList';\nexport default NodeList;","map":{"version":3,"names":["_slicedToArray","_objectWithoutProperties","React","VirtualList","MotionTreeNode","findExpandedKeys","getExpandRange","getTreeNodeProps","getKey","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","noop","MOTION_KEY","concat","Math","random","MotionNode","key","MotionEntity","level","index","pos","node","MotionFlattenData","parent","children","data","isStart","isEnd","getMinimumRangeTransitionRange","list","itemHeight","slice","ceil","itemKey","item","getAccessibilityPath","path","String","current","RefNodeList","props","ref","prefixCls","selectable","checkable","expandedKeys","selectedKeys","checkedKeys","loadedKeys","loadingKeys","halfCheckedKeys","keyEntities","disabled","dragging","dragOverNodeKey","dropPosition","motion","virtual","focusable","activeItem","focused","tabIndex","onKeyDown","onFocus","onBlur","onActiveChange","onListChangeStart","onListChangeEnd","domProps","listRef","useRef","useImperativeHandle","scrollTo","scroll","_React$useState","useState","_React$useState2","disableVirtual","setDisableVirtual","_React$useState3","_React$useState4","prevExpandedKeys","setPrevExpandedKeys","_React$useState5","_React$useState6","prevData","setPrevData","_React$useState7","_React$useState8","transitionData","setTransitionData","_React$useState9","_React$useState10","transitionRange","setTransitionRange","_React$useState11","_React$useState12","motionType","setMotionType","onMotionEnd","useEffect","diffExpanded","add","keyIndex","findIndex","_ref","rangeNodes","newTransitionData","splice","_keyIndex","_ref2","_rangeNodes","_newTransitionData","mergedData","treeNodeRequiredProps","createElement","Fragment","style","role","value","onChange","Object","assign","fullHeight","onSkipRender","treeNode","_treeNode$data","restProps","mergedKey","treeNodeProps","active","motionNodes","onMouseMove","NodeList","forwardRef","displayName"],"sources":["E:/Work/PFE/Project folder/react/node_modules/rc-tree/es/NodeList.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/**\n * Handle virtual list of the TreeNodes.\n */\nimport * as React from 'react';\nimport VirtualList from 'rc-virtual-list';\nimport MotionTreeNode from './MotionTreeNode';\nimport { findExpandedKeys, getExpandRange } from './utils/diffUtil';\nimport { getTreeNodeProps, getKey } from './utils/treeUtil';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar noop = function noop() {};\n\nexport var MOTION_KEY = \"RC_TREE_MOTION_\".concat(Math.random());\nvar MotionNode = {\n  key: MOTION_KEY\n};\nexport var MotionEntity = {\n  key: MOTION_KEY,\n  level: 0,\n  index: 0,\n  pos: '0',\n  node: MotionNode\n};\nvar MotionFlattenData = {\n  parent: null,\n  children: [],\n  pos: MotionEntity.pos,\n  data: MotionNode,\n\n  /** Hold empty list here since we do not use it */\n  isStart: [],\n  isEnd: []\n};\n/**\n * We only need get visible content items to play the animation.\n */\n\nexport function getMinimumRangeTransitionRange(list, height, itemHeight) {\n  if (!height) {\n    return list;\n  }\n\n  return list.slice(0, Math.ceil(height / itemHeight) + 1);\n}\n\nfunction itemKey(item) {\n  var key = item.data.key,\n      pos = item.pos;\n  return getKey(key, pos);\n}\n\nfunction getAccessibilityPath(item) {\n  var path = String(item.data.key);\n  var current = item;\n\n  while (current.parent) {\n    current = current.parent;\n    path = \"\".concat(current.data.key, \" > \").concat(path);\n  }\n\n  return path;\n}\n\nvar RefNodeList = function RefNodeList(props, ref) {\n  var prefixCls = props.prefixCls,\n      data = props.data,\n      selectable = props.selectable,\n      checkable = props.checkable,\n      expandedKeys = props.expandedKeys,\n      selectedKeys = props.selectedKeys,\n      checkedKeys = props.checkedKeys,\n      loadedKeys = props.loadedKeys,\n      loadingKeys = props.loadingKeys,\n      halfCheckedKeys = props.halfCheckedKeys,\n      keyEntities = props.keyEntities,\n      disabled = props.disabled,\n      dragging = props.dragging,\n      dragOverNodeKey = props.dragOverNodeKey,\n      dropPosition = props.dropPosition,\n      motion = props.motion,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      focusable = props.focusable,\n      activeItem = props.activeItem,\n      focused = props.focused,\n      tabIndex = props.tabIndex,\n      onKeyDown = props.onKeyDown,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onActiveChange = props.onActiveChange,\n      onListChangeStart = props.onListChangeStart,\n      onListChangeEnd = props.onListChangeEnd,\n      domProps = _objectWithoutProperties(props, [\"prefixCls\", \"data\", \"selectable\", \"checkable\", \"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"loadedKeys\", \"loadingKeys\", \"halfCheckedKeys\", \"keyEntities\", \"disabled\", \"dragging\", \"dragOverNodeKey\", \"dropPosition\", \"motion\", \"height\", \"itemHeight\", \"virtual\", \"focusable\", \"activeItem\", \"focused\", \"tabIndex\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onActiveChange\", \"onListChangeStart\", \"onListChangeEnd\"]); // =============================== Ref ================================\n\n\n  var listRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(scroll) {\n        listRef.current.scrollTo(scroll);\n      }\n    };\n  }); // ============================== Motion ==============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      disableVirtual = _React$useState2[0],\n      setDisableVirtual = _React$useState2[1];\n\n  var _React$useState3 = React.useState(expandedKeys),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      prevExpandedKeys = _React$useState4[0],\n      setPrevExpandedKeys = _React$useState4[1];\n\n  var _React$useState5 = React.useState(data),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      prevData = _React$useState6[0],\n      setPrevData = _React$useState6[1];\n\n  var _React$useState7 = React.useState(data),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      transitionData = _React$useState8[0],\n      setTransitionData = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      transitionRange = _React$useState10[0],\n      setTransitionRange = _React$useState10[1];\n\n  var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      motionType = _React$useState12[0],\n      setMotionType = _React$useState12[1];\n\n  function onMotionEnd() {\n    setPrevData(data);\n    setTransitionData(data);\n    setTransitionRange([]);\n    setMotionType(null);\n    setDisableVirtual(false);\n    onListChangeEnd();\n  } // Do animation if expanded keys changed\n\n\n  React.useEffect(function () {\n    setPrevExpandedKeys(expandedKeys);\n    var diffExpanded = findExpandedKeys(prevExpandedKeys, expandedKeys);\n\n    if (diffExpanded.key !== null) {\n      if (diffExpanded.add) {\n        var keyIndex = prevData.findIndex(function (_ref) {\n          var key = _ref.data.key;\n          return key === diffExpanded.key;\n        });\n        if (motion) setDisableVirtual(true);\n        var rangeNodes = getMinimumRangeTransitionRange(getExpandRange(prevData, data, diffExpanded.key), height, itemHeight);\n        var newTransitionData = prevData.slice();\n        newTransitionData.splice(keyIndex + 1, 0, MotionFlattenData);\n        setTransitionData(newTransitionData);\n        setTransitionRange(rangeNodes);\n        setMotionType('show');\n      } else {\n        var _keyIndex = data.findIndex(function (_ref2) {\n          var key = _ref2.data.key;\n          return key === diffExpanded.key;\n        });\n\n        if (motion) setDisableVirtual(true);\n\n        var _rangeNodes = getMinimumRangeTransitionRange(getExpandRange(data, prevData, diffExpanded.key), height, itemHeight);\n\n        var _newTransitionData = data.slice();\n\n        _newTransitionData.splice(_keyIndex + 1, 0, MotionFlattenData);\n\n        setTransitionData(_newTransitionData);\n        setTransitionRange(_rangeNodes);\n        setMotionType('hide');\n      } // Trigger when `motion` provided\n\n\n      if (motion) {\n        onListChangeStart();\n      }\n    } else if (prevData !== data) {\n      // If whole data changed, we just refresh the list\n      setPrevData(data);\n      setTransitionData(data);\n    }\n  }, [expandedKeys, data]); // We should clean up motion if is changed by dragging\n\n  React.useEffect(function () {\n    if (!dragging) {\n      onMotionEnd();\n    }\n  }, [dragging]);\n  var mergedData = motion ? transitionData : data;\n  var treeNodeRequiredProps = {\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    loadedKeys: loadedKeys,\n    loadingKeys: loadingKeys,\n    checkedKeys: checkedKeys,\n    halfCheckedKeys: halfCheckedKeys,\n    dragOverNodeKey: dragOverNodeKey,\n    dropPosition: dropPosition,\n    keyEntities: keyEntities\n  };\n  return React.createElement(React.Fragment, null, focused && activeItem && React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, getAccessibilityPath(activeItem)), React.createElement(\"div\", {\n    role: \"tree\"\n  }, React.createElement(\"input\", {\n    style: HIDDEN_STYLE,\n    disabled: focusable === false || disabled,\n    tabIndex: focusable !== false ? tabIndex : null,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: \"\",\n    onChange: noop\n  })), React.createElement(VirtualList, Object.assign({}, domProps, {\n    disabled: disableVirtual,\n    data: mergedData,\n    itemKey: itemKey,\n    height: height,\n    fullHeight: false,\n    virtual: virtual,\n    itemHeight: itemHeight,\n    onSkipRender: onMotionEnd,\n    prefixCls: \"\".concat(prefixCls, \"-list\"),\n    ref: listRef\n  }), function (treeNode) {\n    var pos = treeNode.pos,\n        _treeNode$data = treeNode.data,\n        key = _treeNode$data.key,\n        restProps = _objectWithoutProperties(_treeNode$data, [\"key\"]),\n        isStart = treeNode.isStart,\n        isEnd = treeNode.isEnd;\n\n    var mergedKey = getKey(key, pos);\n    delete restProps.children;\n    var treeNodeProps = getTreeNodeProps(mergedKey, treeNodeRequiredProps);\n    return React.createElement(MotionTreeNode, Object.assign({}, restProps, treeNodeProps, {\n      active: activeItem && key === activeItem.data.key,\n      pos: pos,\n      data: treeNode.data,\n      isStart: isStart,\n      isEnd: isEnd,\n      motion: motion,\n      motionNodes: key === MOTION_KEY ? transitionRange : null,\n      motionType: motionType,\n      onMotionEnd: onMotionEnd,\n      treeNodeRequiredProps: treeNodeRequiredProps,\n      onMouseMove: function onMouseMove() {\n        onActiveChange(null);\n      }\n    }));\n  }));\n};\n\nvar NodeList = React.forwardRef(RefNodeList);\nNodeList.displayName = 'NodeList';\nexport default NodeList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}