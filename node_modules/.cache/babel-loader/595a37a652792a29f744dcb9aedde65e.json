{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  }; // ======================== Internal Hooks ========================\n\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n  /**\n   * First time `setInitialValues` should update store with initial value\n   */\n\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n\n  this.getInitialValue = function (namePath) {\n    return getValue(_this.initialValues, namePath);\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  }; // ========================== Dev Warning =========================\n\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = window.setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  }; // ============================ Fields ============================\n\n  /**\n   * Get registered field entities.\n   * @param pure Only return field which has a `name`. Default: false\n   */\n\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var testTouched = function testTouched(field) {\n      // Not provide `nameList` will check all the fields\n      if (!namePathList) {\n        return field.isFieldTouched();\n      }\n\n      var fieldNamePath = field.getNamePath();\n\n      if (containsNamePath(namePathList, fieldNamePath)) {\n        return field.isFieldTouched();\n      }\n\n      return isAllFieldsTouched;\n    };\n\n    return isAllFieldsTouched ? _this.getFieldEntities(true).every(testTouched) : _this.getFieldEntities(true).some(testTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n  /**\n   * Reset Field with field `initialValue` prop.\n   * Can pass `entities` or `namePathList` or just nothing.\n   */\n\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Create cache\n\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.store = setValue(_this.store, namePath, _toConsumableArray(records)[0].value);\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, [\"name\", \"errors\"]);\n\n      var namePath = getNamePath(name); // Value\n\n      if ('value' in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread({}, meta, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  }; // =========================== Observer ===========================\n\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (preserve) {\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if preserve\n\n      var mergedPreserve = preserve !== undefined ? preserve : _this.preserve;\n\n      if (mergedPreserve === false) {\n        var namePath = entity.getNamePath();\n\n        if (_this.getFieldValue(namePath) !== undefined) {\n          _this.store = setValue(_this.store, namePath, undefined);\n        }\n      }\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread({}, info, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref) {\n        var onStoreChange = _ref.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    }); // Notify dependencies children with parent update\n\n\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    _this.validateFields(childrenFields);\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    }); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.store);\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  }; // Let all child Field get update.\n\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref2) {\n          var name = _ref2.name,\n              errors = _ref2.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref3) {\n        var fieldName = _ref3.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  }; // =========================== Validate ===========================\n\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread({}, defaultValidateMessages, {}, _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: []\n          };\n        }).catch(function (errors) {\n          return Promise.reject({\n            name: fieldNamePath,\n            errors: errors\n          });\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref4) {\n        var name = _ref4.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  }; // ============================ Submit ============================\n\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n};\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;","map":{"version":3,"names":["_slicedToArray","_defineProperty","_objectWithoutProperties","_toConsumableArray","_classCallCheck","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","warning","HOOK_MARK","allPromiseFinish","NameMap","defaultValidateMessages","cloneByNamePathList","containsNamePath","getNamePath","getValue","setValue","setValues","FormStore","forceRootUpdate","_this","formHooked","subscribable","store","fieldEntities","initialValues","callbacks","validateMessages","preserve","lastValidatePromise","getForm","getFieldValue","getFieldsValue","getFieldError","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldsValue","validateFields","submit","getInternalHooks","dispatch","registerField","useSubscribe","setInitialValues","setCallbacks","setValidateMessages","getFields","setPreserve","init","getInitialValue","namePath","timeoutId","warningUnhooked","process","env","NODE_ENV","window","setTimeout","getFieldEntities","pure","undefined","field","getFieldsMap","cache","set","getFieldEntitiesForNamePathList","nameList","map","name","get","INVALIDATE_NAME_PATH","filterFunc","Array","isArray","filteredNameList","entity","meta","getMeta","index","errors","getErrors","fieldError","_len","args","_key","arg0","arg1","namePathList","isAllFieldsTouched","testTouched","fieldNamePath","every","some","testField","resetWithFieldInitialValue","info","initialValue","props","records","Set","add","value","resetWithFields","entities","formInitialValue","concat","join","size","originValue","skipExist","requiredFieldEntities","_requiredFieldEntitie","r","prevStore","notifyObservers","type","fields","fieldData","data","item","mergedPreserve","action","updateValue","_namePath","triggerName","mergedInfo","_ref","onStoreChange","childrenFields","getDependencyChildrenFields","relatedFields","onValuesChange","changedValues","triggerOnFieldsChange","rootNamePath","children","dependencies2fields","dependencies","dependency","dependencyNamePath","update","fillChildren","has","isFieldDirty","filedErrors","onFieldsChange","_ref2","changedFields","_ref3","fieldName","options","provideNameList","promiseList","rules","promise","validateRules","then","catch","Promise","reject","summaryPromise","results","resultNamePathList","_ref4","returnPromise","resolve","errorList","result","values","errorFields","outOfDate","e","onFinish","err","console","error","onFinishFailed","useForm","form","formRef","useRef","_React$useState","useState","_React$useState2","forceUpdate","current","forceReRender","formStore"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/node_modules/rc-field-form/es/useForm.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  }; // ======================== Internal Hooks ========================\n\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n  /**\n   * First time `setInitialValues` should update store with initial value\n   */\n\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n\n  this.getInitialValue = function (namePath) {\n    return getValue(_this.initialValues, namePath);\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.setPreserve = function (preserve) {\n    _this.preserve = preserve;\n  }; // ========================== Dev Warning =========================\n\n\n  this.timeoutId = null;\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.timeoutId && typeof window !== 'undefined') {\n      _this.timeoutId = window.setTimeout(function () {\n        _this.timeoutId = null;\n\n        if (!_this.formHooked) {\n          warning(false, 'Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?');\n        }\n      });\n    }\n  }; // ============================ Fields ============================\n\n  /**\n   * Get registered field entities.\n   * @param pure Only return field which has a `name`. Default: false\n   */\n\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var testTouched = function testTouched(field) {\n      // Not provide `nameList` will check all the fields\n      if (!namePathList) {\n        return field.isFieldTouched();\n      }\n\n      var fieldNamePath = field.getNamePath();\n\n      if (containsNamePath(namePathList, fieldNamePath)) {\n        return field.isFieldTouched();\n      }\n\n      return isAllFieldsTouched;\n    };\n\n    return isAllFieldsTouched ? _this.getFieldEntities(true).every(testTouched) : _this.getFieldEntities(true).some(testTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n  /**\n   * Reset Field with field `initialValue` prop.\n   * Can pass `entities` or `namePathList` or just nothing.\n   */\n\n\n  this.resetWithFieldInitialValue = function () {\n    var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Create cache\n    var cache = new NameMap();\n\n    var fieldEntities = _this.getFieldEntities(true);\n\n    fieldEntities.forEach(function (field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath(); // Record only if has `initialValue`\n\n      if (initialValue !== undefined) {\n        var records = cache.get(namePath) || new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    }); // Reset\n\n    var resetWithFields = function resetWithFields(entities) {\n      entities.forEach(function (field) {\n        var initialValue = field.props.initialValue;\n\n        if (initialValue !== undefined) {\n          var namePath = field.getNamePath();\n\n          var formInitialValue = _this.getInitialValue(namePath);\n\n          if (formInitialValue !== undefined) {\n            // Warning if conflict with form initialValues and do not modify value\n            warning(false, \"Form already set 'initialValues' with path '\".concat(namePath.join('.'), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n\n            if (records && records.size > 1) {\n              // Warning if multiple field set `initialValue`and do not modify value\n              warning(false, \"Multiple Field with path '\".concat(namePath.join('.'), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath); // Set `initialValue`\n\n\n              if (!info.skipExist || originValue === undefined) {\n                _this.store = setValue(_this.store, namePath, _toConsumableArray(records)[0].value);\n              }\n            }\n          }\n        }\n      });\n    };\n\n    var requiredFieldEntities;\n\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function (namePath) {\n        var records = cache.get(namePath);\n\n        if (records) {\n          var _requiredFieldEntitie;\n\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function (r) {\n            return r.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n\n    resetWithFields(requiredFieldEntities);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n\n      _this.resetWithFieldInitialValue();\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n\n    _this.resetWithFieldInitialValue({\n      namePathList: namePathList\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, [\"name\", \"errors\"]);\n\n      var namePath = getNamePath(name); // Value\n\n      if ('value' in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n  };\n\n  this.getFields = function () {\n    var entities = _this.getFieldEntities(true);\n\n    var fields = entities.map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n\n      var fieldData = _objectSpread({}, meta, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n\n      Object.defineProperty(fieldData, 'originRCField', {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  }; // =========================== Observer ===========================\n\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity); // Set initial values\n\n\n    if (entity.props.initialValue !== undefined) {\n      var prevStore = _this.store;\n\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: 'valueUpdate',\n        source: 'internal'\n      });\n    } // un-register field callback\n\n\n    return function (preserve) {\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      }); // Clean up store value if preserve\n\n      var mergedPreserve = preserve !== undefined ? preserve : _this.preserve;\n\n      if (mergedPreserve === false) {\n        var namePath = entity.getNamePath();\n\n        if (_this.getFieldValue(namePath) !== undefined) {\n          _this.store = setValue(_this.store, namePath, undefined);\n        }\n      }\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread({}, info, {\n        store: _this.getFieldsValue(true)\n      });\n\n      _this.getFieldEntities().forEach(function (_ref) {\n        var onStoreChange = _ref.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    }); // Notify dependencies children with parent update\n\n\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    _this.validateFields(childrenFields);\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    }); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.store);\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  }; // Let all child Field get update.\n\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      /**\n       * Fill errors since `fields` may be replaced by controlled fields\n       */\n\n\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function (_ref2) {\n          var name = _ref2.name,\n              errors = _ref2.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function (field) {\n          // eslint-disable-next-line no-param-reassign\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n\n      var changedFields = fields.filter(function (_ref3) {\n        var fieldName = _ref3.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  }; // =========================== Validate ===========================\n\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread({}, defaultValidateMessages, {}, _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: []\n          };\n        }).catch(function (errors) {\n          return Promise.reject({\n            name: fieldNamePath,\n            errors: errors\n          });\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref4) {\n        var name = _ref4.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  }; // ============================ Submit ============================\n\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n};\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,eAAP,MAA4B,2CAA5B;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;EAAgC,IAAIG,MAAM,CAACC,qBAAX,EAAkC;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;IAAoD,IAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;MAAE,OAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;IAAiE,CAAjG,CAAV;IAA8GP,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;EAAiC;;EAAC,OAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;IAAuD,IAAIA,CAAC,GAAG,CAAR,EAAW;MAAEf,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;QAAExB,eAAe,CAACkB,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;MAA4C,CAAnG;IAAuG,CAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;MAAEjB,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;IAA4E,CAApH,MAA0H;MAAElB,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;QAAEhB,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;MAAmF,CAApI;IAAwI;EAAE;;EAAC,OAAON,MAAP;AAAgB;;AAEthB,OAAO,KAAKU,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,WAAhD,EAA6DC,QAA7D,EAAuEC,QAAvE,EAAiFC,SAAjF,QAAkG,mBAAlG;AACA,OAAO,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,eAAnB,EAAoC;EACzD,IAAIC,KAAK,GAAG,IAAZ;;EAEAvC,eAAe,CAAC,IAAD,EAAOqC,SAAP,CAAf;;EAEA,KAAKG,UAAL,GAAkB,KAAlB;EACA,KAAKC,YAAL,GAAoB,IAApB;EACA,KAAKC,KAAL,GAAa,EAAb;EACA,KAAKC,aAAL,GAAqB,EAArB;EACA,KAAKC,aAAL,GAAqB,EAArB;EACA,KAAKC,SAAL,GAAiB,EAAjB;EACA,KAAKC,gBAAL,GAAwB,IAAxB;EACA,KAAKC,QAAL,GAAgB,IAAhB;EACA,KAAKC,mBAAL,GAA2B,IAA3B;;EAEA,KAAKC,OAAL,GAAe,YAAY;IACzB,OAAO;MACLC,aAAa,EAAEX,KAAK,CAACW,aADhB;MAELC,cAAc,EAAEZ,KAAK,CAACY,cAFjB;MAGLC,aAAa,EAAEb,KAAK,CAACa,aAHhB;MAILC,cAAc,EAAEd,KAAK,CAACc,cAJjB;MAKLC,eAAe,EAAEf,KAAK,CAACe,eALlB;MAMLC,cAAc,EAAEhB,KAAK,CAACgB,cANjB;MAOLC,iBAAiB,EAAEjB,KAAK,CAACiB,iBAPpB;MAQLC,kBAAkB,EAAElB,KAAK,CAACkB,kBARrB;MASLC,WAAW,EAAEnB,KAAK,CAACmB,WATd;MAULC,SAAS,EAAEpB,KAAK,CAACoB,SAVZ;MAWLC,cAAc,EAAErB,KAAK,CAACqB,cAXjB;MAYLC,cAAc,EAAEtB,KAAK,CAACsB,cAZjB;MAaLC,MAAM,EAAEvB,KAAK,CAACuB,MAbT;MAcLC,gBAAgB,EAAExB,KAAK,CAACwB;IAdnB,CAAP;EAgBD,CAjBD,CAfyD,CAgCtD;;;EAGH,KAAKA,gBAAL,GAAwB,UAAU1C,GAAV,EAAe;IACrC,IAAIA,GAAG,KAAKM,SAAZ,EAAuB;MACrBY,KAAK,CAACC,UAAN,GAAmB,IAAnB;MACA,OAAO;QACLwB,QAAQ,EAAEzB,KAAK,CAACyB,QADX;QAELC,aAAa,EAAE1B,KAAK,CAAC0B,aAFhB;QAGLC,YAAY,EAAE3B,KAAK,CAAC2B,YAHf;QAILC,gBAAgB,EAAE5B,KAAK,CAAC4B,gBAJnB;QAKLC,YAAY,EAAE7B,KAAK,CAAC6B,YALf;QAMLC,mBAAmB,EAAE9B,KAAK,CAAC8B,mBANtB;QAOLC,SAAS,EAAE/B,KAAK,CAAC+B,SAPZ;QAQLC,WAAW,EAAEhC,KAAK,CAACgC;MARd,CAAP;IAUD;;IAED7C,OAAO,CAAC,KAAD,EAAQ,iEAAR,CAAP;IACA,OAAO,IAAP;EACD,CAjBD;;EAmBA,KAAKwC,YAAL,GAAoB,UAAUzB,YAAV,EAAwB;IAC1CF,KAAK,CAACE,YAAN,GAAqBA,YAArB;EACD,CAFD;EAGA;AACF;AACA;;;EAGE,KAAK0B,gBAAL,GAAwB,UAAUvB,aAAV,EAAyB4B,IAAzB,EAA+B;IACrDjC,KAAK,CAACK,aAAN,GAAsBA,aAAa,IAAI,EAAvC;;IAEA,IAAI4B,IAAJ,EAAU;MACRjC,KAAK,CAACG,KAAN,GAAcN,SAAS,CAAC,EAAD,EAAKQ,aAAL,EAAoBL,KAAK,CAACG,KAA1B,CAAvB;IACD;EACF,CAND;;EAQA,KAAK+B,eAAL,GAAuB,UAAUC,QAAV,EAAoB;IACzC,OAAOxC,QAAQ,CAACK,KAAK,CAACK,aAAP,EAAsB8B,QAAtB,CAAf;EACD,CAFD;;EAIA,KAAKN,YAAL,GAAoB,UAAUvB,SAAV,EAAqB;IACvCN,KAAK,CAACM,SAAN,GAAkBA,SAAlB;EACD,CAFD;;EAIA,KAAKwB,mBAAL,GAA2B,UAAUvB,gBAAV,EAA4B;IACrDP,KAAK,CAACO,gBAAN,GAAyBA,gBAAzB;EACD,CAFD;;EAIA,KAAKyB,WAAL,GAAmB,UAAUxB,QAAV,EAAoB;IACrCR,KAAK,CAACQ,QAAN,GAAiBA,QAAjB;EACD,CAFD,CAlFyD,CAoFtD;;;EAGH,KAAK4B,SAAL,GAAiB,IAAjB;;EAEA,KAAKC,eAAL,GAAuB,YAAY;IACjC,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACxC,KAAK,CAACoC,SAAhD,IAA6D,OAAOK,MAAP,KAAkB,WAAnF,EAAgG;MAC9FzC,KAAK,CAACoC,SAAN,GAAkBK,MAAM,CAACC,UAAP,CAAkB,YAAY;QAC9C1C,KAAK,CAACoC,SAAN,GAAkB,IAAlB;;QAEA,IAAI,CAACpC,KAAK,CAACC,UAAX,EAAuB;UACrBd,OAAO,CAAC,KAAD,EAAQ,iGAAR,CAAP;QACD;MACF,CANiB,CAAlB;IAOD;EACF,CAVD,CAzFyD,CAmGtD;;EAEH;AACF;AACA;AACA;;;EAGE,KAAKwD,gBAAL,GAAwB,YAAY;IAClC,IAAIC,IAAI,GAAGlE,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBmE,SAAzC,GAAqDnE,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA/E;;IAEA,IAAI,CAACkE,IAAL,EAAW;MACT,OAAO5C,KAAK,CAACI,aAAb;IACD;;IAED,OAAOJ,KAAK,CAACI,aAAN,CAAoBnC,MAApB,CAA2B,UAAU6E,KAAV,EAAiB;MACjD,OAAOA,KAAK,CAACpD,WAAN,GAAoBf,MAA3B;IACD,CAFM,CAAP;EAGD,CAVD;;EAYA,KAAKoE,YAAL,GAAoB,YAAY;IAC9B,IAAIH,IAAI,GAAGlE,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBmE,SAAzC,GAAqDnE,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA/E;IACA,IAAIsE,KAAK,GAAG,IAAI1D,OAAJ,EAAZ;;IAEAU,KAAK,CAAC2C,gBAAN,CAAuBC,IAAvB,EAA6B/D,OAA7B,CAAqC,UAAUiE,KAAV,EAAiB;MACpD,IAAIX,QAAQ,GAAGW,KAAK,CAACpD,WAAN,EAAf;MACAsD,KAAK,CAACC,GAAN,CAAUd,QAAV,EAAoBW,KAApB;IACD,CAHD;;IAKA,OAAOE,KAAP;EACD,CAVD;;EAYA,KAAKE,+BAAL,GAAuC,UAAUC,QAAV,EAAoB;IACzD,IAAI,CAACA,QAAL,EAAe;MACb,OAAOnD,KAAK,CAAC2C,gBAAN,CAAuB,IAAvB,CAAP;IACD;;IAED,IAAIK,KAAK,GAAGhD,KAAK,CAAC+C,YAAN,CAAmB,IAAnB,CAAZ;;IAEA,OAAOI,QAAQ,CAACC,GAAT,CAAa,UAAUC,IAAV,EAAgB;MAClC,IAAIlB,QAAQ,GAAGzC,WAAW,CAAC2D,IAAD,CAA1B;MACA,OAAOL,KAAK,CAACM,GAAN,CAAUnB,QAAV,KAAuB;QAC5BoB,oBAAoB,EAAE7D,WAAW,CAAC2D,IAAD;MADL,CAA9B;IAGD,CALM,CAAP;EAMD,CAbD;;EAeA,KAAKzC,cAAL,GAAsB,UAAUuC,QAAV,EAAoBK,UAApB,EAAgC;IACpDxD,KAAK,CAACqC,eAAN;;IAEA,IAAIc,QAAQ,KAAK,IAAb,IAAqB,CAACK,UAA1B,EAAsC;MACpC,OAAOxD,KAAK,CAACG,KAAb;IACD;;IAED,IAAIC,aAAa,GAAGJ,KAAK,CAACkD,+BAAN,CAAsCO,KAAK,CAACC,OAAN,CAAcP,QAAd,IAA0BA,QAA1B,GAAqC,IAA3E,CAApB;;IAEA,IAAIQ,gBAAgB,GAAG,EAAvB;IACAvD,aAAa,CAACvB,OAAd,CAAsB,UAAU+E,MAAV,EAAkB;MACtC,IAAIzB,QAAQ,GAAG,0BAA0ByB,MAA1B,GAAmCA,MAAM,CAACL,oBAA1C,GAAiEK,MAAM,CAAClE,WAAP,EAAhF;;MAEA,IAAI,CAAC8D,UAAL,EAAiB;QACfG,gBAAgB,CAACtF,IAAjB,CAAsB8D,QAAtB;MACD,CAFD,MAEO;QACL,IAAI0B,IAAI,GAAG,aAAaD,MAAb,GAAsBA,MAAM,CAACE,OAAP,EAAtB,GAAyC,IAApD;;QAEA,IAAIN,UAAU,CAACK,IAAD,CAAd,EAAsB;UACpBF,gBAAgB,CAACtF,IAAjB,CAAsB8D,QAAtB;QACD;MACF;IACF,CAZD;IAaA,OAAO3C,mBAAmB,CAACQ,KAAK,CAACG,KAAP,EAAcwD,gBAAgB,CAACP,GAAjB,CAAqB1D,WAArB,CAAd,CAA1B;EACD,CAxBD;;EA0BA,KAAKiB,aAAL,GAAqB,UAAU0C,IAAV,EAAgB;IACnCrD,KAAK,CAACqC,eAAN;;IAEA,IAAIF,QAAQ,GAAGzC,WAAW,CAAC2D,IAAD,CAA1B;IACA,OAAO1D,QAAQ,CAACK,KAAK,CAACG,KAAP,EAAcgC,QAAd,CAAf;EACD,CALD;;EAOA,KAAKrB,cAAL,GAAsB,UAAUqC,QAAV,EAAoB;IACxCnD,KAAK,CAACqC,eAAN;;IAEA,IAAIjC,aAAa,GAAGJ,KAAK,CAACkD,+BAAN,CAAsCC,QAAtC,CAApB;;IAEA,OAAO/C,aAAa,CAACgD,GAAd,CAAkB,UAAUQ,MAAV,EAAkBG,KAAlB,EAAyB;MAChD,IAAIH,MAAM,IAAI,EAAE,0BAA0BA,MAA5B,CAAd,EAAmD;QACjD,OAAO;UACLP,IAAI,EAAEO,MAAM,CAAClE,WAAP,EADD;UAELsE,MAAM,EAAEJ,MAAM,CAACK,SAAP;QAFH,CAAP;MAID;;MAED,OAAO;QACLZ,IAAI,EAAE3D,WAAW,CAACyD,QAAQ,CAACY,KAAD,CAAT,CADZ;QAELC,MAAM,EAAE;MAFH,CAAP;IAID,CAZM,CAAP;EAaD,CAlBD;;EAoBA,KAAKnD,aAAL,GAAqB,UAAUwC,IAAV,EAAgB;IACnCrD,KAAK,CAACqC,eAAN;;IAEA,IAAIF,QAAQ,GAAGzC,WAAW,CAAC2D,IAAD,CAA1B;;IAEA,IAAIa,UAAU,GAAGlE,KAAK,CAACc,cAAN,CAAqB,CAACqB,QAAD,CAArB,EAAiC,CAAjC,CAAjB;;IAEA,OAAO+B,UAAU,CAACF,MAAlB;EACD,CARD;;EAUA,KAAKjD,eAAL,GAAuB,YAAY;IACjCf,KAAK,CAACqC,eAAN;;IAEA,KAAK,IAAI8B,IAAI,GAAGzF,SAAS,CAACC,MAArB,EAA6ByF,IAAI,GAAG,IAAIX,KAAJ,CAAUU,IAAV,CAApC,EAAqDE,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGF,IAA3E,EAAiFE,IAAI,EAArF,EAAyF;MACvFD,IAAI,CAACC,IAAD,CAAJ,GAAa3F,SAAS,CAAC2F,IAAD,CAAtB;IACD;;IAED,IAAIC,IAAI,GAAGF,IAAI,CAAC,CAAD,CAAf;IAAA,IACIG,IAAI,GAAGH,IAAI,CAAC,CAAD,CADf;IAEA,IAAII,YAAJ;IACA,IAAIC,kBAAkB,GAAG,KAAzB;;IAEA,IAAIL,IAAI,CAACzF,MAAL,KAAgB,CAApB,EAAuB;MACrB6F,YAAY,GAAG,IAAf;IACD,CAFD,MAEO,IAAIJ,IAAI,CAACzF,MAAL,KAAgB,CAApB,EAAuB;MAC5B,IAAI8E,KAAK,CAACC,OAAN,CAAcY,IAAd,CAAJ,EAAyB;QACvBE,YAAY,GAAGF,IAAI,CAAClB,GAAL,CAAS1D,WAAT,CAAf;QACA+E,kBAAkB,GAAG,KAArB;MACD,CAHD,MAGO;QACLD,YAAY,GAAG,IAAf;QACAC,kBAAkB,GAAGH,IAArB;MACD;IACF,CARM,MAQA;MACLE,YAAY,GAAGF,IAAI,CAAClB,GAAL,CAAS1D,WAAT,CAAf;MACA+E,kBAAkB,GAAGF,IAArB;IACD;;IAED,IAAIG,WAAW,GAAG,SAASA,WAAT,CAAqB5B,KAArB,EAA4B;MAC5C;MACA,IAAI,CAAC0B,YAAL,EAAmB;QACjB,OAAO1B,KAAK,CAAC9B,cAAN,EAAP;MACD;;MAED,IAAI2D,aAAa,GAAG7B,KAAK,CAACpD,WAAN,EAApB;;MAEA,IAAID,gBAAgB,CAAC+E,YAAD,EAAeG,aAAf,CAApB,EAAmD;QACjD,OAAO7B,KAAK,CAAC9B,cAAN,EAAP;MACD;;MAED,OAAOyD,kBAAP;IACD,CAbD;;IAeA,OAAOA,kBAAkB,GAAGzE,KAAK,CAAC2C,gBAAN,CAAuB,IAAvB,EAA6BiC,KAA7B,CAAmCF,WAAnC,CAAH,GAAqD1E,KAAK,CAAC2C,gBAAN,CAAuB,IAAvB,EAA6BkC,IAA7B,CAAkCH,WAAlC,CAA9E;EACD,CA3CD;;EA6CA,KAAK1D,cAAL,GAAsB,UAAUqC,IAAV,EAAgB;IACpCrD,KAAK,CAACqC,eAAN;;IAEA,OAAOrC,KAAK,CAACe,eAAN,CAAsB,CAACsC,IAAD,CAAtB,CAAP;EACD,CAJD;;EAMA,KAAKnC,kBAAL,GAA0B,UAAUiC,QAAV,EAAoB;IAC5CnD,KAAK,CAACqC,eAAN;;IAEA,IAAIjC,aAAa,GAAGJ,KAAK,CAAC2C,gBAAN,EAApB;;IAEA,IAAI,CAACQ,QAAL,EAAe;MACb,OAAO/C,aAAa,CAACyE,IAAd,CAAmB,UAAUC,SAAV,EAAqB;QAC7C,OAAOA,SAAS,CAAC7D,iBAAV,EAAP;MACD,CAFM,CAAP;IAGD;;IAED,IAAIuD,YAAY,GAAGrB,QAAQ,CAACC,GAAT,CAAa1D,WAAb,CAAnB;IACA,OAAOU,aAAa,CAACyE,IAAd,CAAmB,UAAUC,SAAV,EAAqB;MAC7C,IAAIH,aAAa,GAAGG,SAAS,CAACpF,WAAV,EAApB;MACA,OAAOD,gBAAgB,CAAC+E,YAAD,EAAeG,aAAf,CAAhB,IAAiDG,SAAS,CAAC7D,iBAAV,EAAxD;IACD,CAHM,CAAP;EAID,CAhBD;;EAkBA,KAAKA,iBAAL,GAAyB,UAAUoC,IAAV,EAAgB;IACvCrD,KAAK,CAACqC,eAAN;;IAEA,OAAOrC,KAAK,CAACkB,kBAAN,CAAyB,CAACmC,IAAD,CAAzB,CAAP;EACD,CAJD;EAKA;AACF;AACA;AACA;;;EAGE,KAAK0B,0BAAL,GAAkC,YAAY;IAC5C,IAAIC,IAAI,GAAGtG,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBmE,SAAzC,GAAqDnE,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E,CAD4C,CAE5C;;IACA,IAAIsE,KAAK,GAAG,IAAI1D,OAAJ,EAAZ;;IAEA,IAAIc,aAAa,GAAGJ,KAAK,CAAC2C,gBAAN,CAAuB,IAAvB,CAApB;;IAEAvC,aAAa,CAACvB,OAAd,CAAsB,UAAUiE,KAAV,EAAiB;MACrC,IAAImC,YAAY,GAAGnC,KAAK,CAACoC,KAAN,CAAYD,YAA/B;MACA,IAAI9C,QAAQ,GAAGW,KAAK,CAACpD,WAAN,EAAf,CAFqC,CAED;;MAEpC,IAAIuF,YAAY,KAAKpC,SAArB,EAAgC;QAC9B,IAAIsC,OAAO,GAAGnC,KAAK,CAACM,GAAN,CAAUnB,QAAV,KAAuB,IAAIiD,GAAJ,EAArC;QACAD,OAAO,CAACE,GAAR,CAAY;UACVzB,MAAM,EAAEd,KADE;UAEVwC,KAAK,EAAEL;QAFG,CAAZ;QAIAjC,KAAK,CAACC,GAAN,CAAUd,QAAV,EAAoBgD,OAApB;MACD;IACF,CAZD,EAP4C,CAmBxC;;IAEJ,IAAII,eAAe,GAAG,SAASA,eAAT,CAAyBC,QAAzB,EAAmC;MACvDA,QAAQ,CAAC3G,OAAT,CAAiB,UAAUiE,KAAV,EAAiB;QAChC,IAAImC,YAAY,GAAGnC,KAAK,CAACoC,KAAN,CAAYD,YAA/B;;QAEA,IAAIA,YAAY,KAAKpC,SAArB,EAAgC;UAC9B,IAAIV,QAAQ,GAAGW,KAAK,CAACpD,WAAN,EAAf;;UAEA,IAAI+F,gBAAgB,GAAGzF,KAAK,CAACkC,eAAN,CAAsBC,QAAtB,CAAvB;;UAEA,IAAIsD,gBAAgB,KAAK5C,SAAzB,EAAoC;YAClC;YACA1D,OAAO,CAAC,KAAD,EAAQ,+CAA+CuG,MAA/C,CAAsDvD,QAAQ,CAACwD,IAAT,CAAc,GAAd,CAAtD,EAA0E,gCAA1E,CAAR,CAAP;UACD,CAHD,MAGO;YACL,IAAIR,OAAO,GAAGnC,KAAK,CAACM,GAAN,CAAUnB,QAAV,CAAd;;YAEA,IAAIgD,OAAO,IAAIA,OAAO,CAACS,IAAR,GAAe,CAA9B,EAAiC;cAC/B;cACAzG,OAAO,CAAC,KAAD,EAAQ,6BAA6BuG,MAA7B,CAAoCvD,QAAQ,CAACwD,IAAT,CAAc,GAAd,CAApC,EAAwD,yDAAxD,CAAR,CAAP;YACD,CAHD,MAGO,IAAIR,OAAJ,EAAa;cAClB,IAAIU,WAAW,GAAG7F,KAAK,CAACW,aAAN,CAAoBwB,QAApB,CAAlB,CADkB,CAC+B;;;cAGjD,IAAI,CAAC6C,IAAI,CAACc,SAAN,IAAmBD,WAAW,KAAKhD,SAAvC,EAAkD;gBAChD7C,KAAK,CAACG,KAAN,GAAcP,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAcgC,QAAd,EAAwB3E,kBAAkB,CAAC2H,OAAD,CAAlB,CAA4B,CAA5B,EAA+BG,KAAvD,CAAtB;cACD;YACF;UACF;QACF;MACF,CA3BD;IA4BD,CA7BD;;IA+BA,IAAIS,qBAAJ;;IAEA,IAAIf,IAAI,CAACQ,QAAT,EAAmB;MACjBO,qBAAqB,GAAGf,IAAI,CAACQ,QAA7B;IACD,CAFD,MAEO,IAAIR,IAAI,CAACR,YAAT,EAAuB;MAC5BuB,qBAAqB,GAAG,EAAxB;MACAf,IAAI,CAACR,YAAL,CAAkB3F,OAAlB,CAA0B,UAAUsD,QAAV,EAAoB;QAC5C,IAAIgD,OAAO,GAAGnC,KAAK,CAACM,GAAN,CAAUnB,QAAV,CAAd;;QAEA,IAAIgD,OAAJ,EAAa;UACX,IAAIa,qBAAJ;;UAEA,CAACA,qBAAqB,GAAGD,qBAAzB,EAAgD1H,IAAhD,CAAqDC,KAArD,CAA2D0H,qBAA3D,EAAkFxI,kBAAkB,CAACA,kBAAkB,CAAC2H,OAAD,CAAlB,CAA4B/B,GAA5B,CAAgC,UAAU6C,CAAV,EAAa;YAChJ,OAAOA,CAAC,CAACrC,MAAT;UACD,CAFoG,CAAD,CAApG;QAGD;MACF,CAVD;IAWD,CAbM,MAaA;MACLmC,qBAAqB,GAAG3F,aAAxB;IACD;;IAEDmF,eAAe,CAACQ,qBAAD,CAAf;EACD,CA1ED;;EA4EA,KAAK5E,WAAL,GAAmB,UAAUgC,QAAV,EAAoB;IACrCnD,KAAK,CAACqC,eAAN;;IAEA,IAAI6D,SAAS,GAAGlG,KAAK,CAACG,KAAtB;;IAEA,IAAI,CAACgD,QAAL,EAAe;MACbnD,KAAK,CAACG,KAAN,GAAcN,SAAS,CAAC,EAAD,EAAKG,KAAK,CAACK,aAAX,CAAvB;;MAEAL,KAAK,CAAC+E,0BAAN;;MAEA/E,KAAK,CAACmG,eAAN,CAAsBD,SAAtB,EAAiC,IAAjC,EAAuC;QACrCE,IAAI,EAAE;MAD+B,CAAvC;;MAIA;IACD,CAfoC,CAenC;;;IAGF,IAAI5B,YAAY,GAAGrB,QAAQ,CAACC,GAAT,CAAa1D,WAAb,CAAnB;IACA8E,YAAY,CAAC3F,OAAb,CAAqB,UAAUsD,QAAV,EAAoB;MACvC,IAAI8C,YAAY,GAAGjF,KAAK,CAACkC,eAAN,CAAsBC,QAAtB,CAAnB;;MAEAnC,KAAK,CAACG,KAAN,GAAcP,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAcgC,QAAd,EAAwB8C,YAAxB,CAAtB;IACD,CAJD;;IAMAjF,KAAK,CAAC+E,0BAAN,CAAiC;MAC/BP,YAAY,EAAEA;IADiB,CAAjC;;IAIAxE,KAAK,CAACmG,eAAN,CAAsBD,SAAtB,EAAiC1B,YAAjC,EAA+C;MAC7C4B,IAAI,EAAE;IADuC,CAA/C;EAGD,CAhCD;;EAkCA,KAAKhF,SAAL,GAAiB,UAAUiF,MAAV,EAAkB;IACjCrG,KAAK,CAACqC,eAAN;;IAEA,IAAI6D,SAAS,GAAGlG,KAAK,CAACG,KAAtB;IACAkG,MAAM,CAACxH,OAAP,CAAe,UAAUyH,SAAV,EAAqB;MAClC,IAAIjD,IAAI,GAAGiD,SAAS,CAACjD,IAArB;MAAA,IACIW,MAAM,GAAGsC,SAAS,CAACtC,MADvB;MAAA,IAEIuC,IAAI,GAAGhJ,wBAAwB,CAAC+I,SAAD,EAAY,CAAC,MAAD,EAAS,QAAT,CAAZ,CAFnC;;MAIA,IAAInE,QAAQ,GAAGzC,WAAW,CAAC2D,IAAD,CAA1B,CALkC,CAKA;;MAElC,IAAI,WAAWkD,IAAf,EAAqB;QACnBvG,KAAK,CAACG,KAAN,GAAcP,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAcgC,QAAd,EAAwBoE,IAAI,CAACjB,KAA7B,CAAtB;MACD;;MAEDtF,KAAK,CAACmG,eAAN,CAAsBD,SAAtB,EAAiC,CAAC/D,QAAD,CAAjC,EAA6C;QAC3CiE,IAAI,EAAE,UADqC;QAE3CG,IAAI,EAAED;MAFqC,CAA7C;IAID,CAfD;EAgBD,CApBD;;EAsBA,KAAKvE,SAAL,GAAiB,YAAY;IAC3B,IAAIyD,QAAQ,GAAGxF,KAAK,CAAC2C,gBAAN,CAAuB,IAAvB,CAAf;;IAEA,IAAI0D,MAAM,GAAGb,QAAQ,CAACpC,GAAT,CAAa,UAAUN,KAAV,EAAiB;MACzC,IAAIX,QAAQ,GAAGW,KAAK,CAACpD,WAAN,EAAf;MACA,IAAImE,IAAI,GAAGf,KAAK,CAACgB,OAAN,EAAX;;MAEA,IAAIwC,SAAS,GAAG/H,aAAa,CAAC,EAAD,EAAKsF,IAAL,EAAW;QACtCR,IAAI,EAAElB,QADgC;QAEtCmD,KAAK,EAAEtF,KAAK,CAACW,aAAN,CAAoBwB,QAApB;MAF+B,CAAX,CAA7B;;MAKArE,MAAM,CAACmB,cAAP,CAAsBqH,SAAtB,EAAiC,eAAjC,EAAkD;QAChDhB,KAAK,EAAE;MADyC,CAAlD;MAGA,OAAOgB,SAAP;IACD,CAbY,CAAb;IAcA,OAAOD,MAAP;EACD,CAlBD,CArayD,CAubtD;;;EAGH,KAAK3E,aAAL,GAAqB,UAAUkC,MAAV,EAAkB;IACrC5D,KAAK,CAACI,aAAN,CAAoB/B,IAApB,CAAyBuF,MAAzB,EADqC,CACH;;;IAGlC,IAAIA,MAAM,CAACsB,KAAP,CAAaD,YAAb,KAA8BpC,SAAlC,EAA6C;MAC3C,IAAIqD,SAAS,GAAGlG,KAAK,CAACG,KAAtB;;MAEAH,KAAK,CAAC+E,0BAAN,CAAiC;QAC/BS,QAAQ,EAAE,CAAC5B,MAAD,CADqB;QAE/BkC,SAAS,EAAE;MAFoB,CAAjC;;MAKA9F,KAAK,CAACmG,eAAN,CAAsBD,SAAtB,EAAiC,CAACtC,MAAM,CAAClE,WAAP,EAAD,CAAjC,EAAyD;QACvD0G,IAAI,EAAE,aADiD;QAEvDxH,MAAM,EAAE;MAF+C,CAAzD;IAID,CAhBoC,CAgBnC;;;IAGF,OAAO,UAAU4B,QAAV,EAAoB;MACzBR,KAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACI,aAAN,CAAoBnC,MAApB,CAA2B,UAAUuI,IAAV,EAAgB;QAC/D,OAAOA,IAAI,KAAK5C,MAAhB;MACD,CAFqB,CAAtB,CADyB,CAGrB;;MAEJ,IAAI6C,cAAc,GAAGjG,QAAQ,KAAKqC,SAAb,GAAyBrC,QAAzB,GAAoCR,KAAK,CAACQ,QAA/D;;MAEA,IAAIiG,cAAc,KAAK,KAAvB,EAA8B;QAC5B,IAAItE,QAAQ,GAAGyB,MAAM,CAAClE,WAAP,EAAf;;QAEA,IAAIM,KAAK,CAACW,aAAN,CAAoBwB,QAApB,MAAkCU,SAAtC,EAAiD;UAC/C7C,KAAK,CAACG,KAAN,GAAcP,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAcgC,QAAd,EAAwBU,SAAxB,CAAtB;QACD;MACF;IACF,CAdD;EAeD,CAlCD;;EAoCA,KAAKpB,QAAL,GAAgB,UAAUiF,MAAV,EAAkB;IAChC,QAAQA,MAAM,CAACN,IAAf;MACE,KAAK,aAAL;QACE;UACE,IAAIjE,QAAQ,GAAGuE,MAAM,CAACvE,QAAtB;UAAA,IACImD,KAAK,GAAGoB,MAAM,CAACpB,KADnB;;UAGAtF,KAAK,CAAC2G,WAAN,CAAkBxE,QAAlB,EAA4BmD,KAA5B;;UAEA;QACD;;MAEH,KAAK,eAAL;QACE;UACE,IAAIsB,SAAS,GAAGF,MAAM,CAACvE,QAAvB;UAAA,IACI0E,WAAW,GAAGH,MAAM,CAACG,WADzB;;UAGA7G,KAAK,CAACsB,cAAN,CAAqB,CAACsF,SAAD,CAArB,EAAkC;YAChCC,WAAW,EAAEA;UADmB,CAAlC;;UAIA;QACD;;MAEH,QAvBF,CAuBW;;IAvBX;EA0BD,CA3BD;;EA6BA,KAAKV,eAAL,GAAuB,UAAUD,SAAV,EAAqB1B,YAArB,EAAmCQ,IAAnC,EAAyC;IAC9D,IAAIhF,KAAK,CAACE,YAAV,EAAwB;MACtB,IAAI4G,UAAU,GAAGvI,aAAa,CAAC,EAAD,EAAKyG,IAAL,EAAW;QACvC7E,KAAK,EAAEH,KAAK,CAACY,cAAN,CAAqB,IAArB;MADgC,CAAX,CAA9B;;MAIAZ,KAAK,CAAC2C,gBAAN,GAAyB9D,OAAzB,CAAiC,UAAUkI,IAAV,EAAgB;QAC/C,IAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;QACAA,aAAa,CAACd,SAAD,EAAY1B,YAAZ,EAA0BsC,UAA1B,CAAb;MACD,CAHD;IAID,CATD,MASO;MACL9G,KAAK,CAACD,eAAN;IACD;EACF,CAbD;;EAeA,KAAK4G,WAAL,GAAmB,UAAUtD,IAAV,EAAgBiC,KAAhB,EAAuB;IACxC,IAAInD,QAAQ,GAAGzC,WAAW,CAAC2D,IAAD,CAA1B;IACA,IAAI6C,SAAS,GAAGlG,KAAK,CAACG,KAAtB;IACAH,KAAK,CAACG,KAAN,GAAcP,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAcgC,QAAd,EAAwBmD,KAAxB,CAAtB;;IAEAtF,KAAK,CAACmG,eAAN,CAAsBD,SAAtB,EAAiC,CAAC/D,QAAD,CAAjC,EAA6C;MAC3CiE,IAAI,EAAE,aADqC;MAE3CxH,MAAM,EAAE;IAFmC,CAA7C,EALwC,CAQpC;;;IAGJ,IAAIqI,cAAc,GAAGjH,KAAK,CAACkH,2BAAN,CAAkC/E,QAAlC,CAArB;;IAEAnC,KAAK,CAACsB,cAAN,CAAqB2F,cAArB;;IAEAjH,KAAK,CAACmG,eAAN,CAAsBD,SAAtB,EAAiCe,cAAjC,EAAiD;MAC/Cb,IAAI,EAAE,oBADyC;MAE/Ce,aAAa,EAAE,CAAChF,QAAD,EAAWuD,MAAX,CAAkBlI,kBAAkB,CAACyJ,cAAD,CAApC;IAFgC,CAAjD,EAfwC,CAkBpC;;;IAGJ,IAAIG,cAAc,GAAGpH,KAAK,CAACM,SAAN,CAAgB8G,cAArC;;IAEA,IAAIA,cAAJ,EAAoB;MAClB,IAAIC,aAAa,GAAG7H,mBAAmB,CAACQ,KAAK,CAACG,KAAP,EAAc,CAACgC,QAAD,CAAd,CAAvC;MACAiF,cAAc,CAACC,aAAD,EAAgBrH,KAAK,CAACG,KAAtB,CAAd;IACD;;IAEDH,KAAK,CAACsH,qBAAN,CAA4B,CAACnF,QAAD,EAAWuD,MAAX,CAAkBlI,kBAAkB,CAACyJ,cAAD,CAApC,CAA5B;EACD,CA7BD,CA1gByD,CAuiBtD;;;EAGH,KAAK5F,cAAL,GAAsB,UAAUlB,KAAV,EAAiB;IACrCH,KAAK,CAACqC,eAAN;;IAEA,IAAI6D,SAAS,GAAGlG,KAAK,CAACG,KAAtB;;IAEA,IAAIA,KAAJ,EAAW;MACTH,KAAK,CAACG,KAAN,GAAcN,SAAS,CAACG,KAAK,CAACG,KAAP,EAAcA,KAAd,CAAvB;IACD;;IAEDH,KAAK,CAACmG,eAAN,CAAsBD,SAAtB,EAAiC,IAAjC,EAAuC;MACrCE,IAAI,EAAE,aAD+B;MAErCxH,MAAM,EAAE;IAF6B,CAAvC;EAID,CAbD;;EAeA,KAAKsI,2BAAL,GAAmC,UAAUK,YAAV,EAAwB;IACzD,IAAIC,QAAQ,GAAG,IAAIpC,GAAJ,EAAf;IACA,IAAI6B,cAAc,GAAG,EAArB;IACA,IAAIQ,mBAAmB,GAAG,IAAInI,OAAJ,EAA1B;IACA;AACJ;AACA;AACA;;IAEIU,KAAK,CAAC2C,gBAAN,GAAyB9D,OAAzB,CAAiC,UAAUiE,KAAV,EAAiB;MAChD,IAAI4E,YAAY,GAAG5E,KAAK,CAACoC,KAAN,CAAYwC,YAA/B;MACA,CAACA,YAAY,IAAI,EAAjB,EAAqB7I,OAArB,CAA6B,UAAU8I,UAAV,EAAsB;QACjD,IAAIC,kBAAkB,GAAGlI,WAAW,CAACiI,UAAD,CAApC;QACAF,mBAAmB,CAACI,MAApB,CAA2BD,kBAA3B,EAA+C,YAAY;UACzD,IAAIvB,MAAM,GAAG3H,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBmE,SAAzC,GAAqDnE,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAI0G,GAAJ,EAAjF;UACAiB,MAAM,CAAChB,GAAP,CAAWvC,KAAX;UACA,OAAOuD,MAAP;QACD,CAJD;MAKD,CAPD;IAQD,CAVD;;IAYA,IAAIyB,YAAY,GAAG,SAASA,YAAT,CAAsB3F,QAAtB,EAAgC;MACjD,IAAIkE,MAAM,GAAGoB,mBAAmB,CAACnE,GAApB,CAAwBnB,QAAxB,KAAqC,IAAIiD,GAAJ,EAAlD;MACAiB,MAAM,CAACxH,OAAP,CAAe,UAAUiE,KAAV,EAAiB;QAC9B,IAAI,CAAC0E,QAAQ,CAACO,GAAT,CAAajF,KAAb,CAAL,EAA0B;UACxB0E,QAAQ,CAACnC,GAAT,CAAavC,KAAb;UACA,IAAI6B,aAAa,GAAG7B,KAAK,CAACpD,WAAN,EAApB;;UAEA,IAAIoD,KAAK,CAACkF,YAAN,MAAwBrD,aAAa,CAAChG,MAA1C,EAAkD;YAChDsI,cAAc,CAAC5I,IAAf,CAAoBsG,aAApB;YACAmD,YAAY,CAACnD,aAAD,CAAZ;UACD;QACF;MACF,CAVD;IAWD,CAbD;;IAeAmD,YAAY,CAACP,YAAD,CAAZ;IACA,OAAON,cAAP;EACD,CAtCD;;EAwCA,KAAKK,qBAAL,GAA6B,UAAU9C,YAAV,EAAwByD,WAAxB,EAAqC;IAChE,IAAIC,cAAc,GAAGlI,KAAK,CAACM,SAAN,CAAgB4H,cAArC;;IAEA,IAAIA,cAAJ,EAAoB;MAClB,IAAI7B,MAAM,GAAGrG,KAAK,CAAC+B,SAAN,EAAb;MACA;AACN;AACA;;;MAGM,IAAIkG,WAAJ,EAAiB;QACf,IAAIjF,KAAK,GAAG,IAAI1D,OAAJ,EAAZ;QACA2I,WAAW,CAACpJ,OAAZ,CAAoB,UAAUsJ,KAAV,EAAiB;UACnC,IAAI9E,IAAI,GAAG8E,KAAK,CAAC9E,IAAjB;UAAA,IACIW,MAAM,GAAGmE,KAAK,CAACnE,MADnB;UAEAhB,KAAK,CAACC,GAAN,CAAUI,IAAV,EAAgBW,MAAhB;QACD,CAJD;QAKAqC,MAAM,CAACxH,OAAP,CAAe,UAAUiE,KAAV,EAAiB;UAC9B;UACAA,KAAK,CAACkB,MAAN,GAAehB,KAAK,CAACM,GAAN,CAAUR,KAAK,CAACO,IAAhB,KAAyBP,KAAK,CAACkB,MAA9C;QACD,CAHD;MAID;;MAED,IAAIoE,aAAa,GAAG/B,MAAM,CAACpI,MAAP,CAAc,UAAUoK,KAAV,EAAiB;QACjD,IAAIC,SAAS,GAAGD,KAAK,CAAChF,IAAtB;QACA,OAAO5D,gBAAgB,CAAC+E,YAAD,EAAe8D,SAAf,CAAvB;MACD,CAHmB,CAApB;MAIAJ,cAAc,CAACE,aAAD,EAAgB/B,MAAhB,CAAd;IACD;EACF,CA7BD,CAjmByD,CA8nBtD;;;EAGH,KAAK/E,cAAL,GAAsB,UAAU6B,QAAV,EAAoBoF,OAApB,EAA6B;IACjDvI,KAAK,CAACqC,eAAN;;IAEA,IAAImG,eAAe,GAAG,CAAC,CAACrF,QAAxB;IACA,IAAIqB,YAAY,GAAGgE,eAAe,GAAGrF,QAAQ,CAACC,GAAT,CAAa1D,WAAb,CAAH,GAA+B,EAAjE,CAJiD,CAIoB;;IAErE,IAAI+I,WAAW,GAAG,EAAlB;;IAEAzI,KAAK,CAAC2C,gBAAN,CAAuB,IAAvB,EAA6B9D,OAA7B,CAAqC,UAAUiE,KAAV,EAAiB;MACpD;MACA,IAAI,CAAC0F,eAAL,EAAsB;QACpBhE,YAAY,CAACnG,IAAb,CAAkByE,KAAK,CAACpD,WAAN,EAAlB;MACD,CAJmD,CAIlD;;;MAGF,IAAI,CAACoD,KAAK,CAACoC,KAAN,CAAYwD,KAAb,IAAsB,CAAC5F,KAAK,CAACoC,KAAN,CAAYwD,KAAZ,CAAkB/J,MAA7C,EAAqD;QACnD;MACD;;MAED,IAAIgG,aAAa,GAAG7B,KAAK,CAACpD,WAAN,EAApB,CAXoD,CAWX;;MAEzC,IAAI,CAAC8I,eAAD,IAAoB/I,gBAAgB,CAAC+E,YAAD,EAAeG,aAAf,CAAxC,EAAuE;QACrE,IAAIgE,OAAO,GAAG7F,KAAK,CAAC8F,aAAN,CAAoBrK,aAAa,CAAC;UAC9CgC,gBAAgB,EAAEhC,aAAa,CAAC,EAAD,EAAKgB,uBAAL,EAA8B,EAA9B,EAAkCS,KAAK,CAACO,gBAAxC;QADe,CAAD,EAE5CgI,OAF4C,CAAjC,CAAd,CADqE,CAGvD;;QAEdE,WAAW,CAACpK,IAAZ,CAAiBsK,OAAO,CAACE,IAAR,CAAa,YAAY;UACxC,OAAO;YACLxF,IAAI,EAAEsB,aADD;YAELX,MAAM,EAAE;UAFH,CAAP;QAID,CALgB,EAKd8E,KALc,CAKR,UAAU9E,MAAV,EAAkB;UACzB,OAAO+E,OAAO,CAACC,MAAR,CAAe;YACpB3F,IAAI,EAAEsB,aADc;YAEpBX,MAAM,EAAEA;UAFY,CAAf,CAAP;QAID,CAVgB,CAAjB;MAWD;IACF,CA9BD;;IAgCA,IAAIiF,cAAc,GAAG5J,gBAAgB,CAACoJ,WAAD,CAArC;IACAzI,KAAK,CAACS,mBAAN,GAA4BwI,cAA5B,CAzCiD,CAyCL;;IAE5CA,cAAc,CAACH,KAAf,CAAqB,UAAUI,OAAV,EAAmB;MACtC,OAAOA,OAAP;IACD,CAFD,EAEGL,IAFH,CAEQ,UAAUK,OAAV,EAAmB;MACzB,IAAIC,kBAAkB,GAAGD,OAAO,CAAC9F,GAAR,CAAY,UAAUgG,KAAV,EAAiB;QACpD,IAAI/F,IAAI,GAAG+F,KAAK,CAAC/F,IAAjB;QACA,OAAOA,IAAP;MACD,CAHwB,CAAzB;;MAKArD,KAAK,CAACmG,eAAN,CAAsBnG,KAAK,CAACG,KAA5B,EAAmCgJ,kBAAnC,EAAuD;QACrD/C,IAAI,EAAE;MAD+C,CAAvD;;MAIApG,KAAK,CAACsH,qBAAN,CAA4B6B,kBAA5B,EAAgDD,OAAhD;IACD,CAbD;IAcA,IAAIG,aAAa,GAAGJ,cAAc,CAACJ,IAAf,CAAoB,YAAY;MAClD,IAAI7I,KAAK,CAACS,mBAAN,KAA8BwI,cAAlC,EAAkD;QAChD,OAAOF,OAAO,CAACO,OAAR,CAAgBtJ,KAAK,CAACY,cAAN,CAAqB4D,YAArB,CAAhB,CAAP;MACD;;MAED,OAAOuE,OAAO,CAACC,MAAR,CAAe,EAAf,CAAP;IACD,CANmB,EAMjBF,KANiB,CAMX,UAAUI,OAAV,EAAmB;MAC1B,IAAIK,SAAS,GAAGL,OAAO,CAACjL,MAAR,CAAe,UAAUuL,MAAV,EAAkB;QAC/C,OAAOA,MAAM,IAAIA,MAAM,CAACxF,MAAP,CAAcrF,MAA/B;MACD,CAFe,CAAhB;MAGA,OAAOoK,OAAO,CAACC,MAAR,CAAe;QACpBS,MAAM,EAAEzJ,KAAK,CAACY,cAAN,CAAqB4D,YAArB,CADY;QAEpBkF,WAAW,EAAEH,SAFO;QAGpBI,SAAS,EAAE3J,KAAK,CAACS,mBAAN,KAA8BwI;MAHrB,CAAf,CAAP;IAKD,CAfmB,CAApB,CAzDiD,CAwE7C;;IAEJI,aAAa,CAACP,KAAd,CAAoB,UAAUc,CAAV,EAAa;MAC/B,OAAOA,CAAP;IACD,CAFD;IAGA,OAAOP,aAAP;EACD,CA9ED,CAjoByD,CA+sBtD;;;EAGH,KAAK9H,MAAL,GAAc,YAAY;IACxBvB,KAAK,CAACqC,eAAN;;IAEArC,KAAK,CAACsB,cAAN,GAAuBuH,IAAvB,CAA4B,UAAUY,MAAV,EAAkB;MAC5C,IAAII,QAAQ,GAAG7J,KAAK,CAACM,SAAN,CAAgBuJ,QAA/B;;MAEA,IAAIA,QAAJ,EAAc;QACZ,IAAI;UACFA,QAAQ,CAACJ,MAAD,CAAR;QACD,CAFD,CAEE,OAAOK,GAAP,EAAY;UACZ;UACAC,OAAO,CAACC,KAAR,CAAcF,GAAd;QACD;MACF;IACF,CAXD,EAWGhB,KAXH,CAWS,UAAUc,CAAV,EAAa;MACpB,IAAIK,cAAc,GAAGjK,KAAK,CAACM,SAAN,CAAgB2J,cAArC;;MAEA,IAAIA,cAAJ,EAAoB;QAClBA,cAAc,CAACL,CAAD,CAAd;MACD;IACF,CAjBD;EAkBD,CArBD;;EAuBA,KAAK7J,eAAL,GAAuBA,eAAvB;AACD,CA1uBM;;AA4uBP,SAASmK,OAAT,CAAiBC,IAAjB,EAAuB;EACrB,IAAIC,OAAO,GAAGlL,KAAK,CAACmL,MAAN,EAAd;;EAEA,IAAIC,eAAe,GAAGpL,KAAK,CAACqL,QAAN,EAAtB;EAAA,IACIC,gBAAgB,GAAGnN,cAAc,CAACiN,eAAD,EAAkB,CAAlB,CADrC;EAAA,IAEIG,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAFlC;;EAIA,IAAI,CAACJ,OAAO,CAACM,OAAb,EAAsB;IACpB,IAAIP,IAAJ,EAAU;MACRC,OAAO,CAACM,OAAR,GAAkBP,IAAlB;IACD,CAFD,MAEO;MACL;MACA,IAAIQ,aAAa,GAAG,SAASA,aAAT,GAAyB;QAC3CF,WAAW,CAAC,EAAD,CAAX;MACD,CAFD;;MAIA,IAAIG,SAAS,GAAG,IAAI9K,SAAJ,CAAc6K,aAAd,CAAhB;MACAP,OAAO,CAACM,OAAR,GAAkBE,SAAS,CAAClK,OAAV,EAAlB;IACD;EACF;;EAED,OAAO,CAAC0J,OAAO,CAACM,OAAT,CAAP;AACD;;AAED,eAAeR,OAAf"},"metadata":{},"sourceType":"module"}