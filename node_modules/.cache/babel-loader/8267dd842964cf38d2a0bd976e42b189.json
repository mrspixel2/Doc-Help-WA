{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect, useRef } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { addGlobalMouseDownEvent } from '../utils/uiUtil';\nexport default function usePickerInput(_ref) {\n  var open = _ref.open,\n      value = _ref.value,\n      isClickOutside = _ref.isClickOutside,\n      triggerOpen = _ref.triggerOpen,\n      forwardKeyDown = _ref.forwardKeyDown,\n      blurToCancel = _ref.blurToCancel,\n      onSubmit = _ref.onSubmit,\n      onCancel = _ref.onCancel,\n      _onFocus = _ref.onFocus,\n      _onBlur = _ref.onBlur;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      typing = _useState2[0],\n      setTyping = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focused = _useState4[0],\n      setFocused = _useState4[1];\n  /**\n   * We will prevent blur to handle open event when user click outside,\n   * since this will repeat trigger `onOpenChange` event.\n   */\n\n\n  var preventBlurRef = useRef(false);\n  var valueChangedRef = useRef(false);\n  var inputProps = {\n    onMouseDown: function onMouseDown() {\n      setTyping(true);\n      triggerOpen(true);\n    },\n    onKeyDown: function onKeyDown(e) {\n      switch (e.which) {\n        case KeyCode.ENTER:\n          {\n            if (!open) {\n              triggerOpen(true);\n            } else if (onSubmit() !== false) {\n              setTyping(true);\n            }\n\n            e.preventDefault();\n            return;\n          }\n\n        case KeyCode.TAB:\n          {\n            if (typing && open && !e.shiftKey) {\n              setTyping(false);\n              e.preventDefault();\n            } else if (!typing && open) {\n              if (!forwardKeyDown(e) && e.shiftKey) {\n                setTyping(true);\n                e.preventDefault();\n              }\n            }\n\n            return;\n          }\n\n        case KeyCode.ESC:\n          {\n            setTyping(true);\n            onCancel();\n            return;\n          }\n      }\n\n      if (!open && ![KeyCode.SHIFT].includes(e.which)) {\n        triggerOpen(true);\n      } else if (!typing) {\n        // Let popup panel handle keyboard\n        forwardKeyDown(e);\n      }\n    },\n    onFocus: function onFocus(e) {\n      setTyping(true);\n      setFocused(true);\n\n      if (_onFocus) {\n        _onFocus(e);\n      }\n    },\n    onBlur: function onBlur(e) {\n      if (preventBlurRef.current || !isClickOutside(document.activeElement)) {\n        preventBlurRef.current = false;\n        return;\n      }\n\n      if (blurToCancel) {\n        setTimeout(function () {\n          if (isClickOutside(document.activeElement)) {\n            onCancel();\n          }\n        }, 0);\n      } else if (open) {\n        triggerOpen(false);\n\n        if (valueChangedRef.current) {\n          onSubmit();\n        }\n      }\n\n      setFocused(false);\n\n      if (_onBlur) {\n        _onBlur(e);\n      }\n    }\n  }; // check if value changed\n\n  useEffect(function () {\n    valueChangedRef.current = false;\n  }, [open]);\n  useEffect(function () {\n    valueChangedRef.current = true;\n  }, [value]); // Global click handler\n\n  useEffect(function () {\n    return addGlobalMouseDownEvent(function (_ref2) {\n      var target = _ref2.target;\n\n      if (open) {\n        if (!isClickOutside(target)) {\n          preventBlurRef.current = true; // Always set back in case `onBlur` prevented by user\n\n          requestAnimationFrame(function () {\n            preventBlurRef.current = false;\n          });\n        } else if (!focused) {\n          triggerOpen(false);\n        }\n      }\n    });\n  });\n  return [inputProps, {\n    focused: focused,\n    typing: typing\n  }];\n}","map":{"version":3,"names":["_slicedToArray","useState","useEffect","useRef","KeyCode","addGlobalMouseDownEvent","usePickerInput","_ref","open","value","isClickOutside","triggerOpen","forwardKeyDown","blurToCancel","onSubmit","onCancel","_onFocus","onFocus","_onBlur","onBlur","_useState","_useState2","typing","setTyping","_useState3","_useState4","focused","setFocused","preventBlurRef","valueChangedRef","inputProps","onMouseDown","onKeyDown","e","which","ENTER","preventDefault","TAB","shiftKey","ESC","SHIFT","includes","current","document","activeElement","setTimeout","_ref2","target","requestAnimationFrame"],"sources":["E:/Work/PFE/Project folder/DocHelp/node_modules/rc-picker/es/hooks/usePickerInput.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect, useRef } from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { addGlobalMouseDownEvent } from '../utils/uiUtil';\nexport default function usePickerInput(_ref) {\n  var open = _ref.open,\n      value = _ref.value,\n      isClickOutside = _ref.isClickOutside,\n      triggerOpen = _ref.triggerOpen,\n      forwardKeyDown = _ref.forwardKeyDown,\n      blurToCancel = _ref.blurToCancel,\n      onSubmit = _ref.onSubmit,\n      onCancel = _ref.onCancel,\n      _onFocus = _ref.onFocus,\n      _onBlur = _ref.onBlur;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      typing = _useState2[0],\n      setTyping = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focused = _useState4[0],\n      setFocused = _useState4[1];\n  /**\n   * We will prevent blur to handle open event when user click outside,\n   * since this will repeat trigger `onOpenChange` event.\n   */\n\n\n  var preventBlurRef = useRef(false);\n  var valueChangedRef = useRef(false);\n  var inputProps = {\n    onMouseDown: function onMouseDown() {\n      setTyping(true);\n      triggerOpen(true);\n    },\n    onKeyDown: function onKeyDown(e) {\n      switch (e.which) {\n        case KeyCode.ENTER:\n          {\n            if (!open) {\n              triggerOpen(true);\n            } else if (onSubmit() !== false) {\n              setTyping(true);\n            }\n\n            e.preventDefault();\n            return;\n          }\n\n        case KeyCode.TAB:\n          {\n            if (typing && open && !e.shiftKey) {\n              setTyping(false);\n              e.preventDefault();\n            } else if (!typing && open) {\n              if (!forwardKeyDown(e) && e.shiftKey) {\n                setTyping(true);\n                e.preventDefault();\n              }\n            }\n\n            return;\n          }\n\n        case KeyCode.ESC:\n          {\n            setTyping(true);\n            onCancel();\n            return;\n          }\n      }\n\n      if (!open && ![KeyCode.SHIFT].includes(e.which)) {\n        triggerOpen(true);\n      } else if (!typing) {\n        // Let popup panel handle keyboard\n        forwardKeyDown(e);\n      }\n    },\n    onFocus: function onFocus(e) {\n      setTyping(true);\n      setFocused(true);\n\n      if (_onFocus) {\n        _onFocus(e);\n      }\n    },\n    onBlur: function onBlur(e) {\n      if (preventBlurRef.current || !isClickOutside(document.activeElement)) {\n        preventBlurRef.current = false;\n        return;\n      }\n\n      if (blurToCancel) {\n        setTimeout(function () {\n          if (isClickOutside(document.activeElement)) {\n            onCancel();\n          }\n        }, 0);\n      } else if (open) {\n        triggerOpen(false);\n\n        if (valueChangedRef.current) {\n          onSubmit();\n        }\n      }\n\n      setFocused(false);\n\n      if (_onBlur) {\n        _onBlur(e);\n      }\n    }\n  }; // check if value changed\n\n  useEffect(function () {\n    valueChangedRef.current = false;\n  }, [open]);\n  useEffect(function () {\n    valueChangedRef.current = true;\n  }, [value]); // Global click handler\n\n  useEffect(function () {\n    return addGlobalMouseDownEvent(function (_ref2) {\n      var target = _ref2.target;\n\n      if (open) {\n        if (!isClickOutside(target)) {\n          preventBlurRef.current = true; // Always set back in case `onBlur` prevented by user\n\n          requestAnimationFrame(function () {\n            preventBlurRef.current = false;\n          });\n        } else if (!focused) {\n          triggerOpen(false);\n        }\n      }\n    });\n  });\n  return [inputProps, {\n    focused: focused,\n    typing: typing\n  }];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}