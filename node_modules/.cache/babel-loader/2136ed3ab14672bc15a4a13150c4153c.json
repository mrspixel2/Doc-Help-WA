{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n/* eslint-disable react/prefer-es6-class */\n\n/* eslint-disable prefer-promise-reject-errors */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport unsafeLifecyclesPolyfill from 'rc-util/es/unsafeLifecyclesPolyfill';\nimport AsyncValidator from 'async-validator';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport eq from 'lodash/eq';\nimport createFieldsStore from './createFieldsStore';\nimport { argumentContainer, identity, normalizeValidateRules, getValidateTriggers, getValueFromEvent, hasRules, getParams, isEmptyObject, flattenArray, supportRef } from './utils';\nimport FieldElemWrapper from './FieldElemWrapper';\nvar DEFAULT_TRIGGER = 'onChange';\n\nfunction createBaseForm() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mixins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var validateMessages = option.validateMessages,\n      onFieldsChange = option.onFieldsChange,\n      onValuesChange = option.onValuesChange,\n      _option$mapProps = option.mapProps,\n      mapProps = _option$mapProps === undefined ? identity : _option$mapProps,\n      mapPropsToFields = option.mapPropsToFields,\n      fieldNameProp = option.fieldNameProp,\n      fieldMetaProp = option.fieldMetaProp,\n      fieldDataProp = option.fieldDataProp,\n      _option$formPropName = option.formPropName,\n      formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName,\n      formName = option.name,\n      withRef = option.withRef;\n  return function decorate(WrappedComponent) {\n    var Form = createReactClass({\n      displayName: 'Form',\n      mixins: mixins,\n      getInitialState: function getInitialState() {\n        var _this = this;\n\n        var fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n        this.renderFields = {};\n        this.domFields = {}; // HACK: https://github.com/ant-design/ant-design/issues/6406\n\n        ['getFieldsValue', 'getFieldValue', 'setFieldsInitialValue', 'getFieldsError', 'getFieldError', 'isFieldValidating', 'isFieldsValidating', 'isFieldsTouched', 'isFieldTouched'].forEach(function (key) {\n          _this[key] = function () {\n            var _fieldsStore;\n\n            if (process.env.NODE_ENV !== 'production') {\n              warning(false, 'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n            }\n\n            return (_fieldsStore = _this.fieldsStore)[key].apply(_fieldsStore, arguments);\n          };\n        });\n        return {\n          submitting: false\n        };\n      },\n      componentDidMount: function componentDidMount() {\n        this.cleanUpUselessFields();\n      },\n      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n      componentDidUpdate: function componentDidUpdate() {\n        this.cleanUpUselessFields();\n      },\n      onCollectCommon: function onCollectCommon(name, action, args) {\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if (fieldMeta[action]) {\n          fieldMeta[action].apply(fieldMeta, _toConsumableArray(args));\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          var _fieldMeta$originalPr;\n\n          (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _toConsumableArray(args));\n        }\n\n        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _toConsumableArray(args)) : getValueFromEvent.apply(undefined, _toConsumableArray(args));\n\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          var valuesAll = this.fieldsStore.getAllValues();\n          var valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(function (key) {\n            return set(valuesAllSet, key, valuesAll[key]);\n          });\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), set({}, name, value), valuesAllSet);\n        }\n\n        var field = this.fieldsStore.getField(name);\n        return {\n          name: name,\n          field: _extends({}, field, {\n            value: value,\n            touched: true\n          }),\n          fieldMeta: fieldMeta\n        };\n      },\n      onCollect: function onCollect(name_, action) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        var _onCollectCommon = this.onCollectCommon(name_, action, args),\n            name = _onCollectCommon.name,\n            field = _onCollectCommon.field,\n            fieldMeta = _onCollectCommon.fieldMeta;\n\n        var validate = fieldMeta.validate;\n        this.fieldsStore.setFieldsAsDirty();\n\n        var newField = _extends({}, field, {\n          dirty: hasRules(validate)\n        });\n\n        this.setFields(_defineProperty({}, name, newField));\n      },\n      onCollectValidate: function onCollectValidate(name_, action) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        var _onCollectCommon2 = this.onCollectCommon(name_, action, args),\n            field = _onCollectCommon2.field,\n            fieldMeta = _onCollectCommon2.fieldMeta;\n\n        var newField = _extends({}, field, {\n          dirty: true\n        });\n\n        this.fieldsStore.setFieldsAsDirty();\n        this.validateFieldsInternal([newField], {\n          action: action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst\n          }\n        });\n      },\n      getCacheBind: function getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n\n        var cache = this.cachedBind[name];\n\n        if (!cache[action] || cache[action].oriFn !== fn) {\n          cache[action] = {\n            fn: fn.bind(this, name, action),\n            oriFn: fn\n          };\n        }\n\n        return cache[action].fn;\n      },\n      getFieldDecorator: function getFieldDecorator(name, fieldOption) {\n        var _this2 = this;\n\n        var props = this.getFieldProps(name, fieldOption);\n        return function (fieldElem) {\n          // We should put field in record if it is rendered\n          _this2.renderFields[name] = true;\n\n          var fieldMeta = _this2.fieldsStore.getFieldMeta(name);\n\n          var originalProps = fieldElem.props;\n\n          if (process.env.NODE_ENV !== 'production') {\n            var valuePropName = fieldMeta.valuePropName;\n            warning(!(valuePropName in originalProps), '`getFieldDecorator` will override `' + valuePropName + '`, ' + ('so please don\\'t set `' + valuePropName + '` directly ') + 'and use `setFieldsValue` to set it.');\n            var defaultValuePropName = 'default' + valuePropName[0].toUpperCase() + valuePropName.slice(1);\n            warning(!(defaultValuePropName in originalProps), '`' + defaultValuePropName + '` is invalid ' + ('for `getFieldDecorator` will set `' + valuePropName + '`,') + ' please use `option.initialValue` instead.');\n          }\n\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          var decoratedFieldElem = React.cloneElement(fieldElem, _extends({}, props, _this2.fieldsStore.getFieldValuePropValue(fieldMeta)));\n          return supportRef(fieldElem) ? decoratedFieldElem : React.createElement(FieldElemWrapper, {\n            name: name,\n            form: _this2\n          }, decoratedFieldElem);\n        };\n      },\n      getFieldProps: function getFieldProps(name) {\n        var _this3 = this;\n\n        var usersFieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(this.fieldsStore.isValidNestedFieldName(name), 'One field name cannot be part of another, e.g. `a` and `a.b`. Check field: ' + name);\n          warning(!('exclusive' in usersFieldOption), '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.');\n        }\n\n        delete this.clearedFieldMetaCache[name];\n\n        var fieldOption = _extends({\n          name: name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: []\n        }, usersFieldOption);\n\n        var rules = fieldOption.rules,\n            trigger = fieldOption.trigger,\n            _fieldOption$validate = fieldOption.validateTrigger,\n            validateTrigger = _fieldOption$validate === undefined ? trigger : _fieldOption$validate,\n            validate = fieldOption.validate;\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n\n        var inputProps = _extends({}, this.fieldsStore.getFieldValuePropValue(fieldOption), {\n          ref: this.getCacheBind(name, name + '__ref', this.saveRef)\n        });\n\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = formName ? formName + '_' + name : name;\n        }\n\n        var validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        var validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach(function (action) {\n          if (inputProps[action]) return;\n          inputProps[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);\n        }); // make sure that the value will be collect\n\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n\n        var meta = _extends({}, fieldMeta, fieldOption, {\n          validate: validateRules\n        });\n\n        this.fieldsStore.setFieldMeta(name, meta);\n\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        } // This field is rendered, record it\n\n\n        this.renderFields[name] = true;\n        return inputProps;\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        return this.instances[name];\n      },\n      getRules: function getRules(fieldMeta, action) {\n        var actionRules = fieldMeta.validate.filter(function (item) {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map(function (item) {\n          return item.rules;\n        });\n        return flattenArray(actionRules);\n      },\n      setFields: function setFields(maybeNestedFields, callback) {\n        var _this4 = this;\n\n        var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n\n        if (onFieldsChange) {\n          var changedFields = Object.keys(fields).reduce(function (acc, name) {\n            return set(acc, name, _this4.fieldsStore.getField(name));\n          }, {});\n          onFieldsChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedFields, this.fieldsStore.getNestedAllFields());\n        }\n\n        this.forceUpdate(callback);\n      },\n      setFieldsValue: function setFieldsValue(changedValues, callback) {\n        var fieldsMeta = this.fieldsStore.fieldsMeta;\n        var values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        var newFields = Object.keys(values).reduce(function (acc, name) {\n          var isRegistered = fieldsMeta[name];\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning(isRegistered, 'Cannot use `setFieldsValue` until ' + 'you use `getFieldDecorator` or `getFieldProps` to register it.');\n          }\n\n          if (isRegistered) {\n            var value = values[name];\n            acc[name] = {\n              value: value\n            };\n          }\n\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n\n        if (onValuesChange) {\n          var allValues = this.fieldsStore.getAllValues();\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedValues, allValues);\n        }\n      },\n      saveRef: function saveRef(name, _, component) {\n        if (!component) {\n          var _fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n          if (!_fieldMeta.preserve) {\n            // after destroy, delete data\n            this.clearedFieldMetaCache[name] = {\n              field: this.fieldsStore.getField(name),\n              meta: _fieldMeta\n            };\n            this.clearField(name);\n          }\n\n          delete this.domFields[name];\n          return;\n        }\n\n        this.domFields[name] = true;\n        this.recoverClearedField(name);\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if (fieldMeta) {\n          var ref = fieldMeta.ref;\n\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error('can not set ref string for ' + name);\n            } else if (typeof ref === 'function') {\n              ref(component);\n            } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n              ref.current = component;\n            }\n          }\n        }\n\n        this.instances[name] = component;\n      },\n      cleanUpUselessFields: function cleanUpUselessFields() {\n        var _this5 = this;\n\n        var fieldList = this.fieldsStore.getAllFieldsName();\n        var removedList = fieldList.filter(function (field) {\n          var fieldMeta = _this5.fieldsStore.getFieldMeta(field);\n\n          return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;\n        });\n\n        if (removedList.length) {\n          removedList.forEach(this.clearField);\n        }\n\n        this.renderFields = {};\n      },\n      clearField: function clearField(name) {\n        this.fieldsStore.clearField(name);\n        delete this.instances[name];\n        delete this.cachedBind[name];\n      },\n      resetFields: function resetFields(ns) {\n        var _this6 = this;\n\n        var newFields = this.fieldsStore.resetFields(ns);\n\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n\n        if (ns) {\n          var names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(function (name) {\n            return delete _this6.clearedFieldMetaCache[name];\n          });\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n      recoverClearedField: function recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields(_defineProperty({}, name, this.clearedFieldMetaCache[name].field));\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {\n        var _this7 = this;\n\n        var fieldNames = _ref.fieldNames,\n            action = _ref.action,\n            _ref$options = _ref.options,\n            options = _ref$options === undefined ? {} : _ref$options;\n        var allRules = {};\n        var allValues = {};\n        var allFields = {};\n        var alreadyErrors = {};\n        fields.forEach(function (field) {\n          var name = field.name;\n\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, {\n                errors: field.errors\n              });\n            }\n\n            return;\n          }\n\n          var fieldMeta = _this7.fieldsStore.getFieldMeta(name);\n\n          var newField = _extends({}, field);\n\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = _this7.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields); // in case normalize\n\n        Object.keys(allValues).forEach(function (f) {\n          allValues[f] = _this7.fieldsStore.getFieldValue(f);\n        });\n\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));\n          return;\n        }\n\n        var validator = new AsyncValidator(allRules);\n\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n\n        validator.validate(allValues, options, function (errors) {\n          var errorsGroup = _extends({}, alreadyErrors);\n\n          if (errors && errors.length) {\n            errors.forEach(function (e) {\n              var errorFieldName = e.field;\n              var fieldName = errorFieldName; // Handle using array validation rule.\n              // ref: https://github.com/ant-design/ant-design/issues/14275\n\n              Object.keys(allRules).some(function (ruleFieldName) {\n                var rules = allRules[ruleFieldName] || []; // Exist if match rule\n\n                if (ruleFieldName === errorFieldName) {\n                  fieldName = ruleFieldName;\n                  return true;\n                } // Skip if not match array type\n\n\n                if (rules.every(function (_ref2) {\n                  var type = _ref2.type;\n                  return type !== 'array';\n                }) || errorFieldName.indexOf(ruleFieldName + '.') !== 0) {\n                  return false;\n                } // Exist if match the field name\n\n\n                var restPath = errorFieldName.slice(ruleFieldName.length + 1);\n\n                if (/^\\d+$/.test(restPath)) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                return false;\n              });\n              var field = get(errorsGroup, fieldName);\n\n              if (typeof field !== 'object' || Array.isArray(field)) {\n                set(errorsGroup, fieldName, {\n                  errors: []\n                });\n              }\n\n              var fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n\n          var expired = [];\n          var nowAllFields = {};\n          Object.keys(allRules).forEach(function (name) {\n            var fieldErrors = get(errorsGroup, name);\n\n            var nowField = _this7.fieldsStore.getField(name); // avoid concurrency problems\n\n\n            if (!eq(nowField.value, allValues[name])) {\n              expired.push({\n                name: name\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n\n          _this7.setFields(nowAllFields);\n\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(function (_ref3) {\n                var name = _ref3.name;\n                var fieldErrors = [{\n                  message: name + ' need to revalidate',\n                  field: name\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors\n                });\n              });\n            }\n\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));\n          }\n        });\n      },\n      validateFields: function validateFields(ns, opt, cb) {\n        var _this8 = this;\n\n        var pending = new Promise(function (resolve, reject) {\n          var _getParams = getParams(ns, opt, cb),\n              names = _getParams.names,\n              options = _getParams.options;\n\n          var _getParams2 = getParams(ns, opt, cb),\n              callback = _getParams2.callback;\n\n          if (!callback || typeof callback === 'function') {\n            var oldCb = callback;\n\n            callback = function callback(errors, values) {\n              if (oldCb) {\n                oldCb(errors, values);\n              }\n\n              if (errors) {\n                reject({\n                  errors: errors,\n                  values: values\n                });\n              } else {\n                resolve(values);\n              }\n            };\n          }\n\n          var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();\n          var fields = fieldNames.filter(function (name) {\n            var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n\n            return hasRules(fieldMeta.validate);\n          }).map(function (name) {\n            var field = _this8.fieldsStore.getField(name);\n\n            field.value = _this8.fieldsStore.getFieldValue(name);\n            return field;\n          });\n\n          if (!fields.length) {\n            callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));\n            return;\n          }\n\n          if (!('firstFields' in options)) {\n            options.firstFields = fieldNames.filter(function (name) {\n              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n\n              return !!fieldMeta.validateFirst;\n            });\n          }\n\n          _this8.validateFieldsInternal(fields, {\n            fieldNames: fieldNames,\n            options: options\n          }, callback);\n        });\n        pending['catch'](function (e) {\n          // eslint-disable-next-line no-console\n          if (console.error && process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.error(e);\n          }\n\n          return e;\n        });\n        return pending;\n      },\n      isSubmitting: function isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`isSubmitting` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n\n        return this.state.submitting;\n      },\n      submit: function submit(callback) {\n        var _this9 = this;\n\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`submit` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n\n        var fn = function fn() {\n          _this9.setState({\n            submitting: false\n          });\n        };\n\n        this.setState({\n          submitting: true\n        });\n        callback(fn);\n      },\n      render: function render() {\n        var _props = this.props,\n            wrappedComponentRef = _props.wrappedComponentRef,\n            restProps = _objectWithoutProperties(_props, ['wrappedComponentRef']); // eslint-disable-line\n\n\n        var formProps = _defineProperty({}, formPropName, this.getForm());\n\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(false, '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n          }\n\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n\n        var props = mapProps.call(this, _extends({}, formProps, restProps));\n        return React.createElement(WrappedComponent, props);\n      }\n    });\n    return argumentContainer(unsafeLifecyclesPolyfill(Form), WrappedComponent);\n  };\n}\n\nexport default createBaseForm;","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","_extends","_toConsumableArray","React","createReactClass","unsafeLifecyclesPolyfill","AsyncValidator","warning","get","set","eq","createFieldsStore","argumentContainer","identity","normalizeValidateRules","getValidateTriggers","getValueFromEvent","hasRules","getParams","isEmptyObject","flattenArray","supportRef","FieldElemWrapper","DEFAULT_TRIGGER","createBaseForm","option","arguments","length","undefined","mixins","validateMessages","onFieldsChange","onValuesChange","_option$mapProps","mapProps","mapPropsToFields","fieldNameProp","fieldMetaProp","fieldDataProp","_option$formPropName","formPropName","formName","name","withRef","decorate","WrappedComponent","Form","displayName","getInitialState","_this","fields","props","fieldsStore","instances","cachedBind","clearedFieldMetaCache","renderFields","domFields","forEach","key","_fieldsStore","process","env","NODE_ENV","apply","submitting","componentDidMount","cleanUpUselessFields","componentWillReceiveProps","nextProps","updateFields","componentDidUpdate","onCollectCommon","action","args","fieldMeta","getFieldMeta","originalProps","_fieldMeta$originalPr","value","getFieldValue","valuesAll","getAllValues","valuesAllSet","Object","keys","getForm","field","getField","touched","onCollect","name_","_len","Array","_key","_onCollectCommon","validate","setFieldsAsDirty","newField","dirty","setFields","onCollectValidate","_len2","_key2","_onCollectCommon2","validateFieldsInternal","options","firstFields","validateFirst","getCacheBind","fn","cache","oriFn","bind","getFieldDecorator","fieldOption","_this2","getFieldProps","fieldElem","valuePropName","defaultValuePropName","toUpperCase","slice","ref","decoratedFieldElem","cloneElement","getFieldValuePropValue","createElement","form","_this3","usersFieldOption","Error","isValidNestedFieldName","trigger","rules","_fieldOption$validate","validateTrigger","initialValue","inputProps","saveRef","validateRules","validateTriggers","indexOf","meta","setFieldMeta","getFieldInstance","getRules","actionRules","filter","item","map","maybeNestedFields","callback","_this4","flattenRegisteredFields","changedFields","reduce","acc","getNestedAllFields","forceUpdate","setFieldsValue","changedValues","fieldsMeta","values","newFields","isRegistered","allValues","_","component","_fieldMeta","preserve","clearField","recoverClearedField","prototype","hasOwnProperty","call","current","_this5","fieldList","getAllFieldsName","removedList","resetFields","ns","_this6","names","isArray","_ref","_this7","fieldNames","_ref$options","allRules","allFields","alreadyErrors","force","errors","validating","f","getFieldsValue","validator","messages","errorsGroup","e","errorFieldName","fieldName","some","ruleFieldName","every","_ref2","type","restPath","test","fieldErrors","concat","push","expired","nowAllFields","nowField","_ref3","message","validateFields","opt","cb","_this8","pending","Promise","resolve","reject","_getParams","_getParams2","oldCb","getValidFieldsFullName","getValidFieldsName","console","error","isSubmitting","state","submit","_this9","setState","render","_props","wrappedComponentRef","restProps","formProps"],"sources":["E:/Work/PFE/Project folder/DocHelp/node_modules/rc-form/es/createBaseForm.js"],"sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n/* eslint-disable react/prefer-es6-class */\n/* eslint-disable prefer-promise-reject-errors */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport unsafeLifecyclesPolyfill from 'rc-util/es/unsafeLifecyclesPolyfill';\nimport AsyncValidator from 'async-validator';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport eq from 'lodash/eq';\nimport createFieldsStore from './createFieldsStore';\nimport { argumentContainer, identity, normalizeValidateRules, getValidateTriggers, getValueFromEvent, hasRules, getParams, isEmptyObject, flattenArray, supportRef } from './utils';\nimport FieldElemWrapper from './FieldElemWrapper';\n\nvar DEFAULT_TRIGGER = 'onChange';\n\nfunction createBaseForm() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mixins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var validateMessages = option.validateMessages,\n      onFieldsChange = option.onFieldsChange,\n      onValuesChange = option.onValuesChange,\n      _option$mapProps = option.mapProps,\n      mapProps = _option$mapProps === undefined ? identity : _option$mapProps,\n      mapPropsToFields = option.mapPropsToFields,\n      fieldNameProp = option.fieldNameProp,\n      fieldMetaProp = option.fieldMetaProp,\n      fieldDataProp = option.fieldDataProp,\n      _option$formPropName = option.formPropName,\n      formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName,\n      formName = option.name,\n      withRef = option.withRef;\n\n\n  return function decorate(WrappedComponent) {\n    var Form = createReactClass({\n      displayName: 'Form',\n\n      mixins: mixins,\n\n      getInitialState: function getInitialState() {\n        var _this = this;\n\n        var fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n\n        this.renderFields = {};\n        this.domFields = {};\n\n        // HACK: https://github.com/ant-design/ant-design/issues/6406\n        ['getFieldsValue', 'getFieldValue', 'setFieldsInitialValue', 'getFieldsError', 'getFieldError', 'isFieldValidating', 'isFieldsValidating', 'isFieldsTouched', 'isFieldTouched'].forEach(function (key) {\n          _this[key] = function () {\n            var _fieldsStore;\n\n            if (process.env.NODE_ENV !== 'production') {\n              warning(false, 'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n            }\n            return (_fieldsStore = _this.fieldsStore)[key].apply(_fieldsStore, arguments);\n          };\n        });\n\n        return {\n          submitting: false\n        };\n      },\n      componentDidMount: function componentDidMount() {\n        this.cleanUpUselessFields();\n      },\n      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n      componentDidUpdate: function componentDidUpdate() {\n        this.cleanUpUselessFields();\n      },\n      onCollectCommon: function onCollectCommon(name, action, args) {\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta[action]) {\n          fieldMeta[action].apply(fieldMeta, _toConsumableArray(args));\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          var _fieldMeta$originalPr;\n\n          (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _toConsumableArray(args));\n        }\n        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _toConsumableArray(args)) : getValueFromEvent.apply(undefined, _toConsumableArray(args));\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          var valuesAll = this.fieldsStore.getAllValues();\n          var valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(function (key) {\n            return set(valuesAllSet, key, valuesAll[key]);\n          });\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), set({}, name, value), valuesAllSet);\n        }\n        var field = this.fieldsStore.getField(name);\n        return { name: name, field: _extends({}, field, { value: value, touched: true }), fieldMeta: fieldMeta };\n      },\n      onCollect: function onCollect(name_, action) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        var _onCollectCommon = this.onCollectCommon(name_, action, args),\n            name = _onCollectCommon.name,\n            field = _onCollectCommon.field,\n            fieldMeta = _onCollectCommon.fieldMeta;\n\n        var validate = fieldMeta.validate;\n\n\n        this.fieldsStore.setFieldsAsDirty();\n\n        var newField = _extends({}, field, {\n          dirty: hasRules(validate)\n        });\n        this.setFields(_defineProperty({}, name, newField));\n      },\n      onCollectValidate: function onCollectValidate(name_, action) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        var _onCollectCommon2 = this.onCollectCommon(name_, action, args),\n            field = _onCollectCommon2.field,\n            fieldMeta = _onCollectCommon2.fieldMeta;\n\n        var newField = _extends({}, field, {\n          dirty: true\n        });\n\n        this.fieldsStore.setFieldsAsDirty();\n\n        this.validateFieldsInternal([newField], {\n          action: action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst\n          }\n        });\n      },\n      getCacheBind: function getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n        var cache = this.cachedBind[name];\n        if (!cache[action] || cache[action].oriFn !== fn) {\n          cache[action] = {\n            fn: fn.bind(this, name, action),\n            oriFn: fn\n          };\n        }\n        return cache[action].fn;\n      },\n      getFieldDecorator: function getFieldDecorator(name, fieldOption) {\n        var _this2 = this;\n\n        var props = this.getFieldProps(name, fieldOption);\n        return function (fieldElem) {\n          // We should put field in record if it is rendered\n          _this2.renderFields[name] = true;\n\n          var fieldMeta = _this2.fieldsStore.getFieldMeta(name);\n          var originalProps = fieldElem.props;\n          if (process.env.NODE_ENV !== 'production') {\n            var valuePropName = fieldMeta.valuePropName;\n            warning(!(valuePropName in originalProps), '`getFieldDecorator` will override `' + valuePropName + '`, ' + ('so please don\\'t set `' + valuePropName + '` directly ') + 'and use `setFieldsValue` to set it.');\n            var defaultValuePropName = 'default' + valuePropName[0].toUpperCase() + valuePropName.slice(1);\n            warning(!(defaultValuePropName in originalProps), '`' + defaultValuePropName + '` is invalid ' + ('for `getFieldDecorator` will set `' + valuePropName + '`,') + ' please use `option.initialValue` instead.');\n          }\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          var decoratedFieldElem = React.cloneElement(fieldElem, _extends({}, props, _this2.fieldsStore.getFieldValuePropValue(fieldMeta)));\n          return supportRef(fieldElem) ? decoratedFieldElem : React.createElement(\n            FieldElemWrapper,\n            { name: name, form: _this2 },\n            decoratedFieldElem\n          );\n        };\n      },\n      getFieldProps: function getFieldProps(name) {\n        var _this3 = this;\n\n        var usersFieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          warning(this.fieldsStore.isValidNestedFieldName(name), 'One field name cannot be part of another, e.g. `a` and `a.b`. Check field: ' + name);\n          warning(!('exclusive' in usersFieldOption), '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.');\n        }\n\n        delete this.clearedFieldMetaCache[name];\n\n        var fieldOption = _extends({\n          name: name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: []\n        }, usersFieldOption);\n\n        var rules = fieldOption.rules,\n            trigger = fieldOption.trigger,\n            _fieldOption$validate = fieldOption.validateTrigger,\n            validateTrigger = _fieldOption$validate === undefined ? trigger : _fieldOption$validate,\n            validate = fieldOption.validate;\n\n\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n\n        var inputProps = _extends({}, this.fieldsStore.getFieldValuePropValue(fieldOption), {\n          ref: this.getCacheBind(name, name + '__ref', this.saveRef)\n        });\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = formName ? formName + '_' + name : name;\n        }\n\n        var validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        var validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach(function (action) {\n          if (inputProps[action]) return;\n          inputProps[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);\n        });\n\n        // make sure that the value will be collect\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n\n        var meta = _extends({}, fieldMeta, fieldOption, {\n          validate: validateRules\n        });\n        this.fieldsStore.setFieldMeta(name, meta);\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        }\n\n        // This field is rendered, record it\n        this.renderFields[name] = true;\n\n        return inputProps;\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        return this.instances[name];\n      },\n      getRules: function getRules(fieldMeta, action) {\n        var actionRules = fieldMeta.validate.filter(function (item) {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map(function (item) {\n          return item.rules;\n        });\n        return flattenArray(actionRules);\n      },\n      setFields: function setFields(maybeNestedFields, callback) {\n        var _this4 = this;\n\n        var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n        if (onFieldsChange) {\n          var changedFields = Object.keys(fields).reduce(function (acc, name) {\n            return set(acc, name, _this4.fieldsStore.getField(name));\n          }, {});\n          onFieldsChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedFields, this.fieldsStore.getNestedAllFields());\n        }\n        this.forceUpdate(callback);\n      },\n      setFieldsValue: function setFieldsValue(changedValues, callback) {\n        var fieldsMeta = this.fieldsStore.fieldsMeta;\n\n        var values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        var newFields = Object.keys(values).reduce(function (acc, name) {\n          var isRegistered = fieldsMeta[name];\n          if (process.env.NODE_ENV !== 'production') {\n            warning(isRegistered, 'Cannot use `setFieldsValue` until ' + 'you use `getFieldDecorator` or `getFieldProps` to register it.');\n          }\n          if (isRegistered) {\n            var value = values[name];\n            acc[name] = {\n              value: value\n            };\n          }\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n        if (onValuesChange) {\n          var allValues = this.fieldsStore.getAllValues();\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedValues, allValues);\n        }\n      },\n      saveRef: function saveRef(name, _, component) {\n        if (!component) {\n          var _fieldMeta = this.fieldsStore.getFieldMeta(name);\n          if (!_fieldMeta.preserve) {\n            // after destroy, delete data\n            this.clearedFieldMetaCache[name] = {\n              field: this.fieldsStore.getField(name),\n              meta: _fieldMeta\n            };\n            this.clearField(name);\n          }\n          delete this.domFields[name];\n          return;\n        }\n        this.domFields[name] = true;\n        this.recoverClearedField(name);\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta) {\n          var ref = fieldMeta.ref;\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error('can not set ref string for ' + name);\n            } else if (typeof ref === 'function') {\n              ref(component);\n            } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n              ref.current = component;\n            }\n          }\n        }\n        this.instances[name] = component;\n      },\n      cleanUpUselessFields: function cleanUpUselessFields() {\n        var _this5 = this;\n\n        var fieldList = this.fieldsStore.getAllFieldsName();\n        var removedList = fieldList.filter(function (field) {\n          var fieldMeta = _this5.fieldsStore.getFieldMeta(field);\n          return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;\n        });\n        if (removedList.length) {\n          removedList.forEach(this.clearField);\n        }\n        this.renderFields = {};\n      },\n      clearField: function clearField(name) {\n        this.fieldsStore.clearField(name);\n        delete this.instances[name];\n        delete this.cachedBind[name];\n      },\n      resetFields: function resetFields(ns) {\n        var _this6 = this;\n\n        var newFields = this.fieldsStore.resetFields(ns);\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n        if (ns) {\n          var names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(function (name) {\n            return delete _this6.clearedFieldMetaCache[name];\n          });\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n      recoverClearedField: function recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields(_defineProperty({}, name, this.clearedFieldMetaCache[name].field));\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {\n        var _this7 = this;\n\n        var fieldNames = _ref.fieldNames,\n            action = _ref.action,\n            _ref$options = _ref.options,\n            options = _ref$options === undefined ? {} : _ref$options;\n\n        var allRules = {};\n        var allValues = {};\n        var allFields = {};\n        var alreadyErrors = {};\n        fields.forEach(function (field) {\n          var name = field.name;\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, { errors: field.errors });\n            }\n            return;\n          }\n          var fieldMeta = _this7.fieldsStore.getFieldMeta(name);\n          var newField = _extends({}, field);\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = _this7.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields);\n        // in case normalize\n        Object.keys(allValues).forEach(function (f) {\n          allValues[f] = _this7.fieldsStore.getFieldValue(f);\n        });\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));\n          return;\n        }\n        var validator = new AsyncValidator(allRules);\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n        validator.validate(allValues, options, function (errors) {\n          var errorsGroup = _extends({}, alreadyErrors);\n          if (errors && errors.length) {\n            errors.forEach(function (e) {\n              var errorFieldName = e.field;\n              var fieldName = errorFieldName;\n\n              // Handle using array validation rule.\n              // ref: https://github.com/ant-design/ant-design/issues/14275\n              Object.keys(allRules).some(function (ruleFieldName) {\n                var rules = allRules[ruleFieldName] || [];\n\n                // Exist if match rule\n                if (ruleFieldName === errorFieldName) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                // Skip if not match array type\n                if (rules.every(function (_ref2) {\n                  var type = _ref2.type;\n                  return type !== 'array';\n                }) || errorFieldName.indexOf(ruleFieldName + '.') !== 0) {\n                  return false;\n                }\n\n                // Exist if match the field name\n                var restPath = errorFieldName.slice(ruleFieldName.length + 1);\n                if (/^\\d+$/.test(restPath)) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                return false;\n              });\n\n              var field = get(errorsGroup, fieldName);\n              if (typeof field !== 'object' || Array.isArray(field)) {\n                set(errorsGroup, fieldName, { errors: [] });\n              }\n              var fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n          var expired = [];\n          var nowAllFields = {};\n          Object.keys(allRules).forEach(function (name) {\n            var fieldErrors = get(errorsGroup, name);\n            var nowField = _this7.fieldsStore.getField(name);\n            // avoid concurrency problems\n            if (!eq(nowField.value, allValues[name])) {\n              expired.push({\n                name: name\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n          _this7.setFields(nowAllFields);\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(function (_ref3) {\n                var name = _ref3.name;\n\n                var fieldErrors = [{\n                  message: name + ' need to revalidate',\n                  field: name\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors\n                });\n              });\n            }\n\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));\n          }\n        });\n      },\n      validateFields: function validateFields(ns, opt, cb) {\n        var _this8 = this;\n\n        var pending = new Promise(function (resolve, reject) {\n          var _getParams = getParams(ns, opt, cb),\n              names = _getParams.names,\n              options = _getParams.options;\n\n          var _getParams2 = getParams(ns, opt, cb),\n              callback = _getParams2.callback;\n\n          if (!callback || typeof callback === 'function') {\n            var oldCb = callback;\n            callback = function callback(errors, values) {\n              if (oldCb) {\n                oldCb(errors, values);\n              }\n              if (errors) {\n                reject({ errors: errors, values: values });\n              } else {\n                resolve(values);\n              }\n            };\n          }\n          var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();\n          var fields = fieldNames.filter(function (name) {\n            var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n            return hasRules(fieldMeta.validate);\n          }).map(function (name) {\n            var field = _this8.fieldsStore.getField(name);\n            field.value = _this8.fieldsStore.getFieldValue(name);\n            return field;\n          });\n          if (!fields.length) {\n            callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));\n            return;\n          }\n          if (!('firstFields' in options)) {\n            options.firstFields = fieldNames.filter(function (name) {\n              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n              return !!fieldMeta.validateFirst;\n            });\n          }\n          _this8.validateFieldsInternal(fields, {\n            fieldNames: fieldNames,\n            options: options\n          }, callback);\n        });\n        pending['catch'](function (e) {\n          // eslint-disable-next-line no-console\n          if (console.error && process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.error(e);\n          }\n          return e;\n        });\n        return pending;\n      },\n      isSubmitting: function isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`isSubmitting` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n        return this.state.submitting;\n      },\n      submit: function submit(callback) {\n        var _this9 = this;\n\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`submit` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n        var fn = function fn() {\n          _this9.setState({\n            submitting: false\n          });\n        };\n        this.setState({\n          submitting: true\n        });\n        callback(fn);\n      },\n      render: function render() {\n        var _props = this.props,\n            wrappedComponentRef = _props.wrappedComponentRef,\n            restProps = _objectWithoutProperties(_props, ['wrappedComponentRef']); // eslint-disable-line\n\n\n        var formProps = _defineProperty({}, formPropName, this.getForm());\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(false, '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n          }\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n        var props = mapProps.call(this, _extends({}, formProps, restProps));\n        return React.createElement(WrappedComponent, props);\n      }\n    });\n\n    return argumentContainer(unsafeLifecyclesPolyfill(Form), WrappedComponent);\n  };\n}\n\nexport default createBaseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}