{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule encodeEntityRanges\n * @format\n * \n */\n'use strict';\n\nvar DraftStringKey = require('./DraftStringKey');\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar strlen = UnicodeUtils.strlen;\n/**\n * Convert to UTF-8 character counts for storage.\n */\n\nfunction encodeEntityRanges(block, storageMap) {\n  var encoded = [];\n  block.findEntityRanges(function (character) {\n    return !!character.getEntity();\n  }, function (\n  /*number*/\n  start,\n  /*number*/\n  end) {\n    var text = block.getText();\n    var key = block.getEntityAt(start);\n    encoded.push({\n      offset: strlen(text.slice(0, start)),\n      length: strlen(text.slice(start, end)),\n      // Encode the key as a number for range storage.\n      key: Number(storageMap[DraftStringKey.stringify(key)])\n    });\n  });\n  return encoded;\n}\n\nmodule.exports = encodeEntityRanges;","map":{"version":3,"names":["DraftStringKey","require","UnicodeUtils","strlen","encodeEntityRanges","block","storageMap","encoded","findEntityRanges","character","getEntity","start","end","text","getText","key","getEntityAt","push","offset","slice","length","Number","stringify","module","exports"],"sources":["E:/Work/PFE/Project folder/DocHelp/node_modules/draft-js/lib/encodeEntityRanges.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule encodeEntityRanges\n * @format\n * \n */\n\n'use strict';\n\nvar DraftStringKey = require('./DraftStringKey');\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar strlen = UnicodeUtils.strlen;\n\n/**\n * Convert to UTF-8 character counts for storage.\n */\n\nfunction encodeEntityRanges(block, storageMap) {\n  var encoded = [];\n  block.findEntityRanges(function (character) {\n    return !!character.getEntity();\n  }, function ( /*number*/start, /*number*/end) {\n    var text = block.getText();\n    var key = block.getEntityAt(start);\n    encoded.push({\n      offset: strlen(text.slice(0, start)),\n      length: strlen(text.slice(start, end)),\n      // Encode the key as a number for range storage.\n      key: Number(storageMap[DraftStringKey.stringify(key)])\n    });\n  });\n  return encoded;\n}\n\nmodule.exports = encodeEntityRanges;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAA1B;;AAEA,IAAIE,MAAM,GAAGD,YAAY,CAACC,MAA1B;AAEA;AACA;AACA;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,UAAnC,EAA+C;EAC7C,IAAIC,OAAO,GAAG,EAAd;EACAF,KAAK,CAACG,gBAAN,CAAuB,UAAUC,SAAV,EAAqB;IAC1C,OAAO,CAAC,CAACA,SAAS,CAACC,SAAV,EAAT;EACD,CAFD,EAEG;EAAW;EAAUC,KAArB;EAA4B;EAAUC,GAAtC,EAA2C;IAC5C,IAAIC,IAAI,GAAGR,KAAK,CAACS,OAAN,EAAX;IACA,IAAIC,GAAG,GAAGV,KAAK,CAACW,WAAN,CAAkBL,KAAlB,CAAV;IACAJ,OAAO,CAACU,IAAR,CAAa;MACXC,MAAM,EAAEf,MAAM,CAACU,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcR,KAAd,CAAD,CADH;MAEXS,MAAM,EAAEjB,MAAM,CAACU,IAAI,CAACM,KAAL,CAAWR,KAAX,EAAkBC,GAAlB,CAAD,CAFH;MAGX;MACAG,GAAG,EAAEM,MAAM,CAACf,UAAU,CAACN,cAAc,CAACsB,SAAf,CAAyBP,GAAzB,CAAD,CAAX;IAJA,CAAb;EAMD,CAXD;EAYA,OAAOR,OAAP;AACD;;AAEDgB,MAAM,CAACC,OAAP,GAAiBpB,kBAAjB"},"metadata":{},"sourceType":"script"}