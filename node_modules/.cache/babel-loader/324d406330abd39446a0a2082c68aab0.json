{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { convertChildrenToData } from '../utils/legacyUtil';\nvar MAX_WARNING_TIMES = 10;\n\nfunction parseSimpleTreeData(treeData, _ref) {\n  var id = _ref.id,\n      pId = _ref.pId,\n      rootPId = _ref.rootPId;\n  var keyNodes = {};\n  var rootNodeList = []; // Fill in the map\n\n  var nodeList = treeData.map(function (node) {\n    var clone = _objectSpread({}, node);\n\n    var key = clone[id];\n    keyNodes[key] = clone;\n    clone.key = clone.key || key;\n    return clone;\n  }); // Connect tree\n\n  nodeList.forEach(function (node) {\n    var parentKey = node[pId];\n    var parent = keyNodes[parentKey]; // Fill parent\n\n    if (parent) {\n      parent.children = parent.children || [];\n      parent.children.push(node);\n    } // Fill root tree node\n\n\n    if (parentKey === rootPId || !parent && rootPId === null) {\n      rootNodeList.push(node);\n    }\n  });\n  return rootNodeList;\n}\n/**\n * Format `treeData` with `value` & `key` which is used for calculation\n */\n\n\nfunction formatTreeData(treeData, getLabelProp) {\n  var warningTimes = 0;\n  var valueSet = new Set();\n\n  function dig(dataNodes) {\n    return (dataNodes || []).map(function (node) {\n      var key = node.key,\n          value = node.value,\n          children = node.children,\n          rest = _objectWithoutProperties(node, [\"key\", \"value\", \"children\"]);\n\n      var mergedValue = 'value' in node ? value : key;\n\n      var dataNode = _objectSpread(_objectSpread({}, rest), {}, {\n        key: key !== null && key !== undefined ? key : mergedValue,\n        value: mergedValue,\n        title: getLabelProp(node)\n      }); // Check `key` & `value` and warning user\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (key !== null && key !== undefined && value !== undefined && String(key) !== String(value) && warningTimes < MAX_WARNING_TIMES) {\n          warningTimes += 1;\n          warning(false, \"`key` or `value` with TreeNode must be the same or you can remove one of them. key: \".concat(key, \", value: \").concat(value, \".\"));\n        }\n\n        warning(!valueSet.has(value), \"Same `value` exist in the tree: \".concat(value));\n        valueSet.add(value);\n      }\n\n      if ('children' in node) {\n        dataNode.children = dig(children);\n      }\n\n      return dataNode;\n    });\n  }\n\n  return dig(treeData);\n}\n/**\n * Convert `treeData` or `children` into formatted `treeData`.\n * Will not re-calculate if `treeData` or `children` not change.\n */\n\n\nexport default function useTreeData(treeData, children, _ref2) {\n  var getLabelProp = _ref2.getLabelProp,\n      simpleMode = _ref2.simpleMode;\n  var cacheRef = React.useRef({});\n\n  if (treeData) {\n    cacheRef.current.formatTreeData = cacheRef.current.treeData === treeData ? cacheRef.current.formatTreeData : formatTreeData(simpleMode ? parseSimpleTreeData(treeData, _objectSpread({\n      id: 'id',\n      pId: 'pId',\n      rootPId: null\n    }, simpleMode !== true ? simpleMode : {})) : treeData, getLabelProp);\n    cacheRef.current.treeData = treeData;\n  } else {\n    cacheRef.current.formatTreeData = cacheRef.current.children === children ? cacheRef.current.formatTreeData : formatTreeData(convertChildrenToData(children), getLabelProp);\n  }\n\n  return cacheRef.current.formatTreeData;\n}","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","warning","convertChildrenToData","MAX_WARNING_TIMES","parseSimpleTreeData","treeData","_ref","id","pId","rootPId","keyNodes","rootNodeList","nodeList","map","node","clone","parentKey","parent","children","formatTreeData","getLabelProp","warningTimes","valueSet","Set","dig","dataNodes","value","rest","mergedValue","dataNode","undefined","title","process","env","NODE_ENV","String","concat","has","add","useTreeData","_ref2","simpleMode","cacheRef","useRef","current"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/node_modules/rc-tree-select/es/hooks/useTreeData.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { convertChildrenToData } from '../utils/legacyUtil';\nvar MAX_WARNING_TIMES = 10;\n\nfunction parseSimpleTreeData(treeData, _ref) {\n  var id = _ref.id,\n      pId = _ref.pId,\n      rootPId = _ref.rootPId;\n  var keyNodes = {};\n  var rootNodeList = []; // Fill in the map\n\n  var nodeList = treeData.map(function (node) {\n    var clone = _objectSpread({}, node);\n\n    var key = clone[id];\n    keyNodes[key] = clone;\n    clone.key = clone.key || key;\n    return clone;\n  }); // Connect tree\n\n  nodeList.forEach(function (node) {\n    var parentKey = node[pId];\n    var parent = keyNodes[parentKey]; // Fill parent\n\n    if (parent) {\n      parent.children = parent.children || [];\n      parent.children.push(node);\n    } // Fill root tree node\n\n\n    if (parentKey === rootPId || !parent && rootPId === null) {\n      rootNodeList.push(node);\n    }\n  });\n  return rootNodeList;\n}\n/**\n * Format `treeData` with `value` & `key` which is used for calculation\n */\n\n\nfunction formatTreeData(treeData, getLabelProp) {\n  var warningTimes = 0;\n  var valueSet = new Set();\n\n  function dig(dataNodes) {\n    return (dataNodes || []).map(function (node) {\n      var key = node.key,\n          value = node.value,\n          children = node.children,\n          rest = _objectWithoutProperties(node, [\"key\", \"value\", \"children\"]);\n\n      var mergedValue = 'value' in node ? value : key;\n\n      var dataNode = _objectSpread(_objectSpread({}, rest), {}, {\n        key: key !== null && key !== undefined ? key : mergedValue,\n        value: mergedValue,\n        title: getLabelProp(node)\n      }); // Check `key` & `value` and warning user\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (key !== null && key !== undefined && value !== undefined && String(key) !== String(value) && warningTimes < MAX_WARNING_TIMES) {\n          warningTimes += 1;\n          warning(false, \"`key` or `value` with TreeNode must be the same or you can remove one of them. key: \".concat(key, \", value: \").concat(value, \".\"));\n        }\n\n        warning(!valueSet.has(value), \"Same `value` exist in the tree: \".concat(value));\n        valueSet.add(value);\n      }\n\n      if ('children' in node) {\n        dataNode.children = dig(children);\n      }\n\n      return dataNode;\n    });\n  }\n\n  return dig(treeData);\n}\n/**\n * Convert `treeData` or `children` into formatted `treeData`.\n * Will not re-calculate if `treeData` or `children` not change.\n */\n\n\nexport default function useTreeData(treeData, children, _ref2) {\n  var getLabelProp = _ref2.getLabelProp,\n      simpleMode = _ref2.simpleMode;\n  var cacheRef = React.useRef({});\n\n  if (treeData) {\n    cacheRef.current.formatTreeData = cacheRef.current.treeData === treeData ? cacheRef.current.formatTreeData : formatTreeData(simpleMode ? parseSimpleTreeData(treeData, _objectSpread({\n      id: 'id',\n      pId: 'pId',\n      rootPId: null\n    }, simpleMode !== true ? simpleMode : {})) : treeData, getLabelProp);\n    cacheRef.current.treeData = treeData;\n  } else {\n    cacheRef.current.formatTreeData = cacheRef.current.children === children ? cacheRef.current.formatTreeData : formatTreeData(convertChildrenToData(children), getLabelProp);\n  }\n\n  return cacheRef.current.formatTreeData;\n}"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,oDAArC;AACA,OAAOC,eAAP,MAA4B,2CAA5B;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;EAAgC,IAAIG,MAAM,CAACC,qBAAX,EAAkC;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;IAAoD,IAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;MAAE,OAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;IAAiE,CAAjG,CAAV;IAA8GP,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;EAAiC;;EAAC,OAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;IAAuD,IAAIA,CAAC,GAAG,CAAR,EAAW;MAAEf,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;QAAErB,eAAe,CAACe,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;MAA4C,CAAnG;IAAuG,CAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;MAAEjB,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;IAA4E,CAApH,MAA0H;MAAElB,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;QAAEhB,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;MAAmF,CAApI;IAAwI;EAAE;;EAAC,OAAON,MAAP;AAAgB;;AAEthB,OAAOU,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,IAAIC,iBAAiB,GAAG,EAAxB;;AAEA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,IAAvC,EAA6C;EAC3C,IAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;EAAA,IACIC,GAAG,GAAGF,IAAI,CAACE,GADf;EAAA,IAEIC,OAAO,GAAGH,IAAI,CAACG,OAFnB;EAGA,IAAIC,QAAQ,GAAG,EAAf;EACA,IAAIC,YAAY,GAAG,EAAnB,CAL2C,CAKpB;;EAEvB,IAAIC,QAAQ,GAAGP,QAAQ,CAACQ,GAAT,CAAa,UAAUC,IAAV,EAAgB;IAC1C,IAAIC,KAAK,GAAG1B,aAAa,CAAC,EAAD,EAAKyB,IAAL,CAAzB;;IAEA,IAAIlB,GAAG,GAAGmB,KAAK,CAACR,EAAD,CAAf;IACAG,QAAQ,CAACd,GAAD,CAAR,GAAgBmB,KAAhB;IACAA,KAAK,CAACnB,GAAN,GAAYmB,KAAK,CAACnB,GAAN,IAAaA,GAAzB;IACA,OAAOmB,KAAP;EACD,CAPc,CAAf,CAP2C,CAcvC;;EAEJH,QAAQ,CAACjB,OAAT,CAAiB,UAAUmB,IAAV,EAAgB;IAC/B,IAAIE,SAAS,GAAGF,IAAI,CAACN,GAAD,CAApB;IACA,IAAIS,MAAM,GAAGP,QAAQ,CAACM,SAAD,CAArB,CAF+B,CAEG;;IAElC,IAAIC,MAAJ,EAAY;MACVA,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACC,QAAP,IAAmB,EAArC;MACAD,MAAM,CAACC,QAAP,CAAgB/B,IAAhB,CAAqB2B,IAArB;IACD,CAP8B,CAO7B;;;IAGF,IAAIE,SAAS,KAAKP,OAAd,IAAyB,CAACQ,MAAD,IAAWR,OAAO,KAAK,IAApD,EAA0D;MACxDE,YAAY,CAACxB,IAAb,CAAkB2B,IAAlB;IACD;EACF,CAbD;EAcA,OAAOH,YAAP;AACD;AACD;AACA;AACA;;;AAGA,SAASQ,cAAT,CAAwBd,QAAxB,EAAkCe,YAAlC,EAAgD;EAC9C,IAAIC,YAAY,GAAG,CAAnB;EACA,IAAIC,QAAQ,GAAG,IAAIC,GAAJ,EAAf;;EAEA,SAASC,GAAT,CAAaC,SAAb,EAAwB;IACtB,OAAO,CAACA,SAAS,IAAI,EAAd,EAAkBZ,GAAlB,CAAsB,UAAUC,IAAV,EAAgB;MAC3C,IAAIlB,GAAG,GAAGkB,IAAI,CAAClB,GAAf;MAAA,IACI8B,KAAK,GAAGZ,IAAI,CAACY,KADjB;MAAA,IAEIR,QAAQ,GAAGJ,IAAI,CAACI,QAFpB;MAAA,IAGIS,IAAI,GAAGrD,wBAAwB,CAACwC,IAAD,EAAO,CAAC,KAAD,EAAQ,OAAR,EAAiB,UAAjB,CAAP,CAHnC;;MAKA,IAAIc,WAAW,GAAG,WAAWd,IAAX,GAAkBY,KAAlB,GAA0B9B,GAA5C;;MAEA,IAAIiC,QAAQ,GAAGxC,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKsC,IAAL,CAAd,EAA0B,EAA1B,EAA8B;QACxD/B,GAAG,EAAEA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKkC,SAAxB,GAAoClC,GAApC,GAA0CgC,WADS;QAExDF,KAAK,EAAEE,WAFiD;QAGxDG,KAAK,EAAEX,YAAY,CAACN,IAAD;MAHqC,CAA9B,CAA5B,CAR2C,CAYvC;;;MAGJ,IAAIkB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;QACzC,IAAItC,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKkC,SAAxB,IAAqCJ,KAAK,KAAKI,SAA/C,IAA4DK,MAAM,CAACvC,GAAD,CAAN,KAAgBuC,MAAM,CAACT,KAAD,CAAlF,IAA6FL,YAAY,GAAGlB,iBAAhH,EAAmI;UACjIkB,YAAY,IAAI,CAAhB;UACApB,OAAO,CAAC,KAAD,EAAQ,uFAAuFmC,MAAvF,CAA8FxC,GAA9F,EAAmG,WAAnG,EAAgHwC,MAAhH,CAAuHV,KAAvH,EAA8H,GAA9H,CAAR,CAAP;QACD;;QAEDzB,OAAO,CAAC,CAACqB,QAAQ,CAACe,GAAT,CAAaX,KAAb,CAAF,EAAuB,mCAAmCU,MAAnC,CAA0CV,KAA1C,CAAvB,CAAP;QACAJ,QAAQ,CAACgB,GAAT,CAAaZ,KAAb;MACD;;MAED,IAAI,cAAcZ,IAAlB,EAAwB;QACtBe,QAAQ,CAACX,QAAT,GAAoBM,GAAG,CAACN,QAAD,CAAvB;MACD;;MAED,OAAOW,QAAP;IACD,CA9BM,CAAP;EA+BD;;EAED,OAAOL,GAAG,CAACnB,QAAD,CAAV;AACD;AACD;AACA;AACA;AACA;;;AAGA,eAAe,SAASkC,WAAT,CAAqBlC,QAArB,EAA+Ba,QAA/B,EAAyCsB,KAAzC,EAAgD;EAC7D,IAAIpB,YAAY,GAAGoB,KAAK,CAACpB,YAAzB;EAAA,IACIqB,UAAU,GAAGD,KAAK,CAACC,UADvB;EAEA,IAAIC,QAAQ,GAAG1C,KAAK,CAAC2C,MAAN,CAAa,EAAb,CAAf;;EAEA,IAAItC,QAAJ,EAAc;IACZqC,QAAQ,CAACE,OAAT,CAAiBzB,cAAjB,GAAkCuB,QAAQ,CAACE,OAAT,CAAiBvC,QAAjB,KAA8BA,QAA9B,GAAyCqC,QAAQ,CAACE,OAAT,CAAiBzB,cAA1D,GAA2EA,cAAc,CAACsB,UAAU,GAAGrC,mBAAmB,CAACC,QAAD,EAAWhB,aAAa,CAAC;MACnLkB,EAAE,EAAE,IAD+K;MAEnLC,GAAG,EAAE,KAF8K;MAGnLC,OAAO,EAAE;IAH0K,CAAD,EAIjLgC,UAAU,KAAK,IAAf,GAAsBA,UAAtB,GAAmC,EAJ8I,CAAxB,CAAtB,GAIzFpC,QAJ8E,EAIpEe,YAJoE,CAA3H;IAKAsB,QAAQ,CAACE,OAAT,CAAiBvC,QAAjB,GAA4BA,QAA5B;EACD,CAPD,MAOO;IACLqC,QAAQ,CAACE,OAAT,CAAiBzB,cAAjB,GAAkCuB,QAAQ,CAACE,OAAT,CAAiB1B,QAAjB,KAA8BA,QAA9B,GAAyCwB,QAAQ,CAACE,OAAT,CAAiBzB,cAA1D,GAA2EA,cAAc,CAACjB,qBAAqB,CAACgB,QAAD,CAAtB,EAAkCE,YAAlC,CAA3H;EACD;;EAED,OAAOsB,QAAQ,CAACE,OAAT,CAAiBzB,cAAxB;AACD"},"metadata":{},"sourceType":"module"}