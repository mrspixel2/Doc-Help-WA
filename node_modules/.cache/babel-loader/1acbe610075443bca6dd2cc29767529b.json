{"ast":null,"code":"import * as React from 'react';\nimport ResizeObserver from 'rc-resize-observer';\nimport BodyRow from './BodyRow';\nimport TableContext from '../context/TableContext';\nimport ExpandedRow from './ExpandedRow';\nimport BodyContext from '../context/BodyContext';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport ResizeContext from '../context/ResizeContext';\n\nfunction Body(_ref) {\n  var data = _ref.data,\n      getRowKey = _ref.getRowKey,\n      measureColumnWidth = _ref.measureColumnWidth,\n      expandedKeys = _ref.expandedKeys,\n      onRow = _ref.onRow,\n      rowExpandable = _ref.rowExpandable,\n      emptyNode = _ref.emptyNode,\n      childrenColumnName = _ref.childrenColumnName;\n\n  var _React$useContext = React.useContext(ResizeContext),\n      onColumnResize = _React$useContext.onColumnResize;\n\n  var _React$useContext2 = React.useContext(TableContext),\n      prefixCls = _React$useContext2.prefixCls,\n      getComponent = _React$useContext2.getComponent;\n\n  var _React$useContext3 = React.useContext(BodyContext),\n      fixHeader = _React$useContext3.fixHeader,\n      horizonScroll = _React$useContext3.horizonScroll,\n      flattenColumns = _React$useContext3.flattenColumns,\n      componentWidth = _React$useContext3.componentWidth;\n\n  return React.useMemo(function () {\n    var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n    var trComponent = getComponent(['body', 'row'], 'tr');\n    var tdComponent = getComponent(['body', 'cell'], 'td');\n    var rows;\n\n    if (data.length) {\n      rows = data.map(function (record, index) {\n        var key = getRowKey(record, index);\n        return React.createElement(BodyRow, {\n          key: key,\n          rowKey: key,\n          record: record,\n          recordKey: key,\n          index: index,\n          rowComponent: trComponent,\n          cellComponent: tdComponent,\n          expandedKeys: expandedKeys,\n          onRow: onRow,\n          getRowKey: getRowKey,\n          rowExpandable: rowExpandable,\n          childrenColumnName: childrenColumnName\n        });\n      });\n    } else {\n      rows = React.createElement(ExpandedRow, {\n        expanded: true,\n        className: \"\".concat(prefixCls, \"-placeholder\"),\n        prefixCls: prefixCls,\n        fixHeader: fixHeader,\n        fixColumn: horizonScroll,\n        horizonScroll: horizonScroll,\n        component: trComponent,\n        componentWidth: componentWidth,\n        cellComponent: tdComponent,\n        colSpan: flattenColumns.length\n      }, emptyNode);\n    }\n\n    var columnsKey = getColumnsKey(flattenColumns);\n    return React.createElement(WrapperComponent, {\n      className: \"\".concat(prefixCls, \"-tbody\")\n    }, measureColumnWidth && React.createElement(\"tr\", {\n      \"aria-hidden\": \"true\",\n      className: \"\".concat(prefixCls, \"-measure-row\"),\n      style: {\n        height: 0\n      }\n    }, columnsKey.map(function (columnKey) {\n      return React.createElement(ResizeObserver, {\n        key: columnKey,\n        onResize: function onResize(_ref2) {\n          var offsetWidth = _ref2.offsetWidth;\n          onColumnResize(columnKey, offsetWidth);\n        }\n      }, React.createElement(\"td\", {\n        style: {\n          padding: 0,\n          border: 0,\n          height: 0\n        }\n      }));\n    })), rows);\n  }, [data, prefixCls, onRow, measureColumnWidth, expandedKeys, getRowKey, getComponent, componentWidth, emptyNode, flattenColumns]);\n}\n\nvar MemoBody = React.memo(Body);\nMemoBody.displayName = 'Body';\nexport default MemoBody;","map":{"version":3,"names":["React","ResizeObserver","BodyRow","TableContext","ExpandedRow","BodyContext","getColumnsKey","ResizeContext","Body","_ref","data","getRowKey","measureColumnWidth","expandedKeys","onRow","rowExpandable","emptyNode","childrenColumnName","_React$useContext","useContext","onColumnResize","_React$useContext2","prefixCls","getComponent","_React$useContext3","fixHeader","horizonScroll","flattenColumns","componentWidth","useMemo","WrapperComponent","trComponent","tdComponent","rows","length","map","record","index","key","createElement","rowKey","recordKey","rowComponent","cellComponent","expanded","className","concat","fixColumn","component","colSpan","columnsKey","style","height","columnKey","onResize","_ref2","offsetWidth","padding","border","MemoBody","memo","displayName"],"sources":["E:/Work/PFE/Project folder/DocHelp-WA/node_modules/rc-table/es/Body/index.js"],"sourcesContent":["import * as React from 'react';\nimport ResizeObserver from 'rc-resize-observer';\nimport BodyRow from './BodyRow';\nimport TableContext from '../context/TableContext';\nimport ExpandedRow from './ExpandedRow';\nimport BodyContext from '../context/BodyContext';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport ResizeContext from '../context/ResizeContext';\n\nfunction Body(_ref) {\n  var data = _ref.data,\n      getRowKey = _ref.getRowKey,\n      measureColumnWidth = _ref.measureColumnWidth,\n      expandedKeys = _ref.expandedKeys,\n      onRow = _ref.onRow,\n      rowExpandable = _ref.rowExpandable,\n      emptyNode = _ref.emptyNode,\n      childrenColumnName = _ref.childrenColumnName;\n\n  var _React$useContext = React.useContext(ResizeContext),\n      onColumnResize = _React$useContext.onColumnResize;\n\n  var _React$useContext2 = React.useContext(TableContext),\n      prefixCls = _React$useContext2.prefixCls,\n      getComponent = _React$useContext2.getComponent;\n\n  var _React$useContext3 = React.useContext(BodyContext),\n      fixHeader = _React$useContext3.fixHeader,\n      horizonScroll = _React$useContext3.horizonScroll,\n      flattenColumns = _React$useContext3.flattenColumns,\n      componentWidth = _React$useContext3.componentWidth;\n\n  return React.useMemo(function () {\n    var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n    var trComponent = getComponent(['body', 'row'], 'tr');\n    var tdComponent = getComponent(['body', 'cell'], 'td');\n    var rows;\n\n    if (data.length) {\n      rows = data.map(function (record, index) {\n        var key = getRowKey(record, index);\n        return React.createElement(BodyRow, {\n          key: key,\n          rowKey: key,\n          record: record,\n          recordKey: key,\n          index: index,\n          rowComponent: trComponent,\n          cellComponent: tdComponent,\n          expandedKeys: expandedKeys,\n          onRow: onRow,\n          getRowKey: getRowKey,\n          rowExpandable: rowExpandable,\n          childrenColumnName: childrenColumnName\n        });\n      });\n    } else {\n      rows = React.createElement(ExpandedRow, {\n        expanded: true,\n        className: \"\".concat(prefixCls, \"-placeholder\"),\n        prefixCls: prefixCls,\n        fixHeader: fixHeader,\n        fixColumn: horizonScroll,\n        horizonScroll: horizonScroll,\n        component: trComponent,\n        componentWidth: componentWidth,\n        cellComponent: tdComponent,\n        colSpan: flattenColumns.length\n      }, emptyNode);\n    }\n\n    var columnsKey = getColumnsKey(flattenColumns);\n    return React.createElement(WrapperComponent, {\n      className: \"\".concat(prefixCls, \"-tbody\")\n    }, measureColumnWidth && React.createElement(\"tr\", {\n      \"aria-hidden\": \"true\",\n      className: \"\".concat(prefixCls, \"-measure-row\"),\n      style: {\n        height: 0\n      }\n    }, columnsKey.map(function (columnKey) {\n      return React.createElement(ResizeObserver, {\n        key: columnKey,\n        onResize: function onResize(_ref2) {\n          var offsetWidth = _ref2.offsetWidth;\n          onColumnResize(columnKey, offsetWidth);\n        }\n      }, React.createElement(\"td\", {\n        style: {\n          padding: 0,\n          border: 0,\n          height: 0\n        }\n      }));\n    })), rows);\n  }, [data, prefixCls, onRow, measureColumnWidth, expandedKeys, getRowKey, getComponent, componentWidth, emptyNode, flattenColumns]);\n}\n\nvar MemoBody = React.memo(Body);\nMemoBody.displayName = 'Body';\nexport default MemoBody;"],"mappings":"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"},"metadata":{},"sourceType":"module"}